// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class StorageNetworkVolumeVolumePermissionNf {
    /**
     * @return All squash permission.
     * 
     */
    private @Nullable List<String> allSquashes;
    /**
     * @return No squash permission.
     * 
     */
    private @Nullable List<String> noSquashes;
    /**
     * @return Read only access.
     * 
     */
    private @Nullable List<String> readOnlies;
    /**
     * @return Read/Write access.
     * 
     */
    private @Nullable List<String> readWrites;
    /**
     * @return Root squash permission.
     * 
     */
    private @Nullable List<String> rootSquashes;

    private StorageNetworkVolumeVolumePermissionNf() {}
    /**
     * @return All squash permission.
     * 
     */
    public List<String> allSquashes() {
        return this.allSquashes == null ? List.of() : this.allSquashes;
    }
    /**
     * @return No squash permission.
     * 
     */
    public List<String> noSquashes() {
        return this.noSquashes == null ? List.of() : this.noSquashes;
    }
    /**
     * @return Read only access.
     * 
     */
    public List<String> readOnlies() {
        return this.readOnlies == null ? List.of() : this.readOnlies;
    }
    /**
     * @return Read/Write access.
     * 
     */
    public List<String> readWrites() {
        return this.readWrites == null ? List.of() : this.readWrites;
    }
    /**
     * @return Root squash permission.
     * 
     */
    public List<String> rootSquashes() {
        return this.rootSquashes == null ? List.of() : this.rootSquashes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageNetworkVolumeVolumePermissionNf defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allSquashes;
        private @Nullable List<String> noSquashes;
        private @Nullable List<String> readOnlies;
        private @Nullable List<String> readWrites;
        private @Nullable List<String> rootSquashes;
        public Builder() {}
        public Builder(StorageNetworkVolumeVolumePermissionNf defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allSquashes = defaults.allSquashes;
    	      this.noSquashes = defaults.noSquashes;
    	      this.readOnlies = defaults.readOnlies;
    	      this.readWrites = defaults.readWrites;
    	      this.rootSquashes = defaults.rootSquashes;
        }

        @CustomType.Setter
        public Builder allSquashes(@Nullable List<String> allSquashes) {

            this.allSquashes = allSquashes;
            return this;
        }
        public Builder allSquashes(String... allSquashes) {
            return allSquashes(List.of(allSquashes));
        }
        @CustomType.Setter
        public Builder noSquashes(@Nullable List<String> noSquashes) {

            this.noSquashes = noSquashes;
            return this;
        }
        public Builder noSquashes(String... noSquashes) {
            return noSquashes(List.of(noSquashes));
        }
        @CustomType.Setter
        public Builder readOnlies(@Nullable List<String> readOnlies) {

            this.readOnlies = readOnlies;
            return this;
        }
        public Builder readOnlies(String... readOnlies) {
            return readOnlies(List.of(readOnlies));
        }
        @CustomType.Setter
        public Builder readWrites(@Nullable List<String> readWrites) {

            this.readWrites = readWrites;
            return this;
        }
        public Builder readWrites(String... readWrites) {
            return readWrites(List.of(readWrites));
        }
        @CustomType.Setter
        public Builder rootSquashes(@Nullable List<String> rootSquashes) {

            this.rootSquashes = rootSquashes;
            return this;
        }
        public Builder rootSquashes(String... rootSquashes) {
            return rootSquashes(List.of(rootSquashes));
        }
        public StorageNetworkVolumeVolumePermissionNf build() {
            final var _resultValue = new StorageNetworkVolumeVolumePermissionNf();
            _resultValue.allSquashes = allSquashes;
            _resultValue.noSquashes = noSquashes;
            _resultValue.readOnlies = readOnlies;
            _resultValue.readWrites = readWrites;
            _resultValue.rootSquashes = rootSquashes;
            return _resultValue;
        }
    }
}
