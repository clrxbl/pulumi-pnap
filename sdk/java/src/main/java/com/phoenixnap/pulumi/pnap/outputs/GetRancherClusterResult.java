// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetRancherClusterMetadata;
import com.phoenixnap.pulumi.pnap.outputs.GetRancherClusterNodePool;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRancherClusterResult {
    /**
     * @return Cluster description.
     * 
     */
    private String description;
    /**
     * @return The cluster identifier.
     * 
     */
    private String id;
    /**
     * @return The Rancher version that was installed on the cluster during the first creation process.
     * 
     */
    private String initialClusterVersion;
    /**
     * @return Deployment location.
     * 
     */
    private String location;
    /**
     * @return Connection parameters to use to connect to the Rancher Server Administrative GUI.
     * 
     */
    private List<GetRancherClusterMetadata> metadatas;
    /**
     * @return The name of the node pool.
     * 
     */
    private String name;
    /**
     * @return The node pools associated with the cluster.
     * 
     */
    private List<GetRancherClusterNodePool> nodePools;
    /**
     * @return The cluster status.
     * 
     */
    private String statusDescription;

    private GetRancherClusterResult() {}
    /**
     * @return Cluster description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The cluster identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Rancher version that was installed on the cluster during the first creation process.
     * 
     */
    public String initialClusterVersion() {
        return this.initialClusterVersion;
    }
    /**
     * @return Deployment location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Connection parameters to use to connect to the Rancher Server Administrative GUI.
     * 
     */
    public List<GetRancherClusterMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return The name of the node pool.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The node pools associated with the cluster.
     * 
     */
    public List<GetRancherClusterNodePool> nodePools() {
        return this.nodePools;
    }
    /**
     * @return The cluster status.
     * 
     */
    public String statusDescription() {
        return this.statusDescription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRancherClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String initialClusterVersion;
        private String location;
        private List<GetRancherClusterMetadata> metadatas;
        private String name;
        private List<GetRancherClusterNodePool> nodePools;
        private String statusDescription;
        public Builder() {}
        public Builder(GetRancherClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.initialClusterVersion = defaults.initialClusterVersion;
    	      this.location = defaults.location;
    	      this.metadatas = defaults.metadatas;
    	      this.name = defaults.name;
    	      this.nodePools = defaults.nodePools;
    	      this.statusDescription = defaults.statusDescription;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder initialClusterVersion(String initialClusterVersion) {
            if (initialClusterVersion == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "initialClusterVersion");
            }
            this.initialClusterVersion = initialClusterVersion;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(List<GetRancherClusterMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetRancherClusterMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodePools(List<GetRancherClusterNodePool> nodePools) {
            if (nodePools == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "nodePools");
            }
            this.nodePools = nodePools;
            return this;
        }
        public Builder nodePools(GetRancherClusterNodePool... nodePools) {
            return nodePools(List.of(nodePools));
        }
        @CustomType.Setter
        public Builder statusDescription(String statusDescription) {
            if (statusDescription == null) {
              throw new MissingRequiredPropertyException("GetRancherClusterResult", "statusDescription");
            }
            this.statusDescription = statusDescription;
            return this;
        }
        public GetRancherClusterResult build() {
            final var _resultValue = new GetRancherClusterResult();
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.initialClusterVersion = initialClusterVersion;
            _resultValue.location = location;
            _resultValue.metadatas = metadatas;
            _resultValue.name = name;
            _resultValue.nodePools = nodePools;
            _resultValue.statusDescription = statusDescription;
            return _resultValue;
        }
    }
}
