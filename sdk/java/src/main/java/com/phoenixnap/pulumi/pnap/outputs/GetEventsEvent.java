// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetEventsEventUserInfo;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEventsEvent {
    /**
     * @return Event name.
     * 
     */
    private String name;
    /**
     * @return The UTC time the event initiated.
     * 
     */
    private String timestamp;
    /**
     * @return Details related to the user / application.
     * 
     */
    private List<GetEventsEventUserInfo> userInfos;

    private GetEventsEvent() {}
    /**
     * @return Event name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The UTC time the event initiated.
     * 
     */
    public String timestamp() {
        return this.timestamp;
    }
    /**
     * @return Details related to the user / application.
     * 
     */
    public List<GetEventsEventUserInfo> userInfos() {
        return this.userInfos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsEvent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String timestamp;
        private List<GetEventsEventUserInfo> userInfos;
        public Builder() {}
        public Builder(GetEventsEvent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.timestamp = defaults.timestamp;
    	      this.userInfos = defaults.userInfos;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetEventsEvent", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder timestamp(String timestamp) {
            if (timestamp == null) {
              throw new MissingRequiredPropertyException("GetEventsEvent", "timestamp");
            }
            this.timestamp = timestamp;
            return this;
        }
        @CustomType.Setter
        public Builder userInfos(List<GetEventsEventUserInfo> userInfos) {
            if (userInfos == null) {
              throw new MissingRequiredPropertyException("GetEventsEvent", "userInfos");
            }
            this.userInfos = userInfos;
            return this;
        }
        public Builder userInfos(GetEventsEventUserInfo... userInfos) {
            return userInfos(List.of(userInfos));
        }
        public GetEventsEvent build() {
            final var _resultValue = new GetEventsEvent();
            _resultValue.name = name;
            _resultValue.timestamp = timestamp;
            _resultValue.userInfos = userInfos;
            return _resultValue;
        }
    }
}
