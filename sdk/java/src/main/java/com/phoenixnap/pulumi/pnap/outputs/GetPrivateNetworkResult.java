// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetPrivateNetworkMembership;
import com.phoenixnap.pulumi.pnap.outputs.GetPrivateNetworkServer;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPrivateNetworkResult {
    /**
     * @return IP range associated with this private network in CIDR notation.
     * * ` vlan_id  `- The VLAN of this private network.
     * 
     */
    private String cidr;
    /**
     * @return Date and time when this private network was created.
     * 
     */
    private String createdOn;
    /**
     * @return The description of this private network.
     * 
     */
    private String description;
    /**
     * @return The server identifier.
     * 
     */
    private String id;
    /**
     * @return The location of this private network.
     * 
     */
    private String location;
    /**
     * @return Identifies network as the default private network for the specified location. Default value is `false`.
     * 
     */
    private Boolean locationDefault;
    /**
     * @return A list of resources that are members of this private network.
     * 
     */
    private List<GetPrivateNetworkMembership> memberships;
    /**
     * @return The friendly name of this private network.
     * 
     */
    private String name;
    private List<GetPrivateNetworkServer> servers;
    /**
     * @return The status of the private network.
     * 
     */
    private String status;
    /**
     * @return The type of the private network.
     * * ` servers  ` - (Deprecated) List of servers&#39; details linked to the private network.
     * 
     */
    private String type;
    private Integer vlanId;

    private GetPrivateNetworkResult() {}
    /**
     * @return IP range associated with this private network in CIDR notation.
     * * ` vlan_id  `- The VLAN of this private network.
     * 
     */
    public String cidr() {
        return this.cidr;
    }
    /**
     * @return Date and time when this private network was created.
     * 
     */
    public String createdOn() {
        return this.createdOn;
    }
    /**
     * @return The description of this private network.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The server identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of this private network.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Identifies network as the default private network for the specified location. Default value is `false`.
     * 
     */
    public Boolean locationDefault() {
        return this.locationDefault;
    }
    /**
     * @return A list of resources that are members of this private network.
     * 
     */
    public List<GetPrivateNetworkMembership> memberships() {
        return this.memberships;
    }
    /**
     * @return The friendly name of this private network.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetPrivateNetworkServer> servers() {
        return this.servers;
    }
    /**
     * @return The status of the private network.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The type of the private network.
     * * ` servers  ` - (Deprecated) List of servers&#39; details linked to the private network.
     * 
     */
    public String type() {
        return this.type;
    }
    public Integer vlanId() {
        return this.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateNetworkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cidr;
        private String createdOn;
        private String description;
        private String id;
        private String location;
        private Boolean locationDefault;
        private List<GetPrivateNetworkMembership> memberships;
        private String name;
        private List<GetPrivateNetworkServer> servers;
        private String status;
        private String type;
        private Integer vlanId;
        public Builder() {}
        public Builder(GetPrivateNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidr = defaults.cidr;
    	      this.createdOn = defaults.createdOn;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.locationDefault = defaults.locationDefault;
    	      this.memberships = defaults.memberships;
    	      this.name = defaults.name;
    	      this.servers = defaults.servers;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder cidr(String cidr) {
            if (cidr == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "cidr");
            }
            this.cidr = cidr;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(String createdOn) {
            if (createdOn == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "createdOn");
            }
            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder locationDefault(Boolean locationDefault) {
            if (locationDefault == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "locationDefault");
            }
            this.locationDefault = locationDefault;
            return this;
        }
        @CustomType.Setter
        public Builder memberships(List<GetPrivateNetworkMembership> memberships) {
            if (memberships == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "memberships");
            }
            this.memberships = memberships;
            return this;
        }
        public Builder memberships(GetPrivateNetworkMembership... memberships) {
            return memberships(List.of(memberships));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder servers(List<GetPrivateNetworkServer> servers) {
            if (servers == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "servers");
            }
            this.servers = servers;
            return this;
        }
        public Builder servers(GetPrivateNetworkServer... servers) {
            return servers(List.of(servers));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(Integer vlanId) {
            if (vlanId == null) {
              throw new MissingRequiredPropertyException("GetPrivateNetworkResult", "vlanId");
            }
            this.vlanId = vlanId;
            return this;
        }
        public GetPrivateNetworkResult build() {
            final var _resultValue = new GetPrivateNetworkResult();
            _resultValue.cidr = cidr;
            _resultValue.createdOn = createdOn;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.locationDefault = locationDefault;
            _resultValue.memberships = memberships;
            _resultValue.name = name;
            _resultValue.servers = servers;
            _resultValue.status = status;
            _resultValue.type = type;
            _resultValue.vlanId = vlanId;
            return _resultValue;
        }
    }
}
