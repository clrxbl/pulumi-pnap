// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetProductsProduct;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProductsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The code identifying the location.
     * 
     */
    private @Nullable String location;
    /**
     * @return The product category.
     * 
     */
    private @Nullable String productCategory;
    /**
     * @return The code identifying the product.
     * 
     */
    private @Nullable String productCode;
    /**
     * @return The list of products recorded.
     * 
     */
    private List<GetProductsProduct> products;
    private @Nullable String skuCode;

    private GetProductsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The code identifying the location.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The product category.
     * 
     */
    public Optional<String> productCategory() {
        return Optional.ofNullable(this.productCategory);
    }
    /**
     * @return The code identifying the product.
     * 
     */
    public Optional<String> productCode() {
        return Optional.ofNullable(this.productCode);
    }
    /**
     * @return The list of products recorded.
     * 
     */
    public List<GetProductsProduct> products() {
        return this.products;
    }
    public Optional<String> skuCode() {
        return Optional.ofNullable(this.skuCode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String location;
        private @Nullable String productCategory;
        private @Nullable String productCode;
        private List<GetProductsProduct> products;
        private @Nullable String skuCode;
        public Builder() {}
        public Builder(GetProductsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.productCategory = defaults.productCategory;
    	      this.productCode = defaults.productCode;
    	      this.products = defaults.products;
    	      this.skuCode = defaults.skuCode;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProductsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder productCategory(@Nullable String productCategory) {

            this.productCategory = productCategory;
            return this;
        }
        @CustomType.Setter
        public Builder productCode(@Nullable String productCode) {

            this.productCode = productCode;
            return this;
        }
        @CustomType.Setter
        public Builder products(List<GetProductsProduct> products) {
            if (products == null) {
              throw new MissingRequiredPropertyException("GetProductsResult", "products");
            }
            this.products = products;
            return this;
        }
        public Builder products(GetProductsProduct... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder skuCode(@Nullable String skuCode) {

            this.skuCode = skuCode;
            return this;
        }
        public GetProductsResult build() {
            final var _resultValue = new GetProductsResult();
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.productCategory = productCategory;
            _resultValue.productCode = productCode;
            _resultValue.products = products;
            _resultValue.skuCode = skuCode;
            return _resultValue;
        }
    }
}
