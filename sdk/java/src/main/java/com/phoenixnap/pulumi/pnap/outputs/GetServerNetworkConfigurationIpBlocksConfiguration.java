// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetServerNetworkConfigurationIpBlocksConfigurationIpBlock;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServerNetworkConfigurationIpBlocksConfiguration {
    /**
     * @return Determines the approach for configuring IP blocks for the server being provisioned.
     * 
     */
    private String configurationType;
    /**
     * @return The IP blocks assigned to this server.
     * 
     */
    private List<GetServerNetworkConfigurationIpBlocksConfigurationIpBlock> ipBlocks;

    private GetServerNetworkConfigurationIpBlocksConfiguration() {}
    /**
     * @return Determines the approach for configuring IP blocks for the server being provisioned.
     * 
     */
    public String configurationType() {
        return this.configurationType;
    }
    /**
     * @return The IP blocks assigned to this server.
     * 
     */
    public List<GetServerNetworkConfigurationIpBlocksConfigurationIpBlock> ipBlocks() {
        return this.ipBlocks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerNetworkConfigurationIpBlocksConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationType;
        private List<GetServerNetworkConfigurationIpBlocksConfigurationIpBlock> ipBlocks;
        public Builder() {}
        public Builder(GetServerNetworkConfigurationIpBlocksConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationType = defaults.configurationType;
    	      this.ipBlocks = defaults.ipBlocks;
        }

        @CustomType.Setter
        public Builder configurationType(String configurationType) {
            if (configurationType == null) {
              throw new MissingRequiredPropertyException("GetServerNetworkConfigurationIpBlocksConfiguration", "configurationType");
            }
            this.configurationType = configurationType;
            return this;
        }
        @CustomType.Setter
        public Builder ipBlocks(List<GetServerNetworkConfigurationIpBlocksConfigurationIpBlock> ipBlocks) {
            if (ipBlocks == null) {
              throw new MissingRequiredPropertyException("GetServerNetworkConfigurationIpBlocksConfiguration", "ipBlocks");
            }
            this.ipBlocks = ipBlocks;
            return this;
        }
        public Builder ipBlocks(GetServerNetworkConfigurationIpBlocksConfigurationIpBlock... ipBlocks) {
            return ipBlocks(List.of(ipBlocks));
        }
        public GetServerNetworkConfigurationIpBlocksConfiguration build() {
            final var _resultValue = new GetServerNetworkConfigurationIpBlocksConfiguration();
            _resultValue.configurationType = configurationType;
            _resultValue.ipBlocks = ipBlocks;
            return _resultValue;
        }
    }
}
