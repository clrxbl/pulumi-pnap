// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.StorageNetworkVolumeVolumePermission;
import com.phoenixnap.pulumi.pnap.outputs.StorageNetworkVolumeVolumeTag;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StorageNetworkVolumeVolume {
    /**
     * @return Capacity of volume in GB. Currently only whole numbers and multiples of 1000 GB are supported.
     * 
     */
    private Integer capacityInGb;
    /**
     * @return Date and time when this volume was created.
     * 
     */
    private @Nullable String createdOn;
    /**
     * @return Date and time of the initial request for volume deletion.
     * 
     */
    private @Nullable String deleteRequestedOn;
    /**
     * @return Volume description.
     * 
     */
    private @Nullable String description;
    /**
     * @return The unique id of the tag.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the tag.
     * 
     */
    private String name;
    /**
     * @return Volume&#39;s full path. It is in form of `/{volumeId}/pathSuffix`.
     * 
     */
    private @Nullable String path;
    /**
     * @return Last part of volume&#39;s path.
     * 
     */
    private @Nullable String pathSuffix;
    /**
     * @return Permissions for the volume.
     * 
     */
    private @Nullable List<StorageNetworkVolumeVolumePermission> permissions;
    /**
     * @return File system protocol.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return Volume&#39;s status.
     * 
     */
    private @Nullable String status;
    /**
     * @return Tags to set to the volume.
     * 
     */
    private @Nullable List<StorageNetworkVolumeVolumeTag> tags;
    /**
     * @return Used capacity in GB, updated periodically.
     * 
     */
    private @Nullable Integer usedCapacityInGb;

    private StorageNetworkVolumeVolume() {}
    /**
     * @return Capacity of volume in GB. Currently only whole numbers and multiples of 1000 GB are supported.
     * 
     */
    public Integer capacityInGb() {
        return this.capacityInGb;
    }
    /**
     * @return Date and time when this volume was created.
     * 
     */
    public Optional<String> createdOn() {
        return Optional.ofNullable(this.createdOn);
    }
    /**
     * @return Date and time of the initial request for volume deletion.
     * 
     */
    public Optional<String> deleteRequestedOn() {
        return Optional.ofNullable(this.deleteRequestedOn);
    }
    /**
     * @return Volume description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The unique id of the tag.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the tag.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Volume&#39;s full path. It is in form of `/{volumeId}/pathSuffix`.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Last part of volume&#39;s path.
     * 
     */
    public Optional<String> pathSuffix() {
        return Optional.ofNullable(this.pathSuffix);
    }
    /**
     * @return Permissions for the volume.
     * 
     */
    public List<StorageNetworkVolumeVolumePermission> permissions() {
        return this.permissions == null ? List.of() : this.permissions;
    }
    /**
     * @return File system protocol.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Volume&#39;s status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Tags to set to the volume.
     * 
     */
    public List<StorageNetworkVolumeVolumeTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Used capacity in GB, updated periodically.
     * 
     */
    public Optional<Integer> usedCapacityInGb() {
        return Optional.ofNullable(this.usedCapacityInGb);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageNetworkVolumeVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer capacityInGb;
        private @Nullable String createdOn;
        private @Nullable String deleteRequestedOn;
        private @Nullable String description;
        private @Nullable String id;
        private String name;
        private @Nullable String path;
        private @Nullable String pathSuffix;
        private @Nullable List<StorageNetworkVolumeVolumePermission> permissions;
        private @Nullable String protocol;
        private @Nullable String status;
        private @Nullable List<StorageNetworkVolumeVolumeTag> tags;
        private @Nullable Integer usedCapacityInGb;
        public Builder() {}
        public Builder(StorageNetworkVolumeVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityInGb = defaults.capacityInGb;
    	      this.createdOn = defaults.createdOn;
    	      this.deleteRequestedOn = defaults.deleteRequestedOn;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.pathSuffix = defaults.pathSuffix;
    	      this.permissions = defaults.permissions;
    	      this.protocol = defaults.protocol;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.usedCapacityInGb = defaults.usedCapacityInGb;
        }

        @CustomType.Setter
        public Builder capacityInGb(Integer capacityInGb) {
            if (capacityInGb == null) {
              throw new MissingRequiredPropertyException("StorageNetworkVolumeVolume", "capacityInGb");
            }
            this.capacityInGb = capacityInGb;
            return this;
        }
        @CustomType.Setter
        public Builder createdOn(@Nullable String createdOn) {

            this.createdOn = createdOn;
            return this;
        }
        @CustomType.Setter
        public Builder deleteRequestedOn(@Nullable String deleteRequestedOn) {

            this.deleteRequestedOn = deleteRequestedOn;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("StorageNetworkVolumeVolume", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder pathSuffix(@Nullable String pathSuffix) {

            this.pathSuffix = pathSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(@Nullable List<StorageNetworkVolumeVolumePermission> permissions) {

            this.permissions = permissions;
            return this;
        }
        public Builder permissions(StorageNetworkVolumeVolumePermission... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<StorageNetworkVolumeVolumeTag> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(StorageNetworkVolumeVolumeTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder usedCapacityInGb(@Nullable Integer usedCapacityInGb) {

            this.usedCapacityInGb = usedCapacityInGb;
            return this;
        }
        public StorageNetworkVolumeVolume build() {
            final var _resultValue = new StorageNetworkVolumeVolume();
            _resultValue.capacityInGb = capacityInGb;
            _resultValue.createdOn = createdOn;
            _resultValue.deleteRequestedOn = deleteRequestedOn;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.path = path;
            _resultValue.pathSuffix = pathSuffix;
            _resultValue.permissions = permissions;
            _resultValue.protocol = protocol;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.usedCapacityInGb = usedCapacityInGb;
            return _resultValue;
        }
    }
}
