// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.inputs;

import com.phoenixnap.pulumi.pnap.inputs.GetEventsEvent;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;


public final class GetEventsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEventsPlainArgs Empty = new GetEventsPlainArgs();

    /**
     * Block `events` has field `name`.
     * 
     */
    @Import(name="events", required=true)
    private List<GetEventsEvent> events;

    /**
     * @return Block `events` has field `name`.
     * 
     */
    public List<GetEventsEvent> events() {
        return this.events;
    }

    private GetEventsPlainArgs() {}

    private GetEventsPlainArgs(GetEventsPlainArgs $) {
        this.events = $.events;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEventsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEventsPlainArgs $;

        public Builder() {
            $ = new GetEventsPlainArgs();
        }

        public Builder(GetEventsPlainArgs defaults) {
            $ = new GetEventsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param events Block `events` has field `name`.
         * 
         * @return builder
         * 
         */
        public Builder events(List<GetEventsEvent> events) {
            $.events = events;
            return this;
        }

        /**
         * @param events Block `events` has field `name`.
         * 
         * @return builder
         * 
         */
        public Builder events(GetEventsEvent... events) {
            return events(List.of(events));
        }

        public GetEventsPlainArgs build() {
            if ($.events == null) {
                throw new MissingRequiredPropertyException("GetEventsPlainArgs", "events");
            }
            return $;
        }
    }

}
