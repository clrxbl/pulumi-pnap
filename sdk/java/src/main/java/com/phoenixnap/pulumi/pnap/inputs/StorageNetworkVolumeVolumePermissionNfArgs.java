// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageNetworkVolumeVolumePermissionNfArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageNetworkVolumeVolumePermissionNfArgs Empty = new StorageNetworkVolumeVolumePermissionNfArgs();

    /**
     * All squash permission.
     * 
     */
    @Import(name="allSquashes")
    private @Nullable Output<List<String>> allSquashes;

    /**
     * @return All squash permission.
     * 
     */
    public Optional<Output<List<String>>> allSquashes() {
        return Optional.ofNullable(this.allSquashes);
    }

    /**
     * No squash permission.
     * 
     */
    @Import(name="noSquashes")
    private @Nullable Output<List<String>> noSquashes;

    /**
     * @return No squash permission.
     * 
     */
    public Optional<Output<List<String>>> noSquashes() {
        return Optional.ofNullable(this.noSquashes);
    }

    /**
     * Read only access.
     * 
     */
    @Import(name="readOnlies")
    private @Nullable Output<List<String>> readOnlies;

    /**
     * @return Read only access.
     * 
     */
    public Optional<Output<List<String>>> readOnlies() {
        return Optional.ofNullable(this.readOnlies);
    }

    /**
     * Read/Write access.
     * 
     */
    @Import(name="readWrites")
    private @Nullable Output<List<String>> readWrites;

    /**
     * @return Read/Write access.
     * 
     */
    public Optional<Output<List<String>>> readWrites() {
        return Optional.ofNullable(this.readWrites);
    }

    /**
     * Root squash permission.
     * 
     */
    @Import(name="rootSquashes")
    private @Nullable Output<List<String>> rootSquashes;

    /**
     * @return Root squash permission.
     * 
     */
    public Optional<Output<List<String>>> rootSquashes() {
        return Optional.ofNullable(this.rootSquashes);
    }

    private StorageNetworkVolumeVolumePermissionNfArgs() {}

    private StorageNetworkVolumeVolumePermissionNfArgs(StorageNetworkVolumeVolumePermissionNfArgs $) {
        this.allSquashes = $.allSquashes;
        this.noSquashes = $.noSquashes;
        this.readOnlies = $.readOnlies;
        this.readWrites = $.readWrites;
        this.rootSquashes = $.rootSquashes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageNetworkVolumeVolumePermissionNfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageNetworkVolumeVolumePermissionNfArgs $;

        public Builder() {
            $ = new StorageNetworkVolumeVolumePermissionNfArgs();
        }

        public Builder(StorageNetworkVolumeVolumePermissionNfArgs defaults) {
            $ = new StorageNetworkVolumeVolumePermissionNfArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allSquashes All squash permission.
         * 
         * @return builder
         * 
         */
        public Builder allSquashes(@Nullable Output<List<String>> allSquashes) {
            $.allSquashes = allSquashes;
            return this;
        }

        /**
         * @param allSquashes All squash permission.
         * 
         * @return builder
         * 
         */
        public Builder allSquashes(List<String> allSquashes) {
            return allSquashes(Output.of(allSquashes));
        }

        /**
         * @param allSquashes All squash permission.
         * 
         * @return builder
         * 
         */
        public Builder allSquashes(String... allSquashes) {
            return allSquashes(List.of(allSquashes));
        }

        /**
         * @param noSquashes No squash permission.
         * 
         * @return builder
         * 
         */
        public Builder noSquashes(@Nullable Output<List<String>> noSquashes) {
            $.noSquashes = noSquashes;
            return this;
        }

        /**
         * @param noSquashes No squash permission.
         * 
         * @return builder
         * 
         */
        public Builder noSquashes(List<String> noSquashes) {
            return noSquashes(Output.of(noSquashes));
        }

        /**
         * @param noSquashes No squash permission.
         * 
         * @return builder
         * 
         */
        public Builder noSquashes(String... noSquashes) {
            return noSquashes(List.of(noSquashes));
        }

        /**
         * @param readOnlies Read only access.
         * 
         * @return builder
         * 
         */
        public Builder readOnlies(@Nullable Output<List<String>> readOnlies) {
            $.readOnlies = readOnlies;
            return this;
        }

        /**
         * @param readOnlies Read only access.
         * 
         * @return builder
         * 
         */
        public Builder readOnlies(List<String> readOnlies) {
            return readOnlies(Output.of(readOnlies));
        }

        /**
         * @param readOnlies Read only access.
         * 
         * @return builder
         * 
         */
        public Builder readOnlies(String... readOnlies) {
            return readOnlies(List.of(readOnlies));
        }

        /**
         * @param readWrites Read/Write access.
         * 
         * @return builder
         * 
         */
        public Builder readWrites(@Nullable Output<List<String>> readWrites) {
            $.readWrites = readWrites;
            return this;
        }

        /**
         * @param readWrites Read/Write access.
         * 
         * @return builder
         * 
         */
        public Builder readWrites(List<String> readWrites) {
            return readWrites(Output.of(readWrites));
        }

        /**
         * @param readWrites Read/Write access.
         * 
         * @return builder
         * 
         */
        public Builder readWrites(String... readWrites) {
            return readWrites(List.of(readWrites));
        }

        /**
         * @param rootSquashes Root squash permission.
         * 
         * @return builder
         * 
         */
        public Builder rootSquashes(@Nullable Output<List<String>> rootSquashes) {
            $.rootSquashes = rootSquashes;
            return this;
        }

        /**
         * @param rootSquashes Root squash permission.
         * 
         * @return builder
         * 
         */
        public Builder rootSquashes(List<String> rootSquashes) {
            return rootSquashes(Output.of(rootSquashes));
        }

        /**
         * @param rootSquashes Root squash permission.
         * 
         * @return builder
         * 
         */
        public Builder rootSquashes(String... rootSquashes) {
            return rootSquashes(List.of(rootSquashes));
        }

        public StorageNetworkVolumeVolumePermissionNfArgs build() {
            return $;
        }
    }

}
