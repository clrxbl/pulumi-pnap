// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RancherClusterNodePoolsSshConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final RancherClusterNodePoolsSshConfigArgs Empty = new RancherClusterNodePoolsSshConfigArgs();

    /**
     * Define whether public keys marked as default should be installed on this node. Default value is true.
     * 
     */
    @Import(name="installDefaultKeys")
    private @Nullable Output<Boolean> installDefaultKeys;

    /**
     * @return Define whether public keys marked as default should be installed on this node. Default value is true.
     * 
     */
    public Optional<Output<Boolean>> installDefaultKeys() {
        return Optional.ofNullable(this.installDefaultKeys);
    }

    /**
     * List of public SSH key identifiers.
     * 
     */
    @Import(name="keyIds")
    private @Nullable Output<List<String>> keyIds;

    /**
     * @return List of public SSH key identifiers.
     * 
     */
    public Optional<Output<List<String>>> keyIds() {
        return Optional.ofNullable(this.keyIds);
    }

    /**
     * List of public SSH keys.
     * 
     */
    @Import(name="keys")
    private @Nullable Output<List<String>> keys;

    /**
     * @return List of public SSH keys.
     * 
     */
    public Optional<Output<List<String>>> keys() {
        return Optional.ofNullable(this.keys);
    }

    private RancherClusterNodePoolsSshConfigArgs() {}

    private RancherClusterNodePoolsSshConfigArgs(RancherClusterNodePoolsSshConfigArgs $) {
        this.installDefaultKeys = $.installDefaultKeys;
        this.keyIds = $.keyIds;
        this.keys = $.keys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RancherClusterNodePoolsSshConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RancherClusterNodePoolsSshConfigArgs $;

        public Builder() {
            $ = new RancherClusterNodePoolsSshConfigArgs();
        }

        public Builder(RancherClusterNodePoolsSshConfigArgs defaults) {
            $ = new RancherClusterNodePoolsSshConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param installDefaultKeys Define whether public keys marked as default should be installed on this node. Default value is true.
         * 
         * @return builder
         * 
         */
        public Builder installDefaultKeys(@Nullable Output<Boolean> installDefaultKeys) {
            $.installDefaultKeys = installDefaultKeys;
            return this;
        }

        /**
         * @param installDefaultKeys Define whether public keys marked as default should be installed on this node. Default value is true.
         * 
         * @return builder
         * 
         */
        public Builder installDefaultKeys(Boolean installDefaultKeys) {
            return installDefaultKeys(Output.of(installDefaultKeys));
        }

        /**
         * @param keyIds List of public SSH key identifiers.
         * 
         * @return builder
         * 
         */
        public Builder keyIds(@Nullable Output<List<String>> keyIds) {
            $.keyIds = keyIds;
            return this;
        }

        /**
         * @param keyIds List of public SSH key identifiers.
         * 
         * @return builder
         * 
         */
        public Builder keyIds(List<String> keyIds) {
            return keyIds(Output.of(keyIds));
        }

        /**
         * @param keyIds List of public SSH key identifiers.
         * 
         * @return builder
         * 
         */
        public Builder keyIds(String... keyIds) {
            return keyIds(List.of(keyIds));
        }

        /**
         * @param keys List of public SSH keys.
         * 
         * @return builder
         * 
         */
        public Builder keys(@Nullable Output<List<String>> keys) {
            $.keys = keys;
            return this;
        }

        /**
         * @param keys List of public SSH keys.
         * 
         * @return builder
         * 
         */
        public Builder keys(List<String> keys) {
            return keys(Output.of(keys));
        }

        /**
         * @param keys List of public SSH keys.
         * 
         * @return builder
         * 
         */
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }

        public RancherClusterNodePoolsSshConfigArgs build() {
            return $;
        }
    }

}
