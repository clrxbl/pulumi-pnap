// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.inputs;

import com.phoenixnap.pulumi.pnap.inputs.RancherClusterNodePoolsNodeArgs;
import com.phoenixnap.pulumi.pnap.inputs.RancherClusterNodePoolsSshConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RancherClusterNodePoolsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RancherClusterNodePoolsArgs Empty = new RancherClusterNodePoolsArgs();

    /**
     * The name of the workload cluster. This field is autogenerated if not provided.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the workload cluster. This field is autogenerated if not provided.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Number of configured nodes. Currently only node counts of 1 and 3 are possible.
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Output<Integer> nodeCount;

    /**
     * @return Number of configured nodes. Currently only node counts of 1 and 3 are possible.
     * 
     */
    public Optional<Output<Integer>> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    /**
     * The nodes associated with this node pool.
     * 
     */
    @Import(name="nodes")
    private @Nullable Output<List<RancherClusterNodePoolsNodeArgs>> nodes;

    /**
     * @return The nodes associated with this node pool.
     * 
     */
    public Optional<Output<List<RancherClusterNodePoolsNodeArgs>>> nodes() {
        return Optional.ofNullable(this.nodes);
    }

    /**
     * Node server type. Cannot be changed once the cluster is created. Default value is &#34;s0.d1.small&#34;. For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
     * 
     */
    @Import(name="serverType")
    private @Nullable Output<String> serverType;

    /**
     * @return Node server type. Cannot be changed once the cluster is created. Default value is &#34;s0.d1.small&#34;. For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
     * 
     */
    public Optional<Output<String>> serverType() {
        return Optional.ofNullable(this.serverType);
    }

    /**
     * Configuration defining which public SSH keys are pre-installed as authorized on the server. The `ssh_config` block has 3 fields.
     * 
     */
    @Import(name="sshConfig")
    private @Nullable Output<RancherClusterNodePoolsSshConfigArgs> sshConfig;

    /**
     * @return Configuration defining which public SSH keys are pre-installed as authorized on the server. The `ssh_config` block has 3 fields.
     * 
     */
    public Optional<Output<RancherClusterNodePoolsSshConfigArgs>> sshConfig() {
        return Optional.ofNullable(this.sshConfig);
    }

    private RancherClusterNodePoolsArgs() {}

    private RancherClusterNodePoolsArgs(RancherClusterNodePoolsArgs $) {
        this.name = $.name;
        this.nodeCount = $.nodeCount;
        this.nodes = $.nodes;
        this.serverType = $.serverType;
        this.sshConfig = $.sshConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RancherClusterNodePoolsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RancherClusterNodePoolsArgs $;

        public Builder() {
            $ = new RancherClusterNodePoolsArgs();
        }

        public Builder(RancherClusterNodePoolsArgs defaults) {
            $ = new RancherClusterNodePoolsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the workload cluster. This field is autogenerated if not provided.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the workload cluster. This field is autogenerated if not provided.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nodeCount Number of configured nodes. Currently only node counts of 1 and 3 are possible.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount Number of configured nodes. Currently only node counts of 1 and 3 are possible.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param nodes The nodes associated with this node pool.
         * 
         * @return builder
         * 
         */
        public Builder nodes(@Nullable Output<List<RancherClusterNodePoolsNodeArgs>> nodes) {
            $.nodes = nodes;
            return this;
        }

        /**
         * @param nodes The nodes associated with this node pool.
         * 
         * @return builder
         * 
         */
        public Builder nodes(List<RancherClusterNodePoolsNodeArgs> nodes) {
            return nodes(Output.of(nodes));
        }

        /**
         * @param nodes The nodes associated with this node pool.
         * 
         * @return builder
         * 
         */
        public Builder nodes(RancherClusterNodePoolsNodeArgs... nodes) {
            return nodes(List.of(nodes));
        }

        /**
         * @param serverType Node server type. Cannot be changed once the cluster is created. Default value is &#34;s0.d1.small&#34;. For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
         * 
         * @return builder
         * 
         */
        public Builder serverType(@Nullable Output<String> serverType) {
            $.serverType = serverType;
            return this;
        }

        /**
         * @param serverType Node server type. Cannot be changed once the cluster is created. Default value is &#34;s0.d1.small&#34;. For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
         * 
         * @return builder
         * 
         */
        public Builder serverType(String serverType) {
            return serverType(Output.of(serverType));
        }

        /**
         * @param sshConfig Configuration defining which public SSH keys are pre-installed as authorized on the server. The `ssh_config` block has 3 fields.
         * 
         * @return builder
         * 
         */
        public Builder sshConfig(@Nullable Output<RancherClusterNodePoolsSshConfigArgs> sshConfig) {
            $.sshConfig = sshConfig;
            return this;
        }

        /**
         * @param sshConfig Configuration defining which public SSH keys are pre-installed as authorized on the server. The `ssh_config` block has 3 fields.
         * 
         * @return builder
         * 
         */
        public Builder sshConfig(RancherClusterNodePoolsSshConfigArgs sshConfig) {
            return sshConfig(Output.of(sshConfig));
        }

        public RancherClusterNodePoolsArgs build() {
            return $;
        }
    }

}
