// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetLocationsLocationProductCategory;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLocationsLocation {
    /**
     * @return The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
     * 
     */
    private String location;
    /**
     * @return Description of the location.
     * 
     */
    private String locationDescription;
    /**
     * @return The list of product categories.
     * 
     */
    private List<GetLocationsLocationProductCategory> productCategories;

    private GetLocationsLocation() {}
    /**
     * @return The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Description of the location.
     * 
     */
    public String locationDescription() {
        return this.locationDescription;
    }
    /**
     * @return The list of product categories.
     * 
     */
    public List<GetLocationsLocationProductCategory> productCategories() {
        return this.productCategories;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocationsLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String location;
        private String locationDescription;
        private List<GetLocationsLocationProductCategory> productCategories;
        public Builder() {}
        public Builder(GetLocationsLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.locationDescription = defaults.locationDescription;
    	      this.productCategories = defaults.productCategories;
        }

        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetLocationsLocation", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder locationDescription(String locationDescription) {
            if (locationDescription == null) {
              throw new MissingRequiredPropertyException("GetLocationsLocation", "locationDescription");
            }
            this.locationDescription = locationDescription;
            return this;
        }
        @CustomType.Setter
        public Builder productCategories(List<GetLocationsLocationProductCategory> productCategories) {
            if (productCategories == null) {
              throw new MissingRequiredPropertyException("GetLocationsLocation", "productCategories");
            }
            this.productCategories = productCategories;
            return this;
        }
        public Builder productCategories(GetLocationsLocationProductCategory... productCategories) {
            return productCategories(List.of(productCategories));
        }
        public GetLocationsLocation build() {
            final var _resultValue = new GetLocationsLocation();
            _resultValue.location = location;
            _resultValue.locationDescription = locationDescription;
            _resultValue.productCategories = productCategories;
            return _resultValue;
        }
    }
}
