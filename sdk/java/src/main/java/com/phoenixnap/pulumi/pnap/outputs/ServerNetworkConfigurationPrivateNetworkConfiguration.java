// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServerNetworkConfigurationPrivateNetworkConfiguration {
    /**
     * @return Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
     * 
     */
    private @Nullable String configurationType;
    /**
     * @return The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `network_configuration`.
     * 
     */
    private @Nullable String gatewayAddress;
    /**
     * @return The list of private networks this server is member of. When this field is part of request body, it&#39;ll be used to specify the private networks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configuration type.
     * 
     * The `private_networks` block has field `server_private_network`.
     * The `server_private_network` block has 3 fields:
     * 
     */
    private @Nullable List<ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks;

    private ServerNetworkConfigurationPrivateNetworkConfiguration() {}
    /**
     * @return Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
     * 
     */
    public Optional<String> configurationType() {
        return Optional.ofNullable(this.configurationType);
    }
    /**
     * @return The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `network_configuration`.
     * 
     */
    public Optional<String> gatewayAddress() {
        return Optional.ofNullable(this.gatewayAddress);
    }
    /**
     * @return The list of private networks this server is member of. When this field is part of request body, it&#39;ll be used to specify the private networks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configuration type.
     * 
     * The `private_networks` block has field `server_private_network`.
     * The `server_private_network` block has 3 fields:
     * 
     */
    public List<ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks() {
        return this.privateNetworks == null ? List.of() : this.privateNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerNetworkConfigurationPrivateNetworkConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String configurationType;
        private @Nullable String gatewayAddress;
        private @Nullable List<ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks;
        public Builder() {}
        public Builder(ServerNetworkConfigurationPrivateNetworkConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationType = defaults.configurationType;
    	      this.gatewayAddress = defaults.gatewayAddress;
    	      this.privateNetworks = defaults.privateNetworks;
        }

        @CustomType.Setter
        public Builder configurationType(@Nullable String configurationType) {

            this.configurationType = configurationType;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayAddress(@Nullable String gatewayAddress) {

            this.gatewayAddress = gatewayAddress;
            return this;
        }
        @CustomType.Setter
        public Builder privateNetworks(@Nullable List<ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks) {

            this.privateNetworks = privateNetworks;
            return this;
        }
        public Builder privateNetworks(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork... privateNetworks) {
            return privateNetworks(List.of(privateNetworks));
        }
        public ServerNetworkConfigurationPrivateNetworkConfiguration build() {
            final var _resultValue = new ServerNetworkConfigurationPrivateNetworkConfiguration();
            _resultValue.configurationType = configurationType;
            _resultValue.gatewayAddress = gatewayAddress;
            _resultValue.privateNetworks = privateNetworks;
            return _resultValue;
        }
    }
}
