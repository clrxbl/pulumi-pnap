// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetLocationsLocation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLocationsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The location code.
     * 
     */
    private @Nullable String location;
    /**
     * @return The list of locations found.
     * 
     */
    private List<GetLocationsLocation> locations;
    /**
     * @return The product category.
     * 
     */
    private @Nullable String productCategory;

    private GetLocationsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location code.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The list of locations found.
     * 
     */
    public List<GetLocationsLocation> locations() {
        return this.locations;
    }
    /**
     * @return The product category.
     * 
     */
    public Optional<String> productCategory() {
        return Optional.ofNullable(this.productCategory);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String location;
        private List<GetLocationsLocation> locations;
        private @Nullable String productCategory;
        public Builder() {}
        public Builder(GetLocationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.locations = defaults.locations;
    	      this.productCategory = defaults.productCategory;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLocationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder locations(List<GetLocationsLocation> locations) {
            if (locations == null) {
              throw new MissingRequiredPropertyException("GetLocationsResult", "locations");
            }
            this.locations = locations;
            return this;
        }
        public Builder locations(GetLocationsLocation... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder productCategory(@Nullable String productCategory) {

            this.productCategory = productCategory;
            return this;
        }
        public GetLocationsResult build() {
            final var _resultValue = new GetLocationsResult();
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.locations = locations;
            _resultValue.productCategory = productCategory;
            return _resultValue;
        }
    }
}
