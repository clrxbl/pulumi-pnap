// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.RancherClusterNodePoolsNode;
import com.phoenixnap.pulumi.pnap.outputs.RancherClusterNodePoolsSshConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RancherClusterNodePools {
    /**
     * @return The name of the workload cluster. This field is autogenerated if not provided.
     * 
     */
    private @Nullable String name;
    /**
     * @return Number of configured nodes. Currently only node counts of 1 and 3 are possible.
     * 
     */
    private @Nullable Integer nodeCount;
    /**
     * @return The nodes associated with this node pool.
     * 
     */
    private @Nullable List<RancherClusterNodePoolsNode> nodes;
    /**
     * @return Node server type. Cannot be changed once the cluster is created. Default value is &#34;s0.d1.small&#34;. For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
     * 
     */
    private @Nullable String serverType;
    /**
     * @return Configuration defining which public SSH keys are pre-installed as authorized on the server. The `ssh_config` block has 3 fields.
     * 
     */
    private @Nullable RancherClusterNodePoolsSshConfig sshConfig;

    private RancherClusterNodePools() {}
    /**
     * @return The name of the workload cluster. This field is autogenerated if not provided.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Number of configured nodes. Currently only node counts of 1 and 3 are possible.
     * 
     */
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }
    /**
     * @return The nodes associated with this node pool.
     * 
     */
    public List<RancherClusterNodePoolsNode> nodes() {
        return this.nodes == null ? List.of() : this.nodes;
    }
    /**
     * @return Node server type. Cannot be changed once the cluster is created. Default value is &#34;s0.d1.small&#34;. For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
     * 
     */
    public Optional<String> serverType() {
        return Optional.ofNullable(this.serverType);
    }
    /**
     * @return Configuration defining which public SSH keys are pre-installed as authorized on the server. The `ssh_config` block has 3 fields.
     * 
     */
    public Optional<RancherClusterNodePoolsSshConfig> sshConfig() {
        return Optional.ofNullable(this.sshConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RancherClusterNodePools defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String name;
        private @Nullable Integer nodeCount;
        private @Nullable List<RancherClusterNodePoolsNode> nodes;
        private @Nullable String serverType;
        private @Nullable RancherClusterNodePoolsSshConfig sshConfig;
        public Builder() {}
        public Builder(RancherClusterNodePools defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodes = defaults.nodes;
    	      this.serverType = defaults.serverType;
    	      this.sshConfig = defaults.sshConfig;
        }

        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(@Nullable Integer nodeCount) {

            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodes(@Nullable List<RancherClusterNodePoolsNode> nodes) {

            this.nodes = nodes;
            return this;
        }
        public Builder nodes(RancherClusterNodePoolsNode... nodes) {
            return nodes(List.of(nodes));
        }
        @CustomType.Setter
        public Builder serverType(@Nullable String serverType) {

            this.serverType = serverType;
            return this;
        }
        @CustomType.Setter
        public Builder sshConfig(@Nullable RancherClusterNodePoolsSshConfig sshConfig) {

            this.sshConfig = sshConfig;
            return this;
        }
        public RancherClusterNodePools build() {
            final var _resultValue = new RancherClusterNodePools();
            _resultValue.name = name;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nodes = nodes;
            _resultValue.serverType = serverType;
            _resultValue.sshConfig = sshConfig;
            return _resultValue;
        }
    }
}
