// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap;

import com.phoenixnap.pulumi.pnap.ReservationArgs;
import com.phoenixnap.pulumi.pnap.Utilities;
import com.phoenixnap.pulumi.pnap.inputs.ReservationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a phoenixNAP reservation resource. This can be used to create and modify reservations.
 * 
 * ## Example Usage
 * 
 * Create a reservation
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.pnap.Reservation;
 * import com.pulumi.pnap.ReservationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test_Reservation_1 = new Reservation(&#34;test-Reservation-1&#34;, ReservationArgs.builder()        
 *             .sku(&#34;XXX-XXX-XXX&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="pnap:index/reservation:Reservation")
public class Reservation extends com.pulumi.resources.CustomResource {
    /**
     * The resource ID currently being assigned to reservation.
     * 
     */
    @Export(name="assignedResourceId", refs={String.class}, tree="[0]")
    private Output<String> assignedResourceId;

    /**
     * @return The resource ID currently being assigned to reservation.
     * 
     */
    public Output<String> assignedResourceId() {
        return this.assignedResourceId;
    }
    /**
     * A flag indicating whether the reservation will auto-renew (default is true, it can only be modified after the creation of resource).
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> autoRenew;

    /**
     * @return A flag indicating whether the reservation will auto-renew (default is true, it can only be modified after the creation of resource).
     * 
     */
    public Output<Boolean> autoRenew() {
        return this.autoRenew;
    }
    /**
     * The reason for disabling auto-renewal.
     * 
     */
    @Export(name="autoRenewDisableReason", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> autoRenewDisableReason;

    /**
     * @return The reason for disabling auto-renewal.
     * 
     */
    public Output<Optional<String>> autoRenewDisableReason() {
        return Codegen.optional(this.autoRenewDisableReason);
    }
    /**
     * The point in time (in UTC) when the reservation ends.
     * 
     */
    @Export(name="endDateTime", refs={String.class}, tree="[0]")
    private Output<String> endDateTime;

    /**
     * @return The point in time (in UTC) when the reservation ends.
     * 
     */
    public Output<String> endDateTime() {
        return this.endDateTime;
    }
    /**
     * Reservations created with initial invoice model ON_CREATION will be invoiced on same date when reservation is created. Reservation created with CALENDAR_MONTH initial invoice model will be invoiced at the begining of next month.
     * 
     */
    @Export(name="initialInvoiceModel", refs={String.class}, tree="[0]")
    private Output<String> initialInvoiceModel;

    /**
     * @return Reservations created with initial invoice model ON_CREATION will be invoiced on same date when reservation is created. Reservation created with CALENDAR_MONTH initial invoice model will be invoiced at the begining of next month.
     * 
     */
    public Output<String> initialInvoiceModel() {
        return this.initialInvoiceModel;
    }
    /**
     * The point in time (in UTC) when the reservation was renewed last.
     * 
     */
    @Export(name="lastRenewalDateTime", refs={String.class}, tree="[0]")
    private Output<String> lastRenewalDateTime;

    /**
     * @return The point in time (in UTC) when the reservation was renewed last.
     * 
     */
    public Output<String> lastRenewalDateTime() {
        return this.lastRenewalDateTime;
    }
    /**
     * The location code.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location code.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Next billing date for reservation.
     * 
     */
    @Export(name="nextBillingDate", refs={String.class}, tree="[0]")
    private Output<String> nextBillingDate;

    /**
     * @return Next billing date for reservation.
     * 
     */
    public Output<String> nextBillingDate() {
        return this.nextBillingDate;
    }
    /**
     * The point in time (in UTC) when the reservation will be renewed if auto renew is set to true.
     * 
     */
    @Export(name="nextRenewalDateTime", refs={String.class}, tree="[0]")
    private Output<String> nextRenewalDateTime;

    /**
     * @return The point in time (in UTC) when the reservation will be renewed if auto renew is set to true.
     * 
     */
    public Output<String> nextRenewalDateTime() {
        return this.nextRenewalDateTime;
    }
    /**
     * Reservation price.
     * 
     */
    @Export(name="price", refs={Double.class}, tree="[0]")
    private Output<Double> price;

    /**
     * @return Reservation price.
     * 
     */
    public Output<Double> price() {
        return this.price;
    }
    /**
     * The unit to which the price applies.
     * 
     */
    @Export(name="priceUnit", refs={String.class}, tree="[0]")
    private Output<String> priceUnit;

    /**
     * @return The unit to which the price applies.
     * 
     */
    public Output<String> priceUnit() {
        return this.priceUnit;
    }
    /**
     * The product category.
     * 
     */
    @Export(name="productCategory", refs={String.class}, tree="[0]")
    private Output<String> productCategory;

    /**
     * @return The product category.
     * 
     */
    public Output<String> productCategory() {
        return this.productCategory;
    }
    /**
     * The code identifying the product. This code has significance across all locations.
     * 
     */
    @Export(name="productCode", refs={String.class}, tree="[0]")
    private Output<String> productCode;

    /**
     * @return The code identifying the product. This code has significance across all locations.
     * 
     */
    public Output<String> productCode() {
        return this.productCode;
    }
    /**
     * The reservation model.
     * 
     */
    @Export(name="reservationModel", refs={String.class}, tree="[0]")
    private Output<String> reservationModel;

    /**
     * @return The reservation model.
     * 
     */
    public Output<String> reservationModel() {
        return this.reservationModel;
    }
    /**
     * The SKU code of product pricing plan.
     * 
     */
    @Export(name="sku", refs={String.class}, tree="[0]")
    private Output<String> sku;

    /**
     * @return The SKU code of product pricing plan.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }
    /**
     * The point in time (in UTC) when the reservation starts.
     * 
     */
    @Export(name="startDateTime", refs={String.class}, tree="[0]")
    private Output<String> startDateTime;

    /**
     * @return The point in time (in UTC) when the reservation starts.
     * 
     */
    public Output<String> startDateTime() {
        return this.startDateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Reservation(String name) {
        this(name, ReservationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Reservation(String name, ReservationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Reservation(String name, ReservationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pnap:index/reservation:Reservation", name, args == null ? ReservationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Reservation(String name, Output<String> id, @Nullable ReservationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("pnap:index/reservation:Reservation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Reservation get(String name, Output<String> id, @Nullable ReservationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Reservation(name, id, state, options);
    }
}
