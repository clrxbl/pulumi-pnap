// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServerNetworkConfigurationPrivateNetworkConfiguration {
    /**
     * @return Determines the approach for configuring IP blocks for the server being provisioned.
     * 
     */
    private String configurationType;
    /**
     * @return The list of private networks this server is member of.
     * 
     */
    private List<GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks;

    private GetServerNetworkConfigurationPrivateNetworkConfiguration() {}
    /**
     * @return Determines the approach for configuring IP blocks for the server being provisioned.
     * 
     */
    public String configurationType() {
        return this.configurationType;
    }
    /**
     * @return The list of private networks this server is member of.
     * 
     */
    public List<GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks() {
        return this.privateNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerNetworkConfigurationPrivateNetworkConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationType;
        private List<GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks;
        public Builder() {}
        public Builder(GetServerNetworkConfigurationPrivateNetworkConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationType = defaults.configurationType;
    	      this.privateNetworks = defaults.privateNetworks;
        }

        @CustomType.Setter
        public Builder configurationType(String configurationType) {
            if (configurationType == null) {
              throw new MissingRequiredPropertyException("GetServerNetworkConfigurationPrivateNetworkConfiguration", "configurationType");
            }
            this.configurationType = configurationType;
            return this;
        }
        @CustomType.Setter
        public Builder privateNetworks(List<GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork> privateNetworks) {
            if (privateNetworks == null) {
              throw new MissingRequiredPropertyException("GetServerNetworkConfigurationPrivateNetworkConfiguration", "privateNetworks");
            }
            this.privateNetworks = privateNetworks;
            return this;
        }
        public Builder privateNetworks(GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork... privateNetworks) {
            return privateNetworks(List.of(privateNetworks));
        }
        public GetServerNetworkConfigurationPrivateNetworkConfiguration build() {
            final var _resultValue = new GetServerNetworkConfigurationPrivateNetworkConfiguration();
            _resultValue.configurationType = configurationType;
            _resultValue.privateNetworks = privateNetworks;
            return _resultValue;
        }
    }
}
