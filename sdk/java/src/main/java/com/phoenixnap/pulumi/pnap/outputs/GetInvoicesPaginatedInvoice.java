// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap.outputs;

import com.phoenixnap.pulumi.pnap.outputs.GetInvoicesPaginatedInvoiceResult;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInvoicesPaginatedInvoice {
    /**
     * @return The limit of the number of results returned. The number of records returned may be smaller than the limit.
     * 
     */
    private Integer limit;
    /**
     * @return The number of items to skip in the results.
     * 
     */
    private Integer offset;
    /**
     * @return The list of invoices.
     * 
     */
    private List<GetInvoicesPaginatedInvoiceResult> results;
    private Integer total;

    private GetInvoicesPaginatedInvoice() {}
    /**
     * @return The limit of the number of results returned. The number of records returned may be smaller than the limit.
     * 
     */
    public Integer limit() {
        return this.limit;
    }
    /**
     * @return The number of items to skip in the results.
     * 
     */
    public Integer offset() {
        return this.offset;
    }
    /**
     * @return The list of invoices.
     * 
     */
    public List<GetInvoicesPaginatedInvoiceResult> results() {
        return this.results;
    }
    public Integer total() {
        return this.total;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesPaginatedInvoice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer limit;
        private Integer offset;
        private List<GetInvoicesPaginatedInvoiceResult> results;
        private Integer total;
        public Builder() {}
        public Builder(GetInvoicesPaginatedInvoice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limit = defaults.limit;
    	      this.offset = defaults.offset;
    	      this.results = defaults.results;
    	      this.total = defaults.total;
        }

        @CustomType.Setter
        public Builder limit(Integer limit) {
            if (limit == null) {
              throw new MissingRequiredPropertyException("GetInvoicesPaginatedInvoice", "limit");
            }
            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder offset(Integer offset) {
            if (offset == null) {
              throw new MissingRequiredPropertyException("GetInvoicesPaginatedInvoice", "offset");
            }
            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetInvoicesPaginatedInvoiceResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetInvoicesPaginatedInvoice", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetInvoicesPaginatedInvoiceResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder total(Integer total) {
            if (total == null) {
              throw new MissingRequiredPropertyException("GetInvoicesPaginatedInvoice", "total");
            }
            this.total = total;
            return this;
        }
        public GetInvoicesPaginatedInvoice build() {
            final var _resultValue = new GetInvoicesPaginatedInvoice();
            _resultValue.limit = limit;
            _resultValue.offset = offset;
            _resultValue.results = results;
            _resultValue.total = total;
            return _resultValue;
        }
    }
}
