// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.phoenixnap.pulumi.pnap;

import com.phoenixnap.pulumi.pnap.inputs.StorageNetworkVolumeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageNetworkArgs Empty = new StorageNetworkArgs();

    /**
     * Custom Client VLAN that the Storage Network will be set to.
     * 
     */
    @Import(name="clientVlan")
    private @Nullable Output<Integer> clientVlan;

    /**
     * @return Custom Client VLAN that the Storage Network will be set to.
     * 
     */
    public Optional<Output<Integer>> clientVlan() {
        return Optional.ofNullable(this.clientVlan);
    }

    /**
     * Volume description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Volume description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The name of the tag.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the tag.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
     * 
     */
    @Import(name="volumes", required=true)
    private Output<List<StorageNetworkVolumeArgs>> volumes;

    /**
     * @return Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
     * 
     */
    public Output<List<StorageNetworkVolumeArgs>> volumes() {
        return this.volumes;
    }

    private StorageNetworkArgs() {}

    private StorageNetworkArgs(StorageNetworkArgs $) {
        this.clientVlan = $.clientVlan;
        this.description = $.description;
        this.location = $.location;
        this.name = $.name;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageNetworkArgs $;

        public Builder() {
            $ = new StorageNetworkArgs();
        }

        public Builder(StorageNetworkArgs defaults) {
            $ = new StorageNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientVlan Custom Client VLAN that the Storage Network will be set to.
         * 
         * @return builder
         * 
         */
        public Builder clientVlan(@Nullable Output<Integer> clientVlan) {
            $.clientVlan = clientVlan;
            return this;
        }

        /**
         * @param clientVlan Custom Client VLAN that the Storage Network will be set to.
         * 
         * @return builder
         * 
         */
        public Builder clientVlan(Integer clientVlan) {
            return clientVlan(Output.of(clientVlan));
        }

        /**
         * @param description Volume description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Volume description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param location The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the tag.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the tag.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param volumes Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
         * 
         * @return builder
         * 
         */
        public Builder volumes(Output<List<StorageNetworkVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        /**
         * @param volumes Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
         * 
         * @return builder
         * 
         */
        public Builder volumes(List<StorageNetworkVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        /**
         * @param volumes Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
         * 
         * @return builder
         * 
         */
        public Builder volumes(StorageNetworkVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public StorageNetworkArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("StorageNetworkArgs", "location");
            }
            if ($.volumes == null) {
                throw new MissingRequiredPropertyException("StorageNetworkArgs", "volumes");
            }
            return $;
        }
    }

}
