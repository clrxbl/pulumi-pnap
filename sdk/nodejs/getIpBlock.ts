// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a phoenixNAP IP Block datasource. This can be used to read IP Blocks.
 *
 * ## Example Usage
 *
 * Fetch an IP Block by CIDR and show it's details in alphabetical order
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pnap from "@pulumi/pnap";
 *
 * export = async () => {
 *     const test = await pnap.getIpBlock({
 *         cidr: "1.1.1.0/31",
 *     });
 *     return {
 *         "ip-block": test,
 *     };
 * }
 * ```
 */
export function getIpBlock(args?: GetIpBlockArgs, opts?: pulumi.InvokeOptions): Promise<GetIpBlockResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pnap:index/getIpBlock:getIpBlock", {
        "cidr": args.cidr,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpBlock.
 */
export interface GetIpBlockArgs {
    /**
     * The IP Block in CIDR notation.
     */
    cidr?: string;
    /**
     * The IP Block identifier.
     */
    id?: string;
}

/**
 * A collection of values returned by getIpBlock.
 */
export interface GetIpBlockResult {
    /**
     * ID of the resource assigned to the IP Block.
     * * `assignedResourceType `- Type of the resource assigned to the IP Block.
     */
    readonly assignedResourceId: string;
    readonly assignedResourceType: string;
    /**
     * The IP Block in CIDR notation.
     */
    readonly cidr: string;
    /**
     * CIDR IP Block Size.
     */
    readonly cidrBlockSize: string;
    /**
     * Date and time when the IP Block was created.
     */
    readonly createdOn: string;
    /**
     * Description of the IP Block.
     */
    readonly description: string;
    /**
     * The unique id of the tag.
     */
    readonly id: string;
    /**
     * True if the IP Block is a "bring your own" block.
     */
    readonly isBringYourOwn: boolean;
    /**
     * IP Block location ID.
     */
    readonly location: string;
    /**
     * The status of the IP Block.
     */
    readonly status: string;
    /**
     * The tags assigned to the IP Block.
     */
    readonly tags: outputs.GetIpBlockTag[];
}
/**
 * Provides a phoenixNAP IP Block datasource. This can be used to read IP Blocks.
 *
 * ## Example Usage
 *
 * Fetch an IP Block by CIDR and show it's details in alphabetical order
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pnap from "@pulumi/pnap";
 *
 * export = async () => {
 *     const test = await pnap.getIpBlock({
 *         cidr: "1.1.1.0/31",
 *     });
 *     return {
 *         "ip-block": test,
 *     };
 * }
 * ```
 */
export function getIpBlockOutput(args?: GetIpBlockOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpBlockResult> {
    return pulumi.output(args).apply((a: any) => getIpBlock(a, opts))
}

/**
 * A collection of arguments for invoking getIpBlock.
 */
export interface GetIpBlockOutputArgs {
    /**
     * The IP Block in CIDR notation.
     */
    cidr?: pulumi.Input<string>;
    /**
     * The IP Block identifier.
     */
    id?: pulumi.Input<string>;
}
