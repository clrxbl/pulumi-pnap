// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a phoenixNAP tag datasource. This can be used to read tags.
 *
 * ## Example Usage
 *
 * Fetch a tag by name and show it's details.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pnap from "@pulumi/pnap";
 *
 * const test = pnap.getTag({
 *     name: "tag3",
 * });
 * export const details = test;
 * ```
 */
export function getTag(args?: GetTagArgs, opts?: pulumi.InvokeOptions): Promise<GetTagResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pnap:index/getTag:getTag", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagArgs {
    /**
     * The unique identifier of the tag.
     */
    id?: string;
    /**
     * The unique name of the tag.
     */
    name?: string;
}

/**
 * A collection of values returned by getTag.
 */
export interface GetTagResult {
    readonly createdBy: string;
    /**
     * The description of the tag.
     * * `isBillingTag `- Whether or not to show the tag as part of billing and invoices.
     * * `resourceAssignments ` - The tag's assigned resources.
     */
    readonly description: string;
    /**
     * The unique identifier of the tag.
     */
    readonly id: string;
    readonly isBillingTag: boolean;
    /**
     * The name of the tag.
     */
    readonly name: string;
    readonly resourceAssignments: outputs.GetTagResourceAssignment[];
    /**
     * The optional values of the tag..
     */
    readonly values: string[];
}
/**
 * Provides a phoenixNAP tag datasource. This can be used to read tags.
 *
 * ## Example Usage
 *
 * Fetch a tag by name and show it's details.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pnap from "@pulumi/pnap";
 *
 * const test = pnap.getTag({
 *     name: "tag3",
 * });
 * export const details = test;
 * ```
 */
export function getTagOutput(args?: GetTagOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTagResult> {
    return pulumi.output(args).apply((a: any) => getTag(a, opts))
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagOutputArgs {
    /**
     * The unique identifier of the tag.
     */
    id?: pulumi.Input<string>;
    /**
     * The unique name of the tag.
     */
    name?: pulumi.Input<string>;
}
