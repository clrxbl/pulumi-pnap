// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a phoenixNAP Storage Network datasource. This can be used to read storage networks.
 *
 * ## Example Usage
 *
 * Fetch a storage network by name and show it's volumes
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pnap from "@pulumi/pnap";
 *
 * const storage-Network-1 = pnap.getStorageNetwork({
 *     name: "Storage-1",
 * });
 * export const volumes = storage_Network_1.then(storage_Network_1 => storage_Network_1.volumes);
 * ```
 */
export function getStorageNetwork(args?: GetStorageNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("pnap:index/getStorageNetwork:getStorageNetwork", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getStorageNetwork.
 */
export interface GetStorageNetworkArgs {
    /**
     * The storage network identifier.
     */
    id?: string;
    /**
     * The friendly name of this storage network.
     */
    name?: string;
}

/**
 * A collection of values returned by getStorageNetwork.
 */
export interface GetStorageNetworkResult {
    /**
     * Date and time when this volume was created.
     */
    readonly createdOn: string;
    /**
     * Date and time of the initial request for volume deletion.
     */
    readonly deleteRequestedOn: string;
    /**
     * Volume description.
     */
    readonly description: string;
    /**
     * The unique id of the tag.
     */
    readonly id: string;
    /**
     * IP of the storage network
     */
    readonly ips: string[];
    /**
     * The location of this storage network.
     * * `networkId `- ID of network the storage belongs to.
     */
    readonly location: string;
    /**
     * The name of the tag.
     */
    readonly name: string;
    readonly networkId: string;
    /**
     * Volume's status.
     */
    readonly status: string;
    /**
     * Volume for the storage network.
     */
    readonly volumes: outputs.GetStorageNetworkVolume[];
}
/**
 * Provides a phoenixNAP Storage Network datasource. This can be used to read storage networks.
 *
 * ## Example Usage
 *
 * Fetch a storage network by name and show it's volumes
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pnap from "@pulumi/pnap";
 *
 * const storage-Network-1 = pnap.getStorageNetwork({
 *     name: "Storage-1",
 * });
 * export const volumes = storage_Network_1.then(storage_Network_1 => storage_Network_1.volumes);
 * ```
 */
export function getStorageNetworkOutput(args?: GetStorageNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStorageNetworkResult> {
    return pulumi.output(args).apply((a: any) => getStorageNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getStorageNetwork.
 */
export interface GetStorageNetworkOutputArgs {
    /**
     * The storage network identifier.
     */
    id?: pulumi.Input<string>;
    /**
     * The friendly name of this storage network.
     */
    name?: pulumi.Input<string>;
}
