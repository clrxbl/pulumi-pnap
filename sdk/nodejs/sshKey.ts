// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a phoenixNAP SSH key resource. This can be used to create,
 * modify, and delete SSH keys.
 */
export class SshKey extends pulumi.CustomResource {
    /**
     * Get an existing SshKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SshKeyState, opts?: pulumi.CustomResourceOptions): SshKey {
        return new SshKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pnap:index/sshKey:SshKey';

    /**
     * Returns true if the given object is an instance of SshKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SshKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SshKey.__pulumiType;
    }

    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
     */
    public readonly default!: pulumi.Output<boolean>;
    /**
     * SSH key auto-generated SHA-256 fingerprint.
     * * `createdOn `- Date and time of creation.
     * * `lastUpdatedOn ` - Date and time of last update.
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * SSH key actual key value.
     */
    public readonly key!: pulumi.Output<string>;
    public /*out*/ readonly lastUpdatedOn!: pulumi.Output<string>;
    /**
     * Friendly SSH key name to represent an SSH key.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a SshKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SshKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SshKeyArgs | SshKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SshKeyState | undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["lastUpdatedOn"] = state ? state.lastUpdatedOn : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as SshKeyArgs | undefined;
            if ((!args || args.default === undefined) && !opts.urn) {
                throw new Error("Missing required property 'default'");
            }
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["lastUpdatedOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SshKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SshKey resources.
 */
export interface SshKeyState {
    createdOn?: pulumi.Input<string>;
    /**
     * Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
     */
    default?: pulumi.Input<boolean>;
    /**
     * SSH key auto-generated SHA-256 fingerprint.
     * * `createdOn `- Date and time of creation.
     * * `lastUpdatedOn ` - Date and time of last update.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * SSH key actual key value.
     */
    key?: pulumi.Input<string>;
    lastUpdatedOn?: pulumi.Input<string>;
    /**
     * Friendly SSH key name to represent an SSH key.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SshKey resource.
 */
export interface SshKeyArgs {
    /**
     * Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
     */
    default: pulumi.Input<boolean>;
    /**
     * SSH key actual key value.
     */
    key: pulumi.Input<string>;
    /**
     * Friendly SSH key name to represent an SSH key.
     */
    name?: pulumi.Input<string>;
}
