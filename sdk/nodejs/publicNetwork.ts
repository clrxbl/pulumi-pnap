// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a phoenixNAP Public Network resource. This can be used to create,
 * modify, and delete public networks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as pnap from "@phoenixnap/pulumi-pnap";
 *
 * // Create a public network
 * const public_Network_1 = new pnap.PublicNetwork("public-Network-1", {
 *     description: "First public network.",
 *     ipBlocks: [
 *         {
 *             publicNetworkIpBlock: {
 *                 id: "60473a6115e34466c9f8f083",
 *             },
 *         },
 *         {
 *             publicNetworkIpBlock: {
 *                 id: "616e6ec6d66b406a45ab8797",
 *             },
 *         },
 *     ],
 *     location: "PHX",
 * });
 * ```
 */
export class PublicNetwork extends pulumi.CustomResource {
    /**
     * Get an existing PublicNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PublicNetworkState, opts?: pulumi.CustomResourceOptions): PublicNetwork {
        return new PublicNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'pnap:index/publicNetwork:PublicNetwork';

    /**
     * Returns true if the given object is an instance of PublicNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PublicNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PublicNetwork.__pulumiType;
    }

    /**
     * Date and time when this public network was created.
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * The description of this public network.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A list of IP Blocks that will be associated with this public network (10 items at most).
     */
    public readonly ipBlocks!: pulumi.Output<outputs.PublicNetworkIpBlock[]>;
    /**
     * The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
     * * `vlanId `- The VLAN that will be assigned to this network.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * A list of resources that are members of this public network.
     */
    public /*out*/ readonly memberships!: pulumi.Output<outputs.PublicNetworkMembership[]>;
    /**
     * The friendly name of this public network. This name should be unique.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of the public network.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly vlanId!: pulumi.Output<number>;

    /**
     * Create a PublicNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PublicNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PublicNetworkArgs | PublicNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PublicNetworkState | undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipBlocks"] = state ? state.ipBlocks : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["memberships"] = state ? state.memberships : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
        } else {
            const args = argsOrState as PublicNetworkArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipBlocks"] = args ? args.ipBlocks : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["memberships"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PublicNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PublicNetwork resources.
 */
export interface PublicNetworkState {
    /**
     * Date and time when this public network was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * The description of this public network.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of IP Blocks that will be associated with this public network (10 items at most).
     */
    ipBlocks?: pulumi.Input<pulumi.Input<inputs.PublicNetworkIpBlock>[]>;
    /**
     * The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
     * * `vlanId `- The VLAN that will be assigned to this network.
     */
    location?: pulumi.Input<string>;
    /**
     * A list of resources that are members of this public network.
     */
    memberships?: pulumi.Input<pulumi.Input<inputs.PublicNetworkMembership>[]>;
    /**
     * The friendly name of this public network. This name should be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the public network.
     */
    status?: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PublicNetwork resource.
 */
export interface PublicNetworkArgs {
    /**
     * The description of this public network.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of IP Blocks that will be associated with this public network (10 items at most).
     */
    ipBlocks?: pulumi.Input<pulumi.Input<inputs.PublicNetworkIpBlock>[]>;
    /**
     * The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
     * * `vlanId `- The VLAN that will be assigned to this network.
     */
    location: pulumi.Input<string>;
    /**
     * The friendly name of this public network. This name should be unique.
     */
    name?: pulumi.Input<string>;
    vlanId?: pulumi.Input<number>;
}
