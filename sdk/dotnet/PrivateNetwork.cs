// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pnap
{
    /// <summary>
    /// Provides a phoenixNAP Private Network resource. This can be used to create,
    /// modify, and delete private networks.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Pnap = Pulumi.Pnap;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a private network
    ///     var test_Network_33 = new Pnap.PrivateNetwork("test-Network-33", new()
    ///     {
    ///         Cidr = "10.0.0.0/24",
    ///         Location = "PHX",
    ///     });
    /// 
    ///     var test_Network_44 = new Pnap.PrivateNetwork("test-Network-44", new()
    ///     {
    ///         Cidr = "172.16.0.0/24",
    ///         Location = "PHX",
    ///     });
    /// 
    ///     // Create a server
    ///     var test_Server_1 = new Pnap.Server("test-Server-1", new()
    ///     {
    ///         Hostname = "Test-Server-1",
    ///         Os = "ubuntu/bionic",
    ///         Type = "s1.c1.medium",
    ///         Location = "PHX",
    ///         InstallDefaultSshKeys = true,
    ///         NetworkConfiguration = new Pnap.Inputs.ServerNetworkConfigurationArgs
    ///         {
    ///             PrivateNetworkConfiguration = new Pnap.Inputs.ServerNetworkConfigurationPrivateNetworkConfigurationArgs
    ///             {
    ///                 ConfigurationType = "USER_DEFINED",
    ///                 PrivateNetworks = new[]
    ///                 {
    ///                     new Pnap.Inputs.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs
    ///                     {
    ///                         ServerPrivateNetwork = new Pnap.Inputs.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs
    ///                         {
    ///                             Id = test_Network_33.Id,
    ///                             Ips = new[]
    ///                             {
    ///                                 "10.0.0.12",
    ///                             },
    ///                         },
    ///                     },
    ///                     new Pnap.Inputs.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs
    ///                     {
    ///                         ServerPrivateNetwork = new Pnap.Inputs.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs
    ///                         {
    ///                             Id = test_Network_44.Id,
    ///                             Ips = new[]
    ///                             {
    ///                                 "172.16.0.12",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [PnapResourceType("pnap:index/privateNetwork:PrivateNetwork")]
    public partial class PrivateNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
        /// </summary>
        [Output("cidr")]
        public Output<string> Cidr { get; private set; } = null!;

        /// <summary>
        /// Date and time when this private network was created.
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// The description of this private network.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
        /// </summary>
        [Output("force")]
        public Output<bool?> Force { get; private set; } = null!;

        /// <summary>
        /// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifies network as the default private network for the specified location. Default value is `false`.
        /// * `vlan_id `- The VLAN that will be assigned to this network.
        /// </summary>
        [Output("locationDefault")]
        public Output<bool> LocationDefault { get; private set; } = null!;

        /// <summary>
        /// A list of resources that are members of this private network.
        /// </summary>
        [Output("memberships")]
        public Output<ImmutableArray<Outputs.PrivateNetworkMembership>> Memberships { get; private set; } = null!;

        /// <summary>
        /// The friendly name of this private network. This name should be unique.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("servers")]
        public Output<ImmutableArray<Outputs.PrivateNetworkServer>> Servers { get; private set; } = null!;

        /// <summary>
        /// The status of the private network.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The type of the private network.
        /// * `servers ` - (Deprecated) List of server details linked to the private network.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("vlanId")]
        public Output<int> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a PrivateNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrivateNetwork(string name, PrivateNetworkArgs args, CustomResourceOptions? options = null)
            : base("pnap:index/privateNetwork:PrivateNetwork", name, args ?? new PrivateNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrivateNetwork(string name, Input<string> id, PrivateNetworkState? state = null, CustomResourceOptions? options = null)
            : base("pnap:index/privateNetwork:PrivateNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/phoenixnap/pulumi-pnap/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrivateNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrivateNetwork Get(string name, Input<string> id, PrivateNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new PrivateNetwork(name, id, state, options);
        }
    }

    public sealed class PrivateNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// The description of this private network.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
        /// </summary>
        [Input("force")]
        public Input<bool>? Force { get; set; }

        /// <summary>
        /// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Identifies network as the default private network for the specified location. Default value is `false`.
        /// * `vlan_id `- The VLAN that will be assigned to this network.
        /// </summary>
        [Input("locationDefault")]
        public Input<bool>? LocationDefault { get; set; }

        /// <summary>
        /// The friendly name of this private network. This name should be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public PrivateNetworkArgs()
        {
        }
        public static new PrivateNetworkArgs Empty => new PrivateNetworkArgs();
    }

    public sealed class PrivateNetworkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// Date and time when this private network was created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// The description of this private network.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
        /// </summary>
        [Input("force")]
        public Input<bool>? Force { get; set; }

        /// <summary>
        /// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifies network as the default private network for the specified location. Default value is `false`.
        /// * `vlan_id `- The VLAN that will be assigned to this network.
        /// </summary>
        [Input("locationDefault")]
        public Input<bool>? LocationDefault { get; set; }

        [Input("memberships")]
        private InputList<Inputs.PrivateNetworkMembershipGetArgs>? _memberships;

        /// <summary>
        /// A list of resources that are members of this private network.
        /// </summary>
        public InputList<Inputs.PrivateNetworkMembershipGetArgs> Memberships
        {
            get => _memberships ?? (_memberships = new InputList<Inputs.PrivateNetworkMembershipGetArgs>());
            set => _memberships = value;
        }

        /// <summary>
        /// The friendly name of this private network. This name should be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("servers")]
        private InputList<Inputs.PrivateNetworkServerGetArgs>? _servers;
        public InputList<Inputs.PrivateNetworkServerGetArgs> Servers
        {
            get => _servers ?? (_servers = new InputList<Inputs.PrivateNetworkServerGetArgs>());
            set => _servers = value;
        }

        /// <summary>
        /// The status of the private network.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The type of the private network.
        /// * `servers ` - (Deprecated) List of server details linked to the private network.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public PrivateNetworkState()
        {
        }
        public static new PrivateNetworkState Empty => new PrivateNetworkState();
    }
}
