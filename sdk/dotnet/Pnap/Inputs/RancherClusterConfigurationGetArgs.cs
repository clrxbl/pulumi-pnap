// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PhoenixNAP.Pulumi.Pnap.Inputs
{

    public sealed class RancherClusterConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Define the custom SSL certificates to be used instead of defaults. The `certificates` block has 3 fields.
        /// </summary>
        [Input("certificates")]
        public Input<Inputs.RancherClusterConfigurationCertificatesGetArgs>? Certificates { get; set; }

        /// <summary>
        /// This maps to rancher's cluster-domain. Cluster Domain.
        /// </summary>
        [Input("clusterDomain")]
        public Input<string>? ClusterDomain { get; set; }

        /// <summary>
        /// This maps to rancher's etcd-snapshot-retention. Number of snapshots to retain. Default value is 5.
        /// </summary>
        [Input("etcdSnapshotRetention")]
        public Input<int>? EtcdSnapshotRetention { get; set; }

        /// <summary>
        /// This maps to rancher's etcd-snapshot-schedule-cron. Snapshot interval time in cron spec.
        /// </summary>
        [Input("etcdSnapshotScheduleCron")]
        public Input<string>? EtcdSnapshotScheduleCron { get; set; }

        /// <summary>
        /// This maps to rancher's node-taint. Registering kubelet with set of taints.
        /// </summary>
        [Input("nodeTaint")]
        public Input<string>? NodeTaint { get; set; }

        /// <summary>
        /// This maps to rancher's tls-san. Add additional hostname or IP as a Subject Alternative Name in the TLS cert.
        /// </summary>
        [Input("tlsSan")]
        public Input<string>? TlsSan { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Shared secret used to join a server or agent to a cluster.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public RancherClusterConfigurationGetArgs()
        {
        }
        public static new RancherClusterConfigurationGetArgs Empty => new RancherClusterConfigurationGetArgs();
    }
}
