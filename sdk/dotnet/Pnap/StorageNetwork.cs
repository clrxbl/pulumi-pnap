// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PhoenixNAP.Pulumi.Pnap
{
    /// <summary>
    /// Provides a phoenixNAP Storage Network resource. This can be used to create, modify and delete storage networks.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Pnap = PhoenixNAP.Pulumi.Pnap;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a storage network and volume
    ///     var storage_Network_1 = new Pnap.StorageNetwork("storage-Network-1", new()
    ///     {
    ///         Description = "First storage network.",
    ///         Location = "PHX",
    ///         Volumes = new[]
    ///         {
    ///             new Pnap.Inputs.StorageNetworkVolumeArgs
    ///             {
    ///                 Volume = new Pnap.Inputs.StorageNetworkVolumeVolumeArgs
    ///                 {
    ///                     CapacityInGb = 1000,
    ///                     Name = "Volume-1",
    ///                     PathSuffix = "/shared-docs",
    ///                     Tags = new[]
    ///                     {
    ///                         new Pnap.Inputs.StorageNetworkVolumeVolumeTagArgs
    ///                         {
    ///                             TagAssignment = new Pnap.Inputs.StorageNetworkVolumeVolumeTagTagAssignmentArgs
    ///                             {
    ///                                 Name = "tag-1",
    ///                                 Value = "PROD",
    ///                             },
    ///                         },
    ///                         new Pnap.Inputs.StorageNetworkVolumeVolumeTagArgs
    ///                         {
    ///                             TagAssignment = new Pnap.Inputs.StorageNetworkVolumeVolumeTagTagAssignmentArgs
    ///                             {
    ///                                 Name = "tag-2",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [PnapResourceType("pnap:index/storageNetwork:StorageNetwork")]
    public partial class StorageNetwork : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Custom Client VLAN that the Storage Network will be set to.
        /// </summary>
        [Output("clientVlan")]
        public Output<int?> ClientVlan { get; private set; } = null!;

        /// <summary>
        /// Date and time when this volume was created.
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// Date and time of the initial request for volume deletion.
        /// </summary>
        [Output("deleteRequestedOn")]
        public Output<string> DeleteRequestedOn { get; private set; } = null!;

        /// <summary>
        /// Volume description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// IP of the storage network
        /// </summary>
        [Output("ips")]
        public Output<ImmutableArray<string>> Ips { get; private set; } = null!;

        /// <summary>
        /// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the tag.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Volume's status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
        /// </summary>
        [Output("volumes")]
        public Output<ImmutableArray<Outputs.StorageNetworkVolume>> Volumes { get; private set; } = null!;


        /// <summary>
        /// Create a StorageNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageNetwork(string name, StorageNetworkArgs args, CustomResourceOptions? options = null)
            : base("pnap:index/storageNetwork:StorageNetwork", name, args ?? new StorageNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageNetwork(string name, Input<string> id, StorageNetworkState? state = null, CustomResourceOptions? options = null)
            : base("pnap:index/storageNetwork:StorageNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/phoenixnap/pulumi-pnap/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageNetwork Get(string name, Input<string> id, StorageNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new StorageNetwork(name, id, state, options);
        }
    }

    public sealed class StorageNetworkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom Client VLAN that the Storage Network will be set to.
        /// </summary>
        [Input("clientVlan")]
        public Input<int>? ClientVlan { get; set; }

        /// <summary>
        /// Volume description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the tag.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("volumes", required: true)]
        private InputList<Inputs.StorageNetworkVolumeArgs>? _volumes;

        /// <summary>
        /// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
        /// </summary>
        public InputList<Inputs.StorageNetworkVolumeArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.StorageNetworkVolumeArgs>());
            set => _volumes = value;
        }

        public StorageNetworkArgs()
        {
        }
        public static new StorageNetworkArgs Empty => new StorageNetworkArgs();
    }

    public sealed class StorageNetworkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom Client VLAN that the Storage Network will be set to.
        /// </summary>
        [Input("clientVlan")]
        public Input<int>? ClientVlan { get; set; }

        /// <summary>
        /// Date and time when this volume was created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// Date and time of the initial request for volume deletion.
        /// </summary>
        [Input("deleteRequestedOn")]
        public Input<string>? DeleteRequestedOn { get; set; }

        /// <summary>
        /// Volume description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ips")]
        private InputList<string>? _ips;

        /// <summary>
        /// IP of the storage network
        /// </summary>
        public InputList<string> Ips
        {
            get => _ips ?? (_ips = new InputList<string>());
            set => _ips = value;
        }

        /// <summary>
        /// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the tag.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Volume's status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("volumes")]
        private InputList<Inputs.StorageNetworkVolumeGetArgs>? _volumes;

        /// <summary>
        /// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
        /// </summary>
        public InputList<Inputs.StorageNetworkVolumeGetArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.StorageNetworkVolumeGetArgs>());
            set => _volumes = value;
        }

        public StorageNetworkState()
        {
        }
        public static new StorageNetworkState Empty => new StorageNetworkState();
    }
}
