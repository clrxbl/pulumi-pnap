// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PhoenixNAP.Pulumi.Pnap
{
    /// <summary>
    /// Provides a phoenixNAP reservation resource. This can be used to create and modify reservations.
    /// 
    /// ## Example Usage
    /// 
    /// Create a reservation
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Pnap = PhoenixNAP.Pulumi.Pnap;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a reservation
    ///     var test_Reservation_1 = new Pnap.Reservation("test-Reservation-1", new()
    ///     {
    ///         Sku = "XXX-XXX-XXX",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [PnapResourceType("pnap:index/reservation:Reservation")]
    public partial class Reservation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID currently being assigned to reservation.
        /// </summary>
        [Output("assignedResourceId")]
        public Output<string> AssignedResourceId { get; private set; } = null!;

        /// <summary>
        /// A flag indicating whether the reservation will auto-renew (default is true, it can only be modified after the creation of resource).
        /// </summary>
        [Output("autoRenew")]
        public Output<bool> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// The reason for disabling auto-renewal.
        /// </summary>
        [Output("autoRenewDisableReason")]
        public Output<string?> AutoRenewDisableReason { get; private set; } = null!;

        /// <summary>
        /// The point in time (in UTC) when the reservation ends.
        /// </summary>
        [Output("endDateTime")]
        public Output<string> EndDateTime { get; private set; } = null!;

        /// <summary>
        /// Reservations created with initial invoice model ON_CREATION will be invoiced on same date when reservation is created. Reservation created with CALENDAR_MONTH initial invoice model will be invoiced at the begining of next month.
        /// </summary>
        [Output("initialInvoiceModel")]
        public Output<string> InitialInvoiceModel { get; private set; } = null!;

        /// <summary>
        /// The point in time (in UTC) when the reservation was renewed last.
        /// </summary>
        [Output("lastRenewalDateTime")]
        public Output<string> LastRenewalDateTime { get; private set; } = null!;

        /// <summary>
        /// The location code.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Next billing date for reservation.
        /// </summary>
        [Output("nextBillingDate")]
        public Output<string> NextBillingDate { get; private set; } = null!;

        /// <summary>
        /// The point in time (in UTC) when the reservation will be renewed if auto renew is set to true.
        /// </summary>
        [Output("nextRenewalDateTime")]
        public Output<string> NextRenewalDateTime { get; private set; } = null!;

        /// <summary>
        /// Reservation price.
        /// </summary>
        [Output("price")]
        public Output<double> Price { get; private set; } = null!;

        /// <summary>
        /// The unit to which the price applies.
        /// </summary>
        [Output("priceUnit")]
        public Output<string> PriceUnit { get; private set; } = null!;

        /// <summary>
        /// The product category.
        /// </summary>
        [Output("productCategory")]
        public Output<string> ProductCategory { get; private set; } = null!;

        /// <summary>
        /// The code identifying the product. This code has significance across all locations.
        /// </summary>
        [Output("productCode")]
        public Output<string> ProductCode { get; private set; } = null!;

        /// <summary>
        /// The reservation model.
        /// </summary>
        [Output("reservationModel")]
        public Output<string> ReservationModel { get; private set; } = null!;

        /// <summary>
        /// The SKU code of product pricing plan.
        /// </summary>
        [Output("sku")]
        public Output<string> Sku { get; private set; } = null!;

        /// <summary>
        /// The point in time (in UTC) when the reservation starts.
        /// </summary>
        [Output("startDateTime")]
        public Output<string> StartDateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Reservation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Reservation(string name, ReservationArgs args, CustomResourceOptions? options = null)
            : base("pnap:index/reservation:Reservation", name, args ?? new ReservationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Reservation(string name, Input<string> id, ReservationState? state = null, CustomResourceOptions? options = null)
            : base("pnap:index/reservation:Reservation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/phoenixnap/pulumi-pnap/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Reservation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Reservation Get(string name, Input<string> id, ReservationState? state = null, CustomResourceOptions? options = null)
        {
            return new Reservation(name, id, state, options);
        }
    }

    public sealed class ReservationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A flag indicating whether the reservation will auto-renew (default is true, it can only be modified after the creation of resource).
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The reason for disabling auto-renewal.
        /// </summary>
        [Input("autoRenewDisableReason")]
        public Input<string>? AutoRenewDisableReason { get; set; }

        /// <summary>
        /// The SKU code of product pricing plan.
        /// </summary>
        [Input("sku", required: true)]
        public Input<string> Sku { get; set; } = null!;

        public ReservationArgs()
        {
        }
        public static new ReservationArgs Empty => new ReservationArgs();
    }

    public sealed class ReservationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID currently being assigned to reservation.
        /// </summary>
        [Input("assignedResourceId")]
        public Input<string>? AssignedResourceId { get; set; }

        /// <summary>
        /// A flag indicating whether the reservation will auto-renew (default is true, it can only be modified after the creation of resource).
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// The reason for disabling auto-renewal.
        /// </summary>
        [Input("autoRenewDisableReason")]
        public Input<string>? AutoRenewDisableReason { get; set; }

        /// <summary>
        /// The point in time (in UTC) when the reservation ends.
        /// </summary>
        [Input("endDateTime")]
        public Input<string>? EndDateTime { get; set; }

        /// <summary>
        /// Reservations created with initial invoice model ON_CREATION will be invoiced on same date when reservation is created. Reservation created with CALENDAR_MONTH initial invoice model will be invoiced at the begining of next month.
        /// </summary>
        [Input("initialInvoiceModel")]
        public Input<string>? InitialInvoiceModel { get; set; }

        /// <summary>
        /// The point in time (in UTC) when the reservation was renewed last.
        /// </summary>
        [Input("lastRenewalDateTime")]
        public Input<string>? LastRenewalDateTime { get; set; }

        /// <summary>
        /// The location code.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Next billing date for reservation.
        /// </summary>
        [Input("nextBillingDate")]
        public Input<string>? NextBillingDate { get; set; }

        /// <summary>
        /// The point in time (in UTC) when the reservation will be renewed if auto renew is set to true.
        /// </summary>
        [Input("nextRenewalDateTime")]
        public Input<string>? NextRenewalDateTime { get; set; }

        /// <summary>
        /// Reservation price.
        /// </summary>
        [Input("price")]
        public Input<double>? Price { get; set; }

        /// <summary>
        /// The unit to which the price applies.
        /// </summary>
        [Input("priceUnit")]
        public Input<string>? PriceUnit { get; set; }

        /// <summary>
        /// The product category.
        /// </summary>
        [Input("productCategory")]
        public Input<string>? ProductCategory { get; set; }

        /// <summary>
        /// The code identifying the product. This code has significance across all locations.
        /// </summary>
        [Input("productCode")]
        public Input<string>? ProductCode { get; set; }

        /// <summary>
        /// The reservation model.
        /// </summary>
        [Input("reservationModel")]
        public Input<string>? ReservationModel { get; set; }

        /// <summary>
        /// The SKU code of product pricing plan.
        /// </summary>
        [Input("sku")]
        public Input<string>? Sku { get; set; }

        /// <summary>
        /// The point in time (in UTC) when the reservation starts.
        /// </summary>
        [Input("startDateTime")]
        public Input<string>? StartDateTime { get; set; }

        public ReservationState()
        {
        }
        public static new ReservationState Empty => new ReservationState();
    }
}
