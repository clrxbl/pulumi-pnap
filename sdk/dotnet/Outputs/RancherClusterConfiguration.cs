// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pnap.Outputs
{

    [OutputType]
    public sealed class RancherClusterConfiguration
    {
        /// <summary>
        /// Define the custom SSL certificates to be used instead of defaults. The `certificates` block has 3 fields.
        /// </summary>
        public readonly Outputs.RancherClusterConfigurationCertificates? Certificates;
        /// <summary>
        /// This maps to rancher's cluster-domain. Cluster Domain.
        /// </summary>
        public readonly string? ClusterDomain;
        /// <summary>
        /// This maps to rancher's etcd-snapshot-retention. Number of snapshots to retain. Default value is 5.
        /// </summary>
        public readonly int? EtcdSnapshotRetention;
        /// <summary>
        /// This maps to rancher's etcd-snapshot-schedule-cron. Snapshot interval time in cron spec.
        /// </summary>
        public readonly string? EtcdSnapshotScheduleCron;
        /// <summary>
        /// This maps to rancher's node-taint. Registering kubelet with set of taints.
        /// </summary>
        public readonly string? NodeTaint;
        /// <summary>
        /// This maps to rancher's tls-san. Add additional hostname or IP as a Subject Alternative Name in the TLS cert.
        /// </summary>
        public readonly string? TlsSan;
        /// <summary>
        /// Shared secret used to join a server or agent to a cluster.
        /// </summary>
        public readonly string? Token;

        [OutputConstructor]
        private RancherClusterConfiguration(
            Outputs.RancherClusterConfigurationCertificates? certificates,

            string? clusterDomain,

            int? etcdSnapshotRetention,

            string? etcdSnapshotScheduleCron,

            string? nodeTaint,

            string? tlsSan,

            string? token)
        {
            Certificates = certificates;
            ClusterDomain = clusterDomain;
            EtcdSnapshotRetention = etcdSnapshotRetention;
            EtcdSnapshotScheduleCron = etcdSnapshotScheduleCron;
            NodeTaint = nodeTaint;
            TlsSan = tlsSan;
            Token = token;
        }
    }
}
