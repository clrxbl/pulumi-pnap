// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Pnap.Outputs
{

    [OutputType]
    public sealed class GetStorageNetworkVolumeResult
    {
        /// <summary>
        /// Maximum capacity in GB.
        /// </summary>
        public readonly int CapacityInGb;
        /// <summary>
        /// Date and time when this volume was created.
        /// </summary>
        public readonly string CreatedOn;
        /// <summary>
        /// Date and time of the initial request for volume deletion.
        /// </summary>
        public readonly string DeleteRequestedOn;
        /// <summary>
        /// Volume description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The storage network identifier.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The friendly name of this storage network.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Volume's full path. It is in form of `/{volumeId}/pathSuffix`.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// Last part of volume's path.
        /// </summary>
        public readonly string PathSuffix;
        /// <summary>
        /// Permissions for the volume.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStorageNetworkVolumePermissionResult> Permissions;
        /// <summary>
        /// File system protocol.
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// Volume's status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The tags assigned to the volume.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStorageNetworkVolumeTagResult> Tags;
        /// <summary>
        /// Used capacity in GB, updated periodically.
        /// </summary>
        public readonly int UsedCapacityInGb;

        [OutputConstructor]
        private GetStorageNetworkVolumeResult(
            int capacityInGb,

            string createdOn,

            string deleteRequestedOn,

            string description,

            string id,

            string name,

            string path,

            string pathSuffix,

            ImmutableArray<Outputs.GetStorageNetworkVolumePermissionResult> permissions,

            string protocol,

            string status,

            ImmutableArray<Outputs.GetStorageNetworkVolumeTagResult> tags,

            int usedCapacityInGb)
        {
            CapacityInGb = capacityInGb;
            CreatedOn = createdOn;
            DeleteRequestedOn = deleteRequestedOn;
            Description = description;
            Id = id;
            Name = name;
            Path = path;
            PathSuffix = pathSuffix;
            Permissions = permissions;
            Protocol = protocol;
            Status = status;
            Tags = tags;
            UsedCapacityInGb = usedCapacityInGb;
        }
    }
}
