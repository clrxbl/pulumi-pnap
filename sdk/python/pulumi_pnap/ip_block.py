# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IpBlockArgs', 'IpBlock']

@pulumi.input_type
class IpBlockArgs:
    def __init__(__self__, *,
                 cidr_block_size: pulumi.Input[str],
                 location: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]]] = None):
        """
        The set of arguments for constructing a IpBlock resource.
        :param pulumi.Input[str] cidr_block_size: CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
        :param pulumi.Input[str] location: IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
        :param pulumi.Input[str] description: Description of the IP Block.
        :param pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]] tags: Tags to set to IP Block, if any.
        """
        pulumi.set(__self__, "cidr_block_size", cidr_block_size)
        pulumi.set(__self__, "location", location)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="cidrBlockSize")
    def cidr_block_size(self) -> pulumi.Input[str]:
        """
        CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
        """
        return pulumi.get(self, "cidr_block_size")

    @cidr_block_size.setter
    def cidr_block_size(self, value: pulumi.Input[str]):
        pulumi.set(self, "cidr_block_size", value)

    @property
    @pulumi.getter
    def location(self) -> pulumi.Input[str]:
        """
        IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: pulumi.Input[str]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the IP Block.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]]]:
        """
        Tags to set to IP Block, if any.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _IpBlockState:
    def __init__(__self__, *,
                 assigned_resource_id: Optional[pulumi.Input[str]] = None,
                 assigned_resource_type: Optional[pulumi.Input[str]] = None,
                 cidr: Optional[pulumi.Input[str]] = None,
                 cidr_block_size: Optional[pulumi.Input[str]] = None,
                 created_on: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 is_bring_your_own: Optional[pulumi.Input[bool]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]]] = None):
        """
        Input properties used for looking up and filtering IpBlock resources.
        :param pulumi.Input[str] assigned_resource_id: ID of the resource assigned to the IP Block.
               * `assigned_resource_type `- Type of the resource assigned to the IP Block.
        :param pulumi.Input[str] cidr: The IP Block in CIDR notation.
        :param pulumi.Input[str] cidr_block_size: CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
        :param pulumi.Input[str] created_on: Date and time when the IP Block was created.
        :param pulumi.Input[str] description: Description of the IP Block.
        :param pulumi.Input[bool] is_bring_your_own: True if the IP Block is a "bring your own" block.
        :param pulumi.Input[str] location: IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
        :param pulumi.Input[str] status: The status of the IP Block.
        :param pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]] tags: Tags to set to IP Block, if any.
        """
        if assigned_resource_id is not None:
            pulumi.set(__self__, "assigned_resource_id", assigned_resource_id)
        if assigned_resource_type is not None:
            pulumi.set(__self__, "assigned_resource_type", assigned_resource_type)
        if cidr is not None:
            pulumi.set(__self__, "cidr", cidr)
        if cidr_block_size is not None:
            pulumi.set(__self__, "cidr_block_size", cidr_block_size)
        if created_on is not None:
            pulumi.set(__self__, "created_on", created_on)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if is_bring_your_own is not None:
            pulumi.set(__self__, "is_bring_your_own", is_bring_your_own)
        if location is not None:
            pulumi.set(__self__, "location", location)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="assignedResourceId")
    def assigned_resource_id(self) -> Optional[pulumi.Input[str]]:
        """
        ID of the resource assigned to the IP Block.
        * `assigned_resource_type `- Type of the resource assigned to the IP Block.
        """
        return pulumi.get(self, "assigned_resource_id")

    @assigned_resource_id.setter
    def assigned_resource_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "assigned_resource_id", value)

    @property
    @pulumi.getter(name="assignedResourceType")
    def assigned_resource_type(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "assigned_resource_type")

    @assigned_resource_type.setter
    def assigned_resource_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "assigned_resource_type", value)

    @property
    @pulumi.getter
    def cidr(self) -> Optional[pulumi.Input[str]]:
        """
        The IP Block in CIDR notation.
        """
        return pulumi.get(self, "cidr")

    @cidr.setter
    def cidr(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cidr", value)

    @property
    @pulumi.getter(name="cidrBlockSize")
    def cidr_block_size(self) -> Optional[pulumi.Input[str]]:
        """
        CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
        """
        return pulumi.get(self, "cidr_block_size")

    @cidr_block_size.setter
    def cidr_block_size(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cidr_block_size", value)

    @property
    @pulumi.getter(name="createdOn")
    def created_on(self) -> Optional[pulumi.Input[str]]:
        """
        Date and time when the IP Block was created.
        """
        return pulumi.get(self, "created_on")

    @created_on.setter
    def created_on(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_on", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the IP Block.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="isBringYourOwn")
    def is_bring_your_own(self) -> Optional[pulumi.Input[bool]]:
        """
        True if the IP Block is a "bring your own" block.
        """
        return pulumi.get(self, "is_bring_your_own")

    @is_bring_your_own.setter
    def is_bring_your_own(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "is_bring_your_own", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the IP Block.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]]]:
        """
        Tags to set to IP Block, if any.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IpBlockTagArgs']]]]):
        pulumi.set(self, "tags", value)


class IpBlock(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cidr_block_size: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpBlockTagArgs']]]]] = None,
                 __props__=None):
        """
        Provides a phoenixNAP IP Block resource. This can be used to create, modify and delete IP Blocks.

        ## Example Usage

        Create an IP Block

        ```python
        import pulumi
        import pulumi_pnap as pnap

        # Create an IP Block
        ip_block_1 = pnap.IpBlock("ip-block-1",
            cidr_block_size="/28",
            description="IP Block #1 used for publicly accessing server #1.",
            location="PHX",
            tags=[
                pnap.IpBlockTagArgs(
                    tag_assignment=pnap.IpBlockTagTagAssignmentArgs(
                        name="tag-1",
                        value="PROD",
                    ),
                ),
                pnap.IpBlockTagArgs(
                    tag_assignment=pnap.IpBlockTagTagAssignmentArgs(
                        name="tag-2",
                    ),
                ),
            ])
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cidr_block_size: CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
        :param pulumi.Input[str] description: Description of the IP Block.
        :param pulumi.Input[str] location: IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpBlockTagArgs']]]] tags: Tags to set to IP Block, if any.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IpBlockArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a phoenixNAP IP Block resource. This can be used to create, modify and delete IP Blocks.

        ## Example Usage

        Create an IP Block

        ```python
        import pulumi
        import pulumi_pnap as pnap

        # Create an IP Block
        ip_block_1 = pnap.IpBlock("ip-block-1",
            cidr_block_size="/28",
            description="IP Block #1 used for publicly accessing server #1.",
            location="PHX",
            tags=[
                pnap.IpBlockTagArgs(
                    tag_assignment=pnap.IpBlockTagTagAssignmentArgs(
                        name="tag-1",
                        value="PROD",
                    ),
                ),
                pnap.IpBlockTagArgs(
                    tag_assignment=pnap.IpBlockTagTagAssignmentArgs(
                        name="tag-2",
                    ),
                ),
            ])
        ```

        :param str resource_name: The name of the resource.
        :param IpBlockArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IpBlockArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cidr_block_size: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpBlockTagArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IpBlockArgs.__new__(IpBlockArgs)

            if cidr_block_size is None and not opts.urn:
                raise TypeError("Missing required property 'cidr_block_size'")
            __props__.__dict__["cidr_block_size"] = cidr_block_size
            __props__.__dict__["description"] = description
            if location is None and not opts.urn:
                raise TypeError("Missing required property 'location'")
            __props__.__dict__["location"] = location
            __props__.__dict__["tags"] = tags
            __props__.__dict__["assigned_resource_id"] = None
            __props__.__dict__["assigned_resource_type"] = None
            __props__.__dict__["cidr"] = None
            __props__.__dict__["created_on"] = None
            __props__.__dict__["is_bring_your_own"] = None
            __props__.__dict__["status"] = None
        super(IpBlock, __self__).__init__(
            'pnap:index/ipBlock:IpBlock',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            assigned_resource_id: Optional[pulumi.Input[str]] = None,
            assigned_resource_type: Optional[pulumi.Input[str]] = None,
            cidr: Optional[pulumi.Input[str]] = None,
            cidr_block_size: Optional[pulumi.Input[str]] = None,
            created_on: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            is_bring_your_own: Optional[pulumi.Input[bool]] = None,
            location: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpBlockTagArgs']]]]] = None) -> 'IpBlock':
        """
        Get an existing IpBlock resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] assigned_resource_id: ID of the resource assigned to the IP Block.
               * `assigned_resource_type `- Type of the resource assigned to the IP Block.
        :param pulumi.Input[str] cidr: The IP Block in CIDR notation.
        :param pulumi.Input[str] cidr_block_size: CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
        :param pulumi.Input[str] created_on: Date and time when the IP Block was created.
        :param pulumi.Input[str] description: Description of the IP Block.
        :param pulumi.Input[bool] is_bring_your_own: True if the IP Block is a "bring your own" block.
        :param pulumi.Input[str] location: IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
        :param pulumi.Input[str] status: The status of the IP Block.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpBlockTagArgs']]]] tags: Tags to set to IP Block, if any.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IpBlockState.__new__(_IpBlockState)

        __props__.__dict__["assigned_resource_id"] = assigned_resource_id
        __props__.__dict__["assigned_resource_type"] = assigned_resource_type
        __props__.__dict__["cidr"] = cidr
        __props__.__dict__["cidr_block_size"] = cidr_block_size
        __props__.__dict__["created_on"] = created_on
        __props__.__dict__["description"] = description
        __props__.__dict__["is_bring_your_own"] = is_bring_your_own
        __props__.__dict__["location"] = location
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        return IpBlock(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="assignedResourceId")
    def assigned_resource_id(self) -> pulumi.Output[str]:
        """
        ID of the resource assigned to the IP Block.
        * `assigned_resource_type `- Type of the resource assigned to the IP Block.
        """
        return pulumi.get(self, "assigned_resource_id")

    @property
    @pulumi.getter(name="assignedResourceType")
    def assigned_resource_type(self) -> pulumi.Output[str]:
        return pulumi.get(self, "assigned_resource_type")

    @property
    @pulumi.getter
    def cidr(self) -> pulumi.Output[str]:
        """
        The IP Block in CIDR notation.
        """
        return pulumi.get(self, "cidr")

    @property
    @pulumi.getter(name="cidrBlockSize")
    def cidr_block_size(self) -> pulumi.Output[str]:
        """
        CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
        """
        return pulumi.get(self, "cidr_block_size")

    @property
    @pulumi.getter(name="createdOn")
    def created_on(self) -> pulumi.Output[str]:
        """
        Date and time when the IP Block was created.
        """
        return pulumi.get(self, "created_on")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Description of the IP Block.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="isBringYourOwn")
    def is_bring_your_own(self) -> pulumi.Output[bool]:
        """
        True if the IP Block is a "bring your own" block.
        """
        return pulumi.get(self, "is_bring_your_own")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        """
        IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        The status of the IP Block.
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Sequence['outputs.IpBlockTag']]]:
        """
        Tags to set to IP Block, if any.
        """
        return pulumi.get(self, "tags")

