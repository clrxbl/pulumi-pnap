// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP IP Block datasource. This can be used to read IP Blocks.
//
// ## Example Usage
//
// # Fetch an IP Block by CIDR and show it's details in alphabetical order
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := pnap.LookupIpBlock(ctx, &pnap.LookupIpBlockArgs{
//				Cidr: pulumi.StringRef("1.1.1.0/31"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("ip-block", test)
//			return nil
//		})
//	}
//
// ```
func LookupIpBlock(ctx *pulumi.Context, args *LookupIpBlockArgs, opts ...pulumi.InvokeOption) (*LookupIpBlockResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpBlockResult
	err := ctx.Invoke("pnap:index/getIpBlock:getIpBlock", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpBlock.
type LookupIpBlockArgs struct {
	// The IP Block in CIDR notation.
	Cidr *string `pulumi:"cidr"`
	// The IP Block identifier.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getIpBlock.
type LookupIpBlockResult struct {
	// ID of the resource assigned to the IP Block.
	// * ` assignedResourceType  `- Type of the resource assigned to the IP Block.
	AssignedResourceId   string `pulumi:"assignedResourceId"`
	AssignedResourceType string `pulumi:"assignedResourceType"`
	// The IP Block in CIDR notation.
	Cidr string `pulumi:"cidr"`
	// CIDR IP Block Size.
	CidrBlockSize string `pulumi:"cidrBlockSize"`
	// Date and time when the IP Block was created.
	CreatedOn string `pulumi:"createdOn"`
	// Description of the IP Block.
	Description string `pulumi:"description"`
	// The unique id of the tag.
	Id string `pulumi:"id"`
	// True if the IP Block is a "bring your own" block.
	IsBringYourOwn bool `pulumi:"isBringYourOwn"`
	// IP Block location ID.
	Location string `pulumi:"location"`
	// The status of the IP Block.
	Status string `pulumi:"status"`
	// The tags assigned to the IP Block.
	Tags []GetIpBlockTag `pulumi:"tags"`
}

func LookupIpBlockOutput(ctx *pulumi.Context, args LookupIpBlockOutputArgs, opts ...pulumi.InvokeOption) LookupIpBlockResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpBlockResult, error) {
			args := v.(LookupIpBlockArgs)
			r, err := LookupIpBlock(ctx, &args, opts...)
			var s LookupIpBlockResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpBlockResultOutput)
}

// A collection of arguments for invoking getIpBlock.
type LookupIpBlockOutputArgs struct {
	// The IP Block in CIDR notation.
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// The IP Block identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupIpBlockOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpBlockArgs)(nil)).Elem()
}

// A collection of values returned by getIpBlock.
type LookupIpBlockResultOutput struct{ *pulumi.OutputState }

func (LookupIpBlockResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpBlockResult)(nil)).Elem()
}

func (o LookupIpBlockResultOutput) ToLookupIpBlockResultOutput() LookupIpBlockResultOutput {
	return o
}

func (o LookupIpBlockResultOutput) ToLookupIpBlockResultOutputWithContext(ctx context.Context) LookupIpBlockResultOutput {
	return o
}

// ID of the resource assigned to the IP Block.
// * ` assignedResourceType  `- Type of the resource assigned to the IP Block.
func (o LookupIpBlockResultOutput) AssignedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.AssignedResourceId }).(pulumi.StringOutput)
}

func (o LookupIpBlockResultOutput) AssignedResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.AssignedResourceType }).(pulumi.StringOutput)
}

// The IP Block in CIDR notation.
func (o LookupIpBlockResultOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.Cidr }).(pulumi.StringOutput)
}

// CIDR IP Block Size.
func (o LookupIpBlockResultOutput) CidrBlockSize() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.CidrBlockSize }).(pulumi.StringOutput)
}

// Date and time when the IP Block was created.
func (o LookupIpBlockResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Description of the IP Block.
func (o LookupIpBlockResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.Description }).(pulumi.StringOutput)
}

// The unique id of the tag.
func (o LookupIpBlockResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.Id }).(pulumi.StringOutput)
}

// True if the IP Block is a "bring your own" block.
func (o LookupIpBlockResultOutput) IsBringYourOwn() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupIpBlockResult) bool { return v.IsBringYourOwn }).(pulumi.BoolOutput)
}

// IP Block location ID.
func (o LookupIpBlockResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.Location }).(pulumi.StringOutput)
}

// The status of the IP Block.
func (o LookupIpBlockResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpBlockResult) string { return v.Status }).(pulumi.StringOutput)
}

// The tags assigned to the IP Block.
func (o LookupIpBlockResultOutput) Tags() GetIpBlockTagArrayOutput {
	return o.ApplyT(func(v LookupIpBlockResult) []GetIpBlockTag { return v.Tags }).(GetIpBlockTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpBlockResultOutput{})
}
