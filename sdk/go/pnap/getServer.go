// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP server datasource. This can be used to read servers.
//
// ## Example Usage
//
// # Fetch a server data by hostname and show it's primary public IP address
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			serverDs, err := pnap.LookupServer(ctx, &pnap.LookupServerArgs{
//				Hostname: pulumi.StringRef("demo-server"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("serverId", serverDs.PrimaryIpAddress)
//			return nil
//		})
//	}
//
// ```
func LookupServer(ctx *pulumi.Context, args *LookupServerArgs, opts ...pulumi.InvokeOption) (*LookupServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerResult
	err := ctx.Invoke("pnap:index/getServer:getServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServer.
type LookupServerArgs struct {
	// Server hostname.
	Hostname *string `pulumi:"hostname"`
	// The unique identifier of the server.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getServer.
type LookupServerResult struct {
	Hostname string `pulumi:"hostname"`
	// The network identifier.
	Id string `pulumi:"id"`
	// Server Location ID. Cannot be changed once a server is created.
	Location string `pulumi:"location"`
	// Netris Controller configuration properties.
	NetrisControllers []GetServerNetrisController `pulumi:"netrisControllers"`
	// Netris Softgate configuration properties.
	NetrisSoftgates []GetServerNetrisSoftgate `pulumi:"netrisSoftgates"`
	// Entire network details of bare metal server.
	NetworkConfigurations []GetServerNetworkConfiguration `pulumi:"networkConfigurations"`
	// The type of network configuration for this server.
	NetworkType string `pulumi:"networkType"`
	// The server’s OS ID used when the server was created.
	Os string `pulumi:"os"`
	// First usable public IP Address.
	PrimaryIpAddress string `pulumi:"primaryIpAddress"`
	// Private IP Addresses assigned to server. Must contain at least 1 item.
	PrivateIpAddresses []string `pulumi:"privateIpAddresses"`
	// Public IP Addresses assigned to server. Must contain at least 1 item.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
	// The status of the server.
	Status string `pulumi:"status"`
	// Storage configuration.
	StorageConfigurations []GetServerStorageConfiguration `pulumi:"storageConfigurations"`
	// Unique identifier of the server to which the reservation has been transferred.
	SupersededBy string `pulumi:"supersededBy"`
	// Unique identifier of the server from which the reservation has been transferred.
	Supersedes string `pulumi:"supersedes"`
	// The tags assigned to the server.
	Tags []GetServerTag `pulumi:"tags"`
	// Server type ID. Cannot be changed once a server is created.
	Type string `pulumi:"type"`
}

func LookupServerOutput(ctx *pulumi.Context, args LookupServerOutputArgs, opts ...pulumi.InvokeOption) LookupServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerResult, error) {
			args := v.(LookupServerArgs)
			r, err := LookupServer(ctx, &args, opts...)
			var s LookupServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerResultOutput)
}

// A collection of arguments for invoking getServer.
type LookupServerOutputArgs struct {
	// Server hostname.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The unique identifier of the server.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerArgs)(nil)).Elem()
}

// A collection of values returned by getServer.
type LookupServerResultOutput struct{ *pulumi.OutputState }

func (LookupServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerResult)(nil)).Elem()
}

func (o LookupServerResultOutput) ToLookupServerResultOutput() LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) ToLookupServerResultOutputWithContext(ctx context.Context) LookupServerResultOutput {
	return o
}

func (o LookupServerResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The network identifier.
func (o LookupServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Server Location ID. Cannot be changed once a server is created.
func (o LookupServerResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Location }).(pulumi.StringOutput)
}

// Netris Controller configuration properties.
func (o LookupServerResultOutput) NetrisControllers() GetServerNetrisControllerArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerNetrisController { return v.NetrisControllers }).(GetServerNetrisControllerArrayOutput)
}

// Netris Softgate configuration properties.
func (o LookupServerResultOutput) NetrisSoftgates() GetServerNetrisSoftgateArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerNetrisSoftgate { return v.NetrisSoftgates }).(GetServerNetrisSoftgateArrayOutput)
}

// Entire network details of bare metal server.
func (o LookupServerResultOutput) NetworkConfigurations() GetServerNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerNetworkConfiguration { return v.NetworkConfigurations }).(GetServerNetworkConfigurationArrayOutput)
}

// The type of network configuration for this server.
func (o LookupServerResultOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The server’s OS ID used when the server was created.
func (o LookupServerResultOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Os }).(pulumi.StringOutput)
}

// First usable public IP Address.
func (o LookupServerResultOutput) PrimaryIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.PrimaryIpAddress }).(pulumi.StringOutput)
}

// Private IP Addresses assigned to server. Must contain at least 1 item.
func (o LookupServerResultOutput) PrivateIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []string { return v.PrivateIpAddresses }).(pulumi.StringArrayOutput)
}

// Public IP Addresses assigned to server. Must contain at least 1 item.
func (o LookupServerResultOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []string { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

// The status of the server.
func (o LookupServerResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Status }).(pulumi.StringOutput)
}

// Storage configuration.
func (o LookupServerResultOutput) StorageConfigurations() GetServerStorageConfigurationArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerStorageConfiguration { return v.StorageConfigurations }).(GetServerStorageConfigurationArrayOutput)
}

// Unique identifier of the server to which the reservation has been transferred.
func (o LookupServerResultOutput) SupersededBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.SupersededBy }).(pulumi.StringOutput)
}

// Unique identifier of the server from which the reservation has been transferred.
func (o LookupServerResultOutput) Supersedes() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Supersedes }).(pulumi.StringOutput)
}

// The tags assigned to the server.
func (o LookupServerResultOutput) Tags() GetServerTagArrayOutput {
	return o.ApplyT(func(v LookupServerResult) []GetServerTag { return v.Tags }).(GetServerTagArrayOutput)
}

// Server type ID. Cannot be changed once a server is created.
func (o LookupServerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerResultOutput{})
}
