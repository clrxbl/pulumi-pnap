// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP Storage Network datasource. This can be used to read storage networks.
//
// ## Example Usage
//
// # Fetch a storage network by name and show it's volumes
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			storage_Network_1, err := pnap.LookupStorageNetwork(ctx, &pnap.LookupStorageNetworkArgs{
//				Name: pulumi.StringRef("Storage-1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("volumes", storage_Network_1.Volumes)
//			return nil
//		})
//	}
//
// ```
func LookupStorageNetwork(ctx *pulumi.Context, args *LookupStorageNetworkArgs, opts ...pulumi.InvokeOption) (*LookupStorageNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupStorageNetworkResult
	err := ctx.Invoke("pnap:index/getStorageNetwork:getStorageNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStorageNetwork.
type LookupStorageNetworkArgs struct {
	// The storage network identifier.
	Id *string `pulumi:"id"`
	// The friendly name of this storage network.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getStorageNetwork.
type LookupStorageNetworkResult struct {
	// Date and time when this volume was created.
	CreatedOn string `pulumi:"createdOn"`
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn string `pulumi:"deleteRequestedOn"`
	// Volume description.
	Description string `pulumi:"description"`
	// The unique id of the tag.
	Id string `pulumi:"id"`
	// IP of the storage network
	Ips []string `pulumi:"ips"`
	// The location of this storage network.
	// * ` networkId  `- ID of network the storage belongs to.
	Location string `pulumi:"location"`
	// The name of the tag.
	Name      string `pulumi:"name"`
	NetworkId string `pulumi:"networkId"`
	// Volume's status.
	Status string `pulumi:"status"`
	// Volume for the storage network.
	Volumes []GetStorageNetworkVolume `pulumi:"volumes"`
}

func LookupStorageNetworkOutput(ctx *pulumi.Context, args LookupStorageNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupStorageNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupStorageNetworkResult, error) {
			args := v.(LookupStorageNetworkArgs)
			r, err := LookupStorageNetwork(ctx, &args, opts...)
			var s LookupStorageNetworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupStorageNetworkResultOutput)
}

// A collection of arguments for invoking getStorageNetwork.
type LookupStorageNetworkOutputArgs struct {
	// The storage network identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The friendly name of this storage network.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupStorageNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getStorageNetwork.
type LookupStorageNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupStorageNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupStorageNetworkResult)(nil)).Elem()
}

func (o LookupStorageNetworkResultOutput) ToLookupStorageNetworkResultOutput() LookupStorageNetworkResultOutput {
	return o
}

func (o LookupStorageNetworkResultOutput) ToLookupStorageNetworkResultOutputWithContext(ctx context.Context) LookupStorageNetworkResultOutput {
	return o
}

// Date and time when this volume was created.
func (o LookupStorageNetworkResultOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Date and time of the initial request for volume deletion.
func (o LookupStorageNetworkResultOutput) DeleteRequestedOn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.DeleteRequestedOn }).(pulumi.StringOutput)
}

// Volume description.
func (o LookupStorageNetworkResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.Description }).(pulumi.StringOutput)
}

// The unique id of the tag.
func (o LookupStorageNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// IP of the storage network
func (o LookupStorageNetworkResultOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The location of this storage network.
// * ` networkId  `- ID of network the storage belongs to.
func (o LookupStorageNetworkResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the tag.
func (o LookupStorageNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupStorageNetworkResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

// Volume's status.
func (o LookupStorageNetworkResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) string { return v.Status }).(pulumi.StringOutput)
}

// Volume for the storage network.
func (o LookupStorageNetworkResultOutput) Volumes() GetStorageNetworkVolumeArrayOutput {
	return o.ApplyT(func(v LookupStorageNetworkResult) []GetStorageNetworkVolume { return v.Volumes }).(GetStorageNetworkVolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupStorageNetworkResultOutput{})
}
