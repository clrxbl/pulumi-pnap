// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"errors"
	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP Private Network resource. This can be used to create,
// modify, and delete private networks.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pnap.NewPrivateNetwork(ctx, "test-Network-33", &pnap.PrivateNetworkArgs{
//				Cidr:     pulumi.String("10.0.0.0/24"),
//				Location: pulumi.String("PHX"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pnap.NewPrivateNetwork(ctx, "test-Network-44", &pnap.PrivateNetworkArgs{
//				Cidr:     pulumi.String("172.16.0.0/24"),
//				Location: pulumi.String("PHX"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = pnap.NewServer(ctx, "test-Server-1", &pnap.ServerArgs{
//				Hostname:              pulumi.String("Test-Server-1"),
//				Os:                    pulumi.String("ubuntu/bionic"),
//				Type:                  pulumi.String("s1.c1.medium"),
//				Location:              pulumi.String("PHX"),
//				InstallDefaultSshKeys: pulumi.Bool(true),
//				NetworkConfiguration: &pnap.ServerNetworkConfigurationArgs{
//					PrivateNetworkConfiguration: &pnap.ServerNetworkConfigurationPrivateNetworkConfigurationArgs{
//						ConfigurationType: pulumi.String("USER_DEFINED"),
//						PrivateNetworks: pnap.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray{
//							&pnap.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{
//								ServerPrivateNetwork: &pnap.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs{
//									Id: test_Network_33.ID(),
//									Ips: pulumi.StringArray{
//										pulumi.String("10.0.0.12"),
//									},
//								},
//							},
//							&pnap.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{
//								ServerPrivateNetwork: &pnap.ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs{
//									Id: test_Network_44.ID(),
//									Ips: pulumi.StringArray{
//										pulumi.String("172.16.0.12"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PrivateNetwork struct {
	pulumi.CustomResourceState

	// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
	Cidr pulumi.StringOutput `pulumi:"cidr"`
	// Date and time when this private network was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// The description of this private network.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
	Force pulumi.BoolPtrOutput `pulumi:"force"`
	// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifies network as the default private network for the specified location. Default value is `false`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	LocationDefault pulumi.BoolOutput `pulumi:"locationDefault"`
	// A list of resources that are members of this private network.
	Memberships PrivateNetworkMembershipArrayOutput `pulumi:"memberships"`
	// The friendly name of this private network. This name should be unique.
	Name    pulumi.StringOutput             `pulumi:"name"`
	Servers PrivateNetworkServerArrayOutput `pulumi:"servers"`
	// The status of the private network.
	Status pulumi.StringOutput `pulumi:"status"`
	// The type of the private network.
	// * ` servers  ` - (Deprecated) List of server details linked to the private network.
	Type   pulumi.StringOutput `pulumi:"type"`
	VlanId pulumi.IntOutput    `pulumi:"vlanId"`
}

// NewPrivateNetwork registers a new resource with the given unique name, arguments, and options.
func NewPrivateNetwork(ctx *pulumi.Context,
	name string, args *PrivateNetworkArgs, opts ...pulumi.ResourceOption) (*PrivateNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateNetwork
	err := ctx.RegisterResource("pnap:index/privateNetwork:PrivateNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateNetwork gets an existing PrivateNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateNetworkState, opts ...pulumi.ResourceOption) (*PrivateNetwork, error) {
	var resource PrivateNetwork
	err := ctx.ReadResource("pnap:index/privateNetwork:PrivateNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateNetwork resources.
type privateNetworkState struct {
	// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
	Cidr *string `pulumi:"cidr"`
	// Date and time when this private network was created.
	CreatedOn *string `pulumi:"createdOn"`
	// The description of this private network.
	Description *string `pulumi:"description"`
	// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
	Force *bool `pulumi:"force"`
	// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	Location *string `pulumi:"location"`
	// Identifies network as the default private network for the specified location. Default value is `false`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	LocationDefault *bool `pulumi:"locationDefault"`
	// A list of resources that are members of this private network.
	Memberships []PrivateNetworkMembership `pulumi:"memberships"`
	// The friendly name of this private network. This name should be unique.
	Name    *string                `pulumi:"name"`
	Servers []PrivateNetworkServer `pulumi:"servers"`
	// The status of the private network.
	Status *string `pulumi:"status"`
	// The type of the private network.
	// * ` servers  ` - (Deprecated) List of server details linked to the private network.
	Type   *string `pulumi:"type"`
	VlanId *int    `pulumi:"vlanId"`
}

type PrivateNetworkState struct {
	// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
	Cidr pulumi.StringPtrInput
	// Date and time when this private network was created.
	CreatedOn pulumi.StringPtrInput
	// The description of this private network.
	Description pulumi.StringPtrInput
	// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
	Force pulumi.BoolPtrInput
	// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	Location pulumi.StringPtrInput
	// Identifies network as the default private network for the specified location. Default value is `false`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	LocationDefault pulumi.BoolPtrInput
	// A list of resources that are members of this private network.
	Memberships PrivateNetworkMembershipArrayInput
	// The friendly name of this private network. This name should be unique.
	Name    pulumi.StringPtrInput
	Servers PrivateNetworkServerArrayInput
	// The status of the private network.
	Status pulumi.StringPtrInput
	// The type of the private network.
	// * ` servers  ` - (Deprecated) List of server details linked to the private network.
	Type   pulumi.StringPtrInput
	VlanId pulumi.IntPtrInput
}

func (PrivateNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateNetworkState)(nil)).Elem()
}

type privateNetworkArgs struct {
	// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
	Cidr *string `pulumi:"cidr"`
	// The description of this private network.
	Description *string `pulumi:"description"`
	// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
	Force *bool `pulumi:"force"`
	// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	Location string `pulumi:"location"`
	// Identifies network as the default private network for the specified location. Default value is `false`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	LocationDefault *bool `pulumi:"locationDefault"`
	// The friendly name of this private network. This name should be unique.
	Name   *string `pulumi:"name"`
	VlanId *int    `pulumi:"vlanId"`
}

// The set of arguments for constructing a PrivateNetwork resource.
type PrivateNetworkArgs struct {
	// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
	Cidr pulumi.StringPtrInput
	// The description of this private network.
	Description pulumi.StringPtrInput
	// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
	Force pulumi.BoolPtrInput
	// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	Location pulumi.StringInput
	// Identifies network as the default private network for the specified location. Default value is `false`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	LocationDefault pulumi.BoolPtrInput
	// The friendly name of this private network. This name should be unique.
	Name   pulumi.StringPtrInput
	VlanId pulumi.IntPtrInput
}

func (PrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateNetworkArgs)(nil)).Elem()
}

type PrivateNetworkInput interface {
	pulumi.Input

	ToPrivateNetworkOutput() PrivateNetworkOutput
	ToPrivateNetworkOutputWithContext(ctx context.Context) PrivateNetworkOutput
}

func (*PrivateNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNetwork)(nil)).Elem()
}

func (i *PrivateNetwork) ToPrivateNetworkOutput() PrivateNetworkOutput {
	return i.ToPrivateNetworkOutputWithContext(context.Background())
}

func (i *PrivateNetwork) ToPrivateNetworkOutputWithContext(ctx context.Context) PrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkOutput)
}

// PrivateNetworkArrayInput is an input type that accepts PrivateNetworkArray and PrivateNetworkArrayOutput values.
// You can construct a concrete instance of `PrivateNetworkArrayInput` via:
//
//	PrivateNetworkArray{ PrivateNetworkArgs{...} }
type PrivateNetworkArrayInput interface {
	pulumi.Input

	ToPrivateNetworkArrayOutput() PrivateNetworkArrayOutput
	ToPrivateNetworkArrayOutputWithContext(context.Context) PrivateNetworkArrayOutput
}

type PrivateNetworkArray []PrivateNetworkInput

func (PrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateNetwork)(nil)).Elem()
}

func (i PrivateNetworkArray) ToPrivateNetworkArrayOutput() PrivateNetworkArrayOutput {
	return i.ToPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i PrivateNetworkArray) ToPrivateNetworkArrayOutputWithContext(ctx context.Context) PrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkArrayOutput)
}

// PrivateNetworkMapInput is an input type that accepts PrivateNetworkMap and PrivateNetworkMapOutput values.
// You can construct a concrete instance of `PrivateNetworkMapInput` via:
//
//	PrivateNetworkMap{ "key": PrivateNetworkArgs{...} }
type PrivateNetworkMapInput interface {
	pulumi.Input

	ToPrivateNetworkMapOutput() PrivateNetworkMapOutput
	ToPrivateNetworkMapOutputWithContext(context.Context) PrivateNetworkMapOutput
}

type PrivateNetworkMap map[string]PrivateNetworkInput

func (PrivateNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateNetwork)(nil)).Elem()
}

func (i PrivateNetworkMap) ToPrivateNetworkMapOutput() PrivateNetworkMapOutput {
	return i.ToPrivateNetworkMapOutputWithContext(context.Background())
}

func (i PrivateNetworkMap) ToPrivateNetworkMapOutputWithContext(ctx context.Context) PrivateNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkMapOutput)
}

type PrivateNetworkOutput struct{ *pulumi.OutputState }

func (PrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateNetwork)(nil)).Elem()
}

func (o PrivateNetworkOutput) ToPrivateNetworkOutput() PrivateNetworkOutput {
	return o
}

func (o PrivateNetworkOutput) ToPrivateNetworkOutputWithContext(ctx context.Context) PrivateNetworkOutput {
	return o
}

// IP range associated with this private network in CIDR notation. Setting the `force` query parameter to `true` allows you to skip assigning a specific IP range to network.
func (o PrivateNetworkOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

// Date and time when this private network was created.
func (o PrivateNetworkOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of this private network.
func (o PrivateNetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Query parameter controlling advanced features availability. It is advised to use with caution since it might lead to unhealthy setups.
func (o PrivateNetworkOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.BoolPtrOutput { return v.Force }).(pulumi.BoolPtrOutput)
}

// The location of this private network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
func (o PrivateNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifies network as the default private network for the specified location. Default value is `false`.
// * ` vlanId  `- The VLAN that will be assigned to this network.
func (o PrivateNetworkOutput) LocationDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.BoolOutput { return v.LocationDefault }).(pulumi.BoolOutput)
}

// A list of resources that are members of this private network.
func (o PrivateNetworkOutput) Memberships() PrivateNetworkMembershipArrayOutput {
	return o.ApplyT(func(v *PrivateNetwork) PrivateNetworkMembershipArrayOutput { return v.Memberships }).(PrivateNetworkMembershipArrayOutput)
}

// The friendly name of this private network. This name should be unique.
func (o PrivateNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PrivateNetworkOutput) Servers() PrivateNetworkServerArrayOutput {
	return o.ApplyT(func(v *PrivateNetwork) PrivateNetworkServerArrayOutput { return v.Servers }).(PrivateNetworkServerArrayOutput)
}

// The status of the private network.
func (o PrivateNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The type of the private network.
// * ` servers  ` - (Deprecated) List of server details linked to the private network.
func (o PrivateNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o PrivateNetworkOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *PrivateNetwork) pulumi.IntOutput { return v.VlanId }).(pulumi.IntOutput)
}

type PrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (PrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateNetwork)(nil)).Elem()
}

func (o PrivateNetworkArrayOutput) ToPrivateNetworkArrayOutput() PrivateNetworkArrayOutput {
	return o
}

func (o PrivateNetworkArrayOutput) ToPrivateNetworkArrayOutputWithContext(ctx context.Context) PrivateNetworkArrayOutput {
	return o
}

func (o PrivateNetworkArrayOutput) Index(i pulumi.IntInput) PrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateNetwork {
		return vs[0].([]*PrivateNetwork)[vs[1].(int)]
	}).(PrivateNetworkOutput)
}

type PrivateNetworkMapOutput struct{ *pulumi.OutputState }

func (PrivateNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateNetwork)(nil)).Elem()
}

func (o PrivateNetworkMapOutput) ToPrivateNetworkMapOutput() PrivateNetworkMapOutput {
	return o
}

func (o PrivateNetworkMapOutput) ToPrivateNetworkMapOutputWithContext(ctx context.Context) PrivateNetworkMapOutput {
	return o
}

func (o PrivateNetworkMapOutput) MapIndex(k pulumi.StringInput) PrivateNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateNetwork {
		return vs[0].(map[string]*PrivateNetwork)[vs[1].(string)]
	}).(PrivateNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkInput)(nil)).Elem(), &PrivateNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkArrayInput)(nil)).Elem(), PrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkMapInput)(nil)).Elem(), PrivateNetworkMap{})
	pulumi.RegisterOutputType(PrivateNetworkOutput{})
	pulumi.RegisterOutputType(PrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(PrivateNetworkMapOutput{})
}
