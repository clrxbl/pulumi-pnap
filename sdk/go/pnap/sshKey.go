// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"errors"
	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP SSH key resource. This can be used to create,
// modify, and delete SSH keys.
type SshKey struct {
	pulumi.CustomResourceState

	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
	Default pulumi.BoolOutput `pulumi:"default"`
	// SSH key auto-generated SHA-256 fingerprint.
	// * ` createdOn  `- Date and time of creation.
	// * ` lastUpdatedOn  ` - Date and time of last update.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// SSH key actual key value.
	Key           pulumi.StringOutput `pulumi:"key"`
	LastUpdatedOn pulumi.StringOutput `pulumi:"lastUpdatedOn"`
	// Friendly SSH key name to represent an SSH key.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewSshKey registers a new resource with the given unique name, arguments, and options.
func NewSshKey(ctx *pulumi.Context,
	name string, args *SshKeyArgs, opts ...pulumi.ResourceOption) (*SshKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Default == nil {
		return nil, errors.New("invalid value for required argument 'Default'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SshKey
	err := ctx.RegisterResource("pnap:index/sshKey:SshKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSshKey gets an existing SshKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSshKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SshKeyState, opts ...pulumi.ResourceOption) (*SshKey, error) {
	var resource SshKey
	err := ctx.ReadResource("pnap:index/sshKey:SshKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SshKey resources.
type sshKeyState struct {
	CreatedOn *string `pulumi:"createdOn"`
	// Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
	Default *bool `pulumi:"default"`
	// SSH key auto-generated SHA-256 fingerprint.
	// * ` createdOn  `- Date and time of creation.
	// * ` lastUpdatedOn  ` - Date and time of last update.
	Fingerprint *string `pulumi:"fingerprint"`
	// SSH key actual key value.
	Key           *string `pulumi:"key"`
	LastUpdatedOn *string `pulumi:"lastUpdatedOn"`
	// Friendly SSH key name to represent an SSH key.
	Name *string `pulumi:"name"`
}

type SshKeyState struct {
	CreatedOn pulumi.StringPtrInput
	// Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
	Default pulumi.BoolPtrInput
	// SSH key auto-generated SHA-256 fingerprint.
	// * ` createdOn  `- Date and time of creation.
	// * ` lastUpdatedOn  ` - Date and time of last update.
	Fingerprint pulumi.StringPtrInput
	// SSH key actual key value.
	Key           pulumi.StringPtrInput
	LastUpdatedOn pulumi.StringPtrInput
	// Friendly SSH key name to represent an SSH key.
	Name pulumi.StringPtrInput
}

func (SshKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyState)(nil)).Elem()
}

type sshKeyArgs struct {
	// Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
	Default bool `pulumi:"default"`
	// SSH key actual key value.
	Key string `pulumi:"key"`
	// Friendly SSH key name to represent an SSH key.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a SshKey resource.
type SshKeyArgs struct {
	// Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
	Default pulumi.BoolInput
	// SSH key actual key value.
	Key pulumi.StringInput
	// Friendly SSH key name to represent an SSH key.
	Name pulumi.StringPtrInput
}

func (SshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sshKeyArgs)(nil)).Elem()
}

type SshKeyInput interface {
	pulumi.Input

	ToSshKeyOutput() SshKeyOutput
	ToSshKeyOutputWithContext(ctx context.Context) SshKeyOutput
}

func (*SshKey) ElementType() reflect.Type {
	return reflect.TypeOf((**SshKey)(nil)).Elem()
}

func (i *SshKey) ToSshKeyOutput() SshKeyOutput {
	return i.ToSshKeyOutputWithContext(context.Background())
}

func (i *SshKey) ToSshKeyOutputWithContext(ctx context.Context) SshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyOutput)
}

// SshKeyArrayInput is an input type that accepts SshKeyArray and SshKeyArrayOutput values.
// You can construct a concrete instance of `SshKeyArrayInput` via:
//
//	SshKeyArray{ SshKeyArgs{...} }
type SshKeyArrayInput interface {
	pulumi.Input

	ToSshKeyArrayOutput() SshKeyArrayOutput
	ToSshKeyArrayOutputWithContext(context.Context) SshKeyArrayOutput
}

type SshKeyArray []SshKeyInput

func (SshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshKey)(nil)).Elem()
}

func (i SshKeyArray) ToSshKeyArrayOutput() SshKeyArrayOutput {
	return i.ToSshKeyArrayOutputWithContext(context.Background())
}

func (i SshKeyArray) ToSshKeyArrayOutputWithContext(ctx context.Context) SshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyArrayOutput)
}

// SshKeyMapInput is an input type that accepts SshKeyMap and SshKeyMapOutput values.
// You can construct a concrete instance of `SshKeyMapInput` via:
//
//	SshKeyMap{ "key": SshKeyArgs{...} }
type SshKeyMapInput interface {
	pulumi.Input

	ToSshKeyMapOutput() SshKeyMapOutput
	ToSshKeyMapOutputWithContext(context.Context) SshKeyMapOutput
}

type SshKeyMap map[string]SshKeyInput

func (SshKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshKey)(nil)).Elem()
}

func (i SshKeyMap) ToSshKeyMapOutput() SshKeyMapOutput {
	return i.ToSshKeyMapOutputWithContext(context.Background())
}

func (i SshKeyMap) ToSshKeyMapOutputWithContext(ctx context.Context) SshKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SshKeyMapOutput)
}

type SshKeyOutput struct{ *pulumi.OutputState }

func (SshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SshKey)(nil)).Elem()
}

func (o SshKeyOutput) ToSshKeyOutput() SshKeyOutput {
	return o
}

func (o SshKeyOutput) ToSshKeyOutputWithContext(ctx context.Context) SshKeyOutput {
	return o
}

func (o SshKeyOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKey) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// Keys marked as default are always included on server creation and reset unless toggled off in creation/reset request.
func (o SshKeyOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v *SshKey) pulumi.BoolOutput { return v.Default }).(pulumi.BoolOutput)
}

// SSH key auto-generated SHA-256 fingerprint.
// * ` createdOn  `- Date and time of creation.
// * ` lastUpdatedOn  ` - Date and time of last update.
func (o SshKeyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKey) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// SSH key actual key value.
func (o SshKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKey) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

func (o SshKeyOutput) LastUpdatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKey) pulumi.StringOutput { return v.LastUpdatedOn }).(pulumi.StringOutput)
}

// Friendly SSH key name to represent an SSH key.
func (o SshKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SshKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type SshKeyArrayOutput struct{ *pulumi.OutputState }

func (SshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SshKey)(nil)).Elem()
}

func (o SshKeyArrayOutput) ToSshKeyArrayOutput() SshKeyArrayOutput {
	return o
}

func (o SshKeyArrayOutput) ToSshKeyArrayOutputWithContext(ctx context.Context) SshKeyArrayOutput {
	return o
}

func (o SshKeyArrayOutput) Index(i pulumi.IntInput) SshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SshKey {
		return vs[0].([]*SshKey)[vs[1].(int)]
	}).(SshKeyOutput)
}

type SshKeyMapOutput struct{ *pulumi.OutputState }

func (SshKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SshKey)(nil)).Elem()
}

func (o SshKeyMapOutput) ToSshKeyMapOutput() SshKeyMapOutput {
	return o
}

func (o SshKeyMapOutput) ToSshKeyMapOutputWithContext(ctx context.Context) SshKeyMapOutput {
	return o
}

func (o SshKeyMapOutput) MapIndex(k pulumi.StringInput) SshKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SshKey {
		return vs[0].(map[string]*SshKey)[vs[1].(string)]
	}).(SshKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyInput)(nil)).Elem(), &SshKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyArrayInput)(nil)).Elem(), SshKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SshKeyMapInput)(nil)).Elem(), SshKeyMap{})
	pulumi.RegisterOutputType(SshKeyOutput{})
	pulumi.RegisterOutputType(SshKeyArrayOutput{})
	pulumi.RegisterOutputType(SshKeyMapOutput{})
}
