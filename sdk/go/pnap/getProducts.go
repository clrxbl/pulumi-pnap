// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP products datasource. This can be used to read products.
//
// ## Example Usage
//
// Fetch products by product category and show their details.
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			query_B, err := pnap.GetProducts(ctx, &pnap.GetProductsArgs{
//				ProductCategory: pulumi.StringRef("BANDWIDTH"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("products", query_B.Products)
//			return nil
//		})
//	}
//
// ```
func GetProducts(ctx *pulumi.Context, args *GetProductsArgs, opts ...pulumi.InvokeOption) (*GetProductsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProductsResult
	err := ctx.Invoke("pnap:index/getProducts:getProducts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProducts.
type GetProductsArgs struct {
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA`, `AUS` and `GLOBAL`.
	Location *string `pulumi:"location"`
	// The product category.
	ProductCategory *string `pulumi:"productCategory"`
	// The code identifying the product. This code has significance across all locations.
	ProductCode *string `pulumi:"productCode"`
	// The SKU identifier.
	SkuCode *string `pulumi:"skuCode"`
}

// A collection of values returned by getProducts.
type GetProductsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The code identifying the location.
	Location *string `pulumi:"location"`
	// The product category.
	ProductCategory *string `pulumi:"productCategory"`
	// The code identifying the product.
	ProductCode *string `pulumi:"productCode"`
	// The list of products recorded.
	Products []GetProductsProduct `pulumi:"products"`
	SkuCode  *string              `pulumi:"skuCode"`
}

func GetProductsOutput(ctx *pulumi.Context, args GetProductsOutputArgs, opts ...pulumi.InvokeOption) GetProductsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProductsResult, error) {
			args := v.(GetProductsArgs)
			r, err := GetProducts(ctx, &args, opts...)
			var s GetProductsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetProductsResultOutput)
}

// A collection of arguments for invoking getProducts.
type GetProductsOutputArgs struct {
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA`, `AUS` and `GLOBAL`.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The product category.
	ProductCategory pulumi.StringPtrInput `pulumi:"productCategory"`
	// The code identifying the product. This code has significance across all locations.
	ProductCode pulumi.StringPtrInput `pulumi:"productCode"`
	// The SKU identifier.
	SkuCode pulumi.StringPtrInput `pulumi:"skuCode"`
}

func (GetProductsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsArgs)(nil)).Elem()
}

// A collection of values returned by getProducts.
type GetProductsResultOutput struct{ *pulumi.OutputState }

func (GetProductsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsResult)(nil)).Elem()
}

func (o GetProductsResultOutput) ToGetProductsResultOutput() GetProductsResultOutput {
	return o
}

func (o GetProductsResultOutput) ToGetProductsResultOutputWithContext(ctx context.Context) GetProductsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetProductsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The code identifying the location.
func (o GetProductsResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProductsResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The product category.
func (o GetProductsResultOutput) ProductCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProductsResult) *string { return v.ProductCategory }).(pulumi.StringPtrOutput)
}

// The code identifying the product.
func (o GetProductsResultOutput) ProductCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProductsResult) *string { return v.ProductCode }).(pulumi.StringPtrOutput)
}

// The list of products recorded.
func (o GetProductsResultOutput) Products() GetProductsProductArrayOutput {
	return o.ApplyT(func(v GetProductsResult) []GetProductsProduct { return v.Products }).(GetProductsProductArrayOutput)
}

func (o GetProductsResultOutput) SkuCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProductsResult) *string { return v.SkuCode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProductsResultOutput{})
}
