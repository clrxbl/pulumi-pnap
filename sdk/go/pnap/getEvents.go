// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP events datasource. This can be used to read event logs.
//
// ## Example Usage
//
// Fetch event logs by name and show their details.
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := pnap.GetEvents(ctx, &pnap.GetEventsArgs{
//				Events: []pnap.GetEventsEvent{
//					{
//						Name: "API.SshKeysUpdate",
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("logs", test)
//			return nil
//		})
//	}
//
// ```
func GetEvents(ctx *pulumi.Context, args *GetEventsArgs, opts ...pulumi.InvokeOption) (*GetEventsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEventsResult
	err := ctx.Invoke("pnap:index/getEvents:getEvents", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEvents.
type GetEventsArgs struct {
	// Block `events` has field `name`.
	Events []GetEventsEvent `pulumi:"events"`
}

// A collection of values returned by getEvents.
type GetEventsResult struct {
	// The list of events recorded.
	Events []GetEventsEvent `pulumi:"events"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetEventsOutput(ctx *pulumi.Context, args GetEventsOutputArgs, opts ...pulumi.InvokeOption) GetEventsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEventsResult, error) {
			args := v.(GetEventsArgs)
			r, err := GetEvents(ctx, &args, opts...)
			var s GetEventsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEventsResultOutput)
}

// A collection of arguments for invoking getEvents.
type GetEventsOutputArgs struct {
	// Block `events` has field `name`.
	Events GetEventsEventArrayInput `pulumi:"events"`
}

func (GetEventsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsArgs)(nil)).Elem()
}

// A collection of values returned by getEvents.
type GetEventsResultOutput struct{ *pulumi.OutputState }

func (GetEventsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsResult)(nil)).Elem()
}

func (o GetEventsResultOutput) ToGetEventsResultOutput() GetEventsResultOutput {
	return o
}

func (o GetEventsResultOutput) ToGetEventsResultOutputWithContext(ctx context.Context) GetEventsResultOutput {
	return o
}

// The list of events recorded.
func (o GetEventsResultOutput) Events() GetEventsEventArrayOutput {
	return o.ApplyT(func(v GetEventsResult) []GetEventsEvent { return v.Events }).(GetEventsEventArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEventsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventsResultOutput{})
}
