// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP reservation datasource. This can be used to read reservation details.
//
// ## Example Usage
//
// Fetch a reservation by ID or SKU and show it's details in alphabetical order.
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := pnap.LookupReservation(ctx, &pnap.LookupReservationArgs{
//				Id:  pulumi.StringRef("e6afba51-7de8-4080-83ab-0f915570659c"),
//				Sku: pulumi.StringRef("XXX-XXX-XXX"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("reservation", test)
//			return nil
//		})
//	}
//
// ```
func LookupReservation(ctx *pulumi.Context, args *LookupReservationArgs, opts ...pulumi.InvokeOption) (*LookupReservationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReservationResult
	err := ctx.Invoke("pnap:index/getReservation:getReservation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReservation.
type LookupReservationArgs struct {
	// The reservation identifier.
	Id *string `pulumi:"id"`
	// The SKU code of product pricing plan.
	Sku *string `pulumi:"sku"`
}

// A collection of values returned by getReservation.
type LookupReservationResult struct {
	// The resource ID currently being assigned to reservation.
	AssignedResourceId string `pulumi:"assignedResourceId"`
	// A flag indicating whether the reservation will auto-renew (default is true, it can only be modified after the creation of resource).
	AutoRenew bool `pulumi:"autoRenew"`
	// The point in time (in UTC) when the reservation ends.
	EndDateTime string `pulumi:"endDateTime"`
	// The reservation identifier.
	Id string `pulumi:"id"`
	// Reservations created with initial invoice model ON_CREATION will be invoiced on same date when reservation is created. Reservation created with CALENDAR_MONTH initial invoice model will be invoiced at the begining of next month.
	InitialInvoiceModel string `pulumi:"initialInvoiceModel"`
	// The point in time (in UTC) when the reservation was renewed last.
	LastRenewalDateTime string `pulumi:"lastRenewalDateTime"`
	// The location code.
	Location string `pulumi:"location"`
	// Next billing date for reservation.
	NextBillingDate string `pulumi:"nextBillingDate"`
	// The point in time (in UTC) when the reservation will be renewed if auto renew is set to true.
	NextRenewalDateTime string `pulumi:"nextRenewalDateTime"`
	// Reservation price.
	Price float64 `pulumi:"price"`
	// The unit to which the price applies.
	PriceUnit string `pulumi:"priceUnit"`
	// The product category.
	ProductCategory string `pulumi:"productCategory"`
	// The code identifying the product. This code has significance across all locations.
	ProductCode string `pulumi:"productCode"`
	// The reservation model.
	ReservationModel string `pulumi:"reservationModel"`
	// The SKU applied to this reservation.
	Sku string `pulumi:"sku"`
	// The point in time (in UTC) when the reservation starts.
	StartDateTime string `pulumi:"startDateTime"`
}

func LookupReservationOutput(ctx *pulumi.Context, args LookupReservationOutputArgs, opts ...pulumi.InvokeOption) LookupReservationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReservationResult, error) {
			args := v.(LookupReservationArgs)
			r, err := LookupReservation(ctx, &args, opts...)
			var s LookupReservationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReservationResultOutput)
}

// A collection of arguments for invoking getReservation.
type LookupReservationOutputArgs struct {
	// The reservation identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The SKU code of product pricing plan.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
}

func (LookupReservationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservationArgs)(nil)).Elem()
}

// A collection of values returned by getReservation.
type LookupReservationResultOutput struct{ *pulumi.OutputState }

func (LookupReservationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservationResult)(nil)).Elem()
}

func (o LookupReservationResultOutput) ToLookupReservationResultOutput() LookupReservationResultOutput {
	return o
}

func (o LookupReservationResultOutput) ToLookupReservationResultOutputWithContext(ctx context.Context) LookupReservationResultOutput {
	return o
}

// The resource ID currently being assigned to reservation.
func (o LookupReservationResultOutput) AssignedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.AssignedResourceId }).(pulumi.StringOutput)
}

// A flag indicating whether the reservation will auto-renew (default is true, it can only be modified after the creation of resource).
func (o LookupReservationResultOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReservationResult) bool { return v.AutoRenew }).(pulumi.BoolOutput)
}

// The point in time (in UTC) when the reservation ends.
func (o LookupReservationResultOutput) EndDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.EndDateTime }).(pulumi.StringOutput)
}

// The reservation identifier.
func (o LookupReservationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Reservations created with initial invoice model ON_CREATION will be invoiced on same date when reservation is created. Reservation created with CALENDAR_MONTH initial invoice model will be invoiced at the begining of next month.
func (o LookupReservationResultOutput) InitialInvoiceModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.InitialInvoiceModel }).(pulumi.StringOutput)
}

// The point in time (in UTC) when the reservation was renewed last.
func (o LookupReservationResultOutput) LastRenewalDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.LastRenewalDateTime }).(pulumi.StringOutput)
}

// The location code.
func (o LookupReservationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Location }).(pulumi.StringOutput)
}

// Next billing date for reservation.
func (o LookupReservationResultOutput) NextBillingDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.NextBillingDate }).(pulumi.StringOutput)
}

// The point in time (in UTC) when the reservation will be renewed if auto renew is set to true.
func (o LookupReservationResultOutput) NextRenewalDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.NextRenewalDateTime }).(pulumi.StringOutput)
}

// Reservation price.
func (o LookupReservationResultOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v LookupReservationResult) float64 { return v.Price }).(pulumi.Float64Output)
}

// The unit to which the price applies.
func (o LookupReservationResultOutput) PriceUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.PriceUnit }).(pulumi.StringOutput)
}

// The product category.
func (o LookupReservationResultOutput) ProductCategory() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.ProductCategory }).(pulumi.StringOutput)
}

// The code identifying the product. This code has significance across all locations.
func (o LookupReservationResultOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.ProductCode }).(pulumi.StringOutput)
}

// The reservation model.
func (o LookupReservationResultOutput) ReservationModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.ReservationModel }).(pulumi.StringOutput)
}

// The SKU applied to this reservation.
func (o LookupReservationResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.Sku }).(pulumi.StringOutput)
}

// The point in time (in UTC) when the reservation starts.
func (o LookupReservationResultOutput) StartDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservationResult) string { return v.StartDateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReservationResultOutput{})
}
