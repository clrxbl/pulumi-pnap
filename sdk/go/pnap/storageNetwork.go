// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"errors"
	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP Storage Network resource. This can be used to create, modify and delete storage networks.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pnap.NewStorageNetwork(ctx, "storage-Network-1", &pnap.StorageNetworkArgs{
//				Description: pulumi.String("First storage network."),
//				Location:    pulumi.String("PHX"),
//				Volumes: pnap.StorageNetworkVolumeArray{
//					&pnap.StorageNetworkVolumeArgs{
//						Volume: &pnap.StorageNetworkVolumeVolumeArgs{
//							CapacityInGb: pulumi.Int(1000),
//							Name:         pulumi.String("Volume-1"),
//							PathSuffix:   pulumi.String("/shared-docs"),
//							Tags: pnap.StorageNetworkVolumeVolumeTagArray{
//								&pnap.StorageNetworkVolumeVolumeTagArgs{
//									TagAssignment: &pnap.StorageNetworkVolumeVolumeTagTagAssignmentArgs{
//										Name:  pulumi.String("tag-1"),
//										Value: pulumi.String("PROD"),
//									},
//								},
//								&pnap.StorageNetworkVolumeVolumeTagArgs{
//									TagAssignment: &pnap.StorageNetworkVolumeVolumeTagTagAssignmentArgs{
//										Name: pulumi.String("tag-2"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type StorageNetwork struct {
	pulumi.CustomResourceState

	// Custom Client VLAN that the Storage Network will be set to.
	ClientVlan pulumi.IntPtrOutput `pulumi:"clientVlan"`
	// Date and time when this volume was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn pulumi.StringOutput `pulumi:"deleteRequestedOn"`
	// Volume description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// IP of the storage network
	Ips pulumi.StringArrayOutput `pulumi:"ips"`
	// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the tag.
	Name      pulumi.StringOutput `pulumi:"name"`
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Volume's status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
	Volumes StorageNetworkVolumeArrayOutput `pulumi:"volumes"`
}

// NewStorageNetwork registers a new resource with the given unique name, arguments, and options.
func NewStorageNetwork(ctx *pulumi.Context,
	name string, args *StorageNetworkArgs, opts ...pulumi.ResourceOption) (*StorageNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Volumes == nil {
		return nil, errors.New("invalid value for required argument 'Volumes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StorageNetwork
	err := ctx.RegisterResource("pnap:index/storageNetwork:StorageNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageNetwork gets an existing StorageNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageNetworkState, opts ...pulumi.ResourceOption) (*StorageNetwork, error) {
	var resource StorageNetwork
	err := ctx.ReadResource("pnap:index/storageNetwork:StorageNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageNetwork resources.
type storageNetworkState struct {
	// Custom Client VLAN that the Storage Network will be set to.
	ClientVlan *int `pulumi:"clientVlan"`
	// Date and time when this volume was created.
	CreatedOn *string `pulumi:"createdOn"`
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn *string `pulumi:"deleteRequestedOn"`
	// Volume description.
	Description *string `pulumi:"description"`
	// IP of the storage network
	Ips []string `pulumi:"ips"`
	// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
	Location *string `pulumi:"location"`
	// The name of the tag.
	Name      *string `pulumi:"name"`
	NetworkId *string `pulumi:"networkId"`
	// Volume's status.
	Status *string `pulumi:"status"`
	// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
	Volumes []StorageNetworkVolume `pulumi:"volumes"`
}

type StorageNetworkState struct {
	// Custom Client VLAN that the Storage Network will be set to.
	ClientVlan pulumi.IntPtrInput
	// Date and time when this volume was created.
	CreatedOn pulumi.StringPtrInput
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn pulumi.StringPtrInput
	// Volume description.
	Description pulumi.StringPtrInput
	// IP of the storage network
	Ips pulumi.StringArrayInput
	// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
	Location pulumi.StringPtrInput
	// The name of the tag.
	Name      pulumi.StringPtrInput
	NetworkId pulumi.StringPtrInput
	// Volume's status.
	Status pulumi.StringPtrInput
	// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
	Volumes StorageNetworkVolumeArrayInput
}

func (StorageNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageNetworkState)(nil)).Elem()
}

type storageNetworkArgs struct {
	// Custom Client VLAN that the Storage Network will be set to.
	ClientVlan *int `pulumi:"clientVlan"`
	// Volume description.
	Description *string `pulumi:"description"`
	// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
	Location string `pulumi:"location"`
	// The name of the tag.
	Name *string `pulumi:"name"`
	// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
	Volumes []StorageNetworkVolume `pulumi:"volumes"`
}

// The set of arguments for constructing a StorageNetwork resource.
type StorageNetworkArgs struct {
	// Custom Client VLAN that the Storage Network will be set to.
	ClientVlan pulumi.IntPtrInput
	// Volume description.
	Description pulumi.StringPtrInput
	// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
	Location pulumi.StringInput
	// The name of the tag.
	Name pulumi.StringPtrInput
	// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
	Volumes StorageNetworkVolumeArrayInput
}

func (StorageNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageNetworkArgs)(nil)).Elem()
}

type StorageNetworkInput interface {
	pulumi.Input

	ToStorageNetworkOutput() StorageNetworkOutput
	ToStorageNetworkOutputWithContext(ctx context.Context) StorageNetworkOutput
}

func (*StorageNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNetwork)(nil)).Elem()
}

func (i *StorageNetwork) ToStorageNetworkOutput() StorageNetworkOutput {
	return i.ToStorageNetworkOutputWithContext(context.Background())
}

func (i *StorageNetwork) ToStorageNetworkOutputWithContext(ctx context.Context) StorageNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkOutput)
}

// StorageNetworkArrayInput is an input type that accepts StorageNetworkArray and StorageNetworkArrayOutput values.
// You can construct a concrete instance of `StorageNetworkArrayInput` via:
//
//	StorageNetworkArray{ StorageNetworkArgs{...} }
type StorageNetworkArrayInput interface {
	pulumi.Input

	ToStorageNetworkArrayOutput() StorageNetworkArrayOutput
	ToStorageNetworkArrayOutputWithContext(context.Context) StorageNetworkArrayOutput
}

type StorageNetworkArray []StorageNetworkInput

func (StorageNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageNetwork)(nil)).Elem()
}

func (i StorageNetworkArray) ToStorageNetworkArrayOutput() StorageNetworkArrayOutput {
	return i.ToStorageNetworkArrayOutputWithContext(context.Background())
}

func (i StorageNetworkArray) ToStorageNetworkArrayOutputWithContext(ctx context.Context) StorageNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkArrayOutput)
}

// StorageNetworkMapInput is an input type that accepts StorageNetworkMap and StorageNetworkMapOutput values.
// You can construct a concrete instance of `StorageNetworkMapInput` via:
//
//	StorageNetworkMap{ "key": StorageNetworkArgs{...} }
type StorageNetworkMapInput interface {
	pulumi.Input

	ToStorageNetworkMapOutput() StorageNetworkMapOutput
	ToStorageNetworkMapOutputWithContext(context.Context) StorageNetworkMapOutput
}

type StorageNetworkMap map[string]StorageNetworkInput

func (StorageNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageNetwork)(nil)).Elem()
}

func (i StorageNetworkMap) ToStorageNetworkMapOutput() StorageNetworkMapOutput {
	return i.ToStorageNetworkMapOutputWithContext(context.Background())
}

func (i StorageNetworkMap) ToStorageNetworkMapOutputWithContext(ctx context.Context) StorageNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkMapOutput)
}

type StorageNetworkOutput struct{ *pulumi.OutputState }

func (StorageNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNetwork)(nil)).Elem()
}

func (o StorageNetworkOutput) ToStorageNetworkOutput() StorageNetworkOutput {
	return o
}

func (o StorageNetworkOutput) ToStorageNetworkOutputWithContext(ctx context.Context) StorageNetworkOutput {
	return o
}

// Custom Client VLAN that the Storage Network will be set to.
func (o StorageNetworkOutput) ClientVlan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.IntPtrOutput { return v.ClientVlan }).(pulumi.IntPtrOutput)
}

// Date and time when this volume was created.
func (o StorageNetworkOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// Date and time of the initial request for volume deletion.
func (o StorageNetworkOutput) DeleteRequestedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringOutput { return v.DeleteRequestedOn }).(pulumi.StringOutput)
}

// Volume description.
func (o StorageNetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// IP of the storage network
func (o StorageNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringArrayOutput { return v.Ips }).(pulumi.StringArrayOutput)
}

// The location of this storage network. Currently this field should be set to `PHX` or `ASH`.
func (o StorageNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the tag.
func (o StorageNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o StorageNetworkOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// Volume's status.
func (o StorageNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageNetwork) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Volumes to be created alongside storage. Currently only 1 volume is supported (must contain exactly one item).
func (o StorageNetworkOutput) Volumes() StorageNetworkVolumeArrayOutput {
	return o.ApplyT(func(v *StorageNetwork) StorageNetworkVolumeArrayOutput { return v.Volumes }).(StorageNetworkVolumeArrayOutput)
}

type StorageNetworkArrayOutput struct{ *pulumi.OutputState }

func (StorageNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageNetwork)(nil)).Elem()
}

func (o StorageNetworkArrayOutput) ToStorageNetworkArrayOutput() StorageNetworkArrayOutput {
	return o
}

func (o StorageNetworkArrayOutput) ToStorageNetworkArrayOutputWithContext(ctx context.Context) StorageNetworkArrayOutput {
	return o
}

func (o StorageNetworkArrayOutput) Index(i pulumi.IntInput) StorageNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StorageNetwork {
		return vs[0].([]*StorageNetwork)[vs[1].(int)]
	}).(StorageNetworkOutput)
}

type StorageNetworkMapOutput struct{ *pulumi.OutputState }

func (StorageNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageNetwork)(nil)).Elem()
}

func (o StorageNetworkMapOutput) ToStorageNetworkMapOutput() StorageNetworkMapOutput {
	return o
}

func (o StorageNetworkMapOutput) ToStorageNetworkMapOutputWithContext(ctx context.Context) StorageNetworkMapOutput {
	return o
}

func (o StorageNetworkMapOutput) MapIndex(k pulumi.StringInput) StorageNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StorageNetwork {
		return vs[0].(map[string]*StorageNetwork)[vs[1].(string)]
	}).(StorageNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkInput)(nil)).Elem(), &StorageNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkArrayInput)(nil)).Elem(), StorageNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkMapInput)(nil)).Elem(), StorageNetworkMap{})
	pulumi.RegisterOutputType(StorageNetworkOutput{})
	pulumi.RegisterOutputType(StorageNetworkArrayOutput{})
	pulumi.RegisterOutputType(StorageNetworkMapOutput{})
}
