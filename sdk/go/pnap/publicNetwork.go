// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"errors"
	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP Public Network resource. This can be used to create,
// modify, and delete public networks.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pnap.NewPublicNetwork(ctx, "public-Network-1", &pnap.PublicNetworkArgs{
//				Description: pulumi.String("First public network."),
//				IpBlocks: pnap.PublicNetworkIpBlockArray{
//					&pnap.PublicNetworkIpBlockArgs{
//						PublicNetworkIpBlock: &pnap.PublicNetworkIpBlockPublicNetworkIpBlockArgs{
//							Id: pulumi.String("60473a6115e34466c9f8f083"),
//						},
//					},
//					&pnap.PublicNetworkIpBlockArgs{
//						PublicNetworkIpBlock: &pnap.PublicNetworkIpBlockPublicNetworkIpBlockArgs{
//							Id: pulumi.String("616e6ec6d66b406a45ab8797"),
//						},
//					},
//				},
//				Location: pulumi.String("PHX"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PublicNetwork struct {
	pulumi.CustomResourceState

	// Date and time when this public network was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// The description of this public network.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of IP Blocks that will be associated with this public network (10 items at most).
	IpBlocks PublicNetworkIpBlockArrayOutput `pulumi:"ipBlocks"`
	// The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	Location pulumi.StringOutput `pulumi:"location"`
	// A list of resources that are members of this public network.
	Memberships PublicNetworkMembershipArrayOutput `pulumi:"memberships"`
	// The friendly name of this public network. This name should be unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the public network.
	Status pulumi.StringOutput `pulumi:"status"`
	VlanId pulumi.IntOutput    `pulumi:"vlanId"`
}

// NewPublicNetwork registers a new resource with the given unique name, arguments, and options.
func NewPublicNetwork(ctx *pulumi.Context,
	name string, args *PublicNetworkArgs, opts ...pulumi.ResourceOption) (*PublicNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PublicNetwork
	err := ctx.RegisterResource("pnap:index/publicNetwork:PublicNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPublicNetwork gets an existing PublicNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPublicNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PublicNetworkState, opts ...pulumi.ResourceOption) (*PublicNetwork, error) {
	var resource PublicNetwork
	err := ctx.ReadResource("pnap:index/publicNetwork:PublicNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PublicNetwork resources.
type publicNetworkState struct {
	// Date and time when this public network was created.
	CreatedOn *string `pulumi:"createdOn"`
	// The description of this public network.
	Description *string `pulumi:"description"`
	// A list of IP Blocks that will be associated with this public network (10 items at most).
	IpBlocks []PublicNetworkIpBlock `pulumi:"ipBlocks"`
	// The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	Location *string `pulumi:"location"`
	// A list of resources that are members of this public network.
	Memberships []PublicNetworkMembership `pulumi:"memberships"`
	// The friendly name of this public network. This name should be unique.
	Name *string `pulumi:"name"`
	// The status of the public network.
	Status *string `pulumi:"status"`
	VlanId *int    `pulumi:"vlanId"`
}

type PublicNetworkState struct {
	// Date and time when this public network was created.
	CreatedOn pulumi.StringPtrInput
	// The description of this public network.
	Description pulumi.StringPtrInput
	// A list of IP Blocks that will be associated with this public network (10 items at most).
	IpBlocks PublicNetworkIpBlockArrayInput
	// The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	Location pulumi.StringPtrInput
	// A list of resources that are members of this public network.
	Memberships PublicNetworkMembershipArrayInput
	// The friendly name of this public network. This name should be unique.
	Name pulumi.StringPtrInput
	// The status of the public network.
	Status pulumi.StringPtrInput
	VlanId pulumi.IntPtrInput
}

func (PublicNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*publicNetworkState)(nil)).Elem()
}

type publicNetworkArgs struct {
	// The description of this public network.
	Description *string `pulumi:"description"`
	// A list of IP Blocks that will be associated with this public network (10 items at most).
	IpBlocks []PublicNetworkIpBlock `pulumi:"ipBlocks"`
	// The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	Location string `pulumi:"location"`
	// The friendly name of this public network. This name should be unique.
	Name   *string `pulumi:"name"`
	VlanId *int    `pulumi:"vlanId"`
}

// The set of arguments for constructing a PublicNetwork resource.
type PublicNetworkArgs struct {
	// The description of this public network.
	Description pulumi.StringPtrInput
	// A list of IP Blocks that will be associated with this public network (10 items at most).
	IpBlocks PublicNetworkIpBlockArrayInput
	// The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
	// * ` vlanId  `- The VLAN that will be assigned to this network.
	Location pulumi.StringInput
	// The friendly name of this public network. This name should be unique.
	Name   pulumi.StringPtrInput
	VlanId pulumi.IntPtrInput
}

func (PublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*publicNetworkArgs)(nil)).Elem()
}

type PublicNetworkInput interface {
	pulumi.Input

	ToPublicNetworkOutput() PublicNetworkOutput
	ToPublicNetworkOutputWithContext(ctx context.Context) PublicNetworkOutput
}

func (*PublicNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetwork)(nil)).Elem()
}

func (i *PublicNetwork) ToPublicNetworkOutput() PublicNetworkOutput {
	return i.ToPublicNetworkOutputWithContext(context.Background())
}

func (i *PublicNetwork) ToPublicNetworkOutputWithContext(ctx context.Context) PublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkOutput)
}

// PublicNetworkArrayInput is an input type that accepts PublicNetworkArray and PublicNetworkArrayOutput values.
// You can construct a concrete instance of `PublicNetworkArrayInput` via:
//
//	PublicNetworkArray{ PublicNetworkArgs{...} }
type PublicNetworkArrayInput interface {
	pulumi.Input

	ToPublicNetworkArrayOutput() PublicNetworkArrayOutput
	ToPublicNetworkArrayOutputWithContext(context.Context) PublicNetworkArrayOutput
}

type PublicNetworkArray []PublicNetworkInput

func (PublicNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicNetwork)(nil)).Elem()
}

func (i PublicNetworkArray) ToPublicNetworkArrayOutput() PublicNetworkArrayOutput {
	return i.ToPublicNetworkArrayOutputWithContext(context.Background())
}

func (i PublicNetworkArray) ToPublicNetworkArrayOutputWithContext(ctx context.Context) PublicNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkArrayOutput)
}

// PublicNetworkMapInput is an input type that accepts PublicNetworkMap and PublicNetworkMapOutput values.
// You can construct a concrete instance of `PublicNetworkMapInput` via:
//
//	PublicNetworkMap{ "key": PublicNetworkArgs{...} }
type PublicNetworkMapInput interface {
	pulumi.Input

	ToPublicNetworkMapOutput() PublicNetworkMapOutput
	ToPublicNetworkMapOutputWithContext(context.Context) PublicNetworkMapOutput
}

type PublicNetworkMap map[string]PublicNetworkInput

func (PublicNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicNetwork)(nil)).Elem()
}

func (i PublicNetworkMap) ToPublicNetworkMapOutput() PublicNetworkMapOutput {
	return i.ToPublicNetworkMapOutputWithContext(context.Background())
}

func (i PublicNetworkMap) ToPublicNetworkMapOutputWithContext(ctx context.Context) PublicNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkMapOutput)
}

type PublicNetworkOutput struct{ *pulumi.OutputState }

func (PublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetwork)(nil)).Elem()
}

func (o PublicNetworkOutput) ToPublicNetworkOutput() PublicNetworkOutput {
	return o
}

func (o PublicNetworkOutput) ToPublicNetworkOutputWithContext(ctx context.Context) PublicNetworkOutput {
	return o
}

// Date and time when this public network was created.
func (o PublicNetworkOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// The description of this public network.
func (o PublicNetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of IP Blocks that will be associated with this public network (10 items at most).
func (o PublicNetworkOutput) IpBlocks() PublicNetworkIpBlockArrayOutput {
	return o.ApplyT(func(v *PublicNetwork) PublicNetworkIpBlockArrayOutput { return v.IpBlocks }).(PublicNetworkIpBlockArrayOutput)
}

// The location of this public network. Supported values are `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` and `AUS`.
// * ` vlanId  `- The VLAN that will be assigned to this network.
func (o PublicNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A list of resources that are members of this public network.
func (o PublicNetworkOutput) Memberships() PublicNetworkMembershipArrayOutput {
	return o.ApplyT(func(v *PublicNetwork) PublicNetworkMembershipArrayOutput { return v.Memberships }).(PublicNetworkMembershipArrayOutput)
}

// The friendly name of this public network. This name should be unique.
func (o PublicNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the public network.
func (o PublicNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o PublicNetworkOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v *PublicNetwork) pulumi.IntOutput { return v.VlanId }).(pulumi.IntOutput)
}

type PublicNetworkArrayOutput struct{ *pulumi.OutputState }

func (PublicNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PublicNetwork)(nil)).Elem()
}

func (o PublicNetworkArrayOutput) ToPublicNetworkArrayOutput() PublicNetworkArrayOutput {
	return o
}

func (o PublicNetworkArrayOutput) ToPublicNetworkArrayOutputWithContext(ctx context.Context) PublicNetworkArrayOutput {
	return o
}

func (o PublicNetworkArrayOutput) Index(i pulumi.IntInput) PublicNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PublicNetwork {
		return vs[0].([]*PublicNetwork)[vs[1].(int)]
	}).(PublicNetworkOutput)
}

type PublicNetworkMapOutput struct{ *pulumi.OutputState }

func (PublicNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PublicNetwork)(nil)).Elem()
}

func (o PublicNetworkMapOutput) ToPublicNetworkMapOutput() PublicNetworkMapOutput {
	return o
}

func (o PublicNetworkMapOutput) ToPublicNetworkMapOutputWithContext(ctx context.Context) PublicNetworkMapOutput {
	return o
}

func (o PublicNetworkMapOutput) MapIndex(k pulumi.StringInput) PublicNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PublicNetwork {
		return vs[0].(map[string]*PublicNetwork)[vs[1].(string)]
	}).(PublicNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkInput)(nil)).Elem(), &PublicNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkArrayInput)(nil)).Elem(), PublicNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkMapInput)(nil)).Elem(), PublicNetworkMap{})
	pulumi.RegisterOutputType(PublicNetworkOutput{})
	pulumi.RegisterOutputType(PublicNetworkArrayOutput{})
	pulumi.RegisterOutputType(PublicNetworkMapOutput{})
}
