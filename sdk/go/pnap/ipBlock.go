// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"errors"
	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a phoenixNAP IP Block resource. This can be used to create, modify and delete IP Blocks.
//
// ## Example Usage
//
// # Create an IP Block
//
// ```go
// package main
//
// import (
//
//	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pnap.NewIpBlock(ctx, "ip-block-1", &pnap.IpBlockArgs{
//				CidrBlockSize: pulumi.String("/28"),
//				Description:   pulumi.String("IP Block #1 used for publicly accessing server #1."),
//				Location:      pulumi.String("PHX"),
//				Tags: pnap.IpBlockTagArray{
//					&pnap.IpBlockTagArgs{
//						TagAssignment: &pnap.IpBlockTagTagAssignmentArgs{
//							Name:  pulumi.String("tag-1"),
//							Value: pulumi.String("PROD"),
//						},
//					},
//					&pnap.IpBlockTagArgs{
//						TagAssignment: &pnap.IpBlockTagTagAssignmentArgs{
//							Name: pulumi.String("tag-2"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type IpBlock struct {
	pulumi.CustomResourceState

	// ID of the resource assigned to the IP Block.
	// * ` assignedResourceType  `- Type of the resource assigned to the IP Block.
	AssignedResourceId   pulumi.StringOutput `pulumi:"assignedResourceId"`
	AssignedResourceType pulumi.StringOutput `pulumi:"assignedResourceType"`
	// The IP Block in CIDR notation.
	Cidr pulumi.StringOutput `pulumi:"cidr"`
	// CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
	CidrBlockSize pulumi.StringOutput `pulumi:"cidrBlockSize"`
	// Date and time when the IP Block was created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// Description of the IP Block.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// True if the IP Block is a "bring your own" block.
	IsBringYourOwn pulumi.BoolOutput `pulumi:"isBringYourOwn"`
	// IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
	Location pulumi.StringOutput `pulumi:"location"`
	// The status of the IP Block.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tags to set to IP Block, if any.
	Tags IpBlockTagArrayOutput `pulumi:"tags"`
}

// NewIpBlock registers a new resource with the given unique name, arguments, and options.
func NewIpBlock(ctx *pulumi.Context,
	name string, args *IpBlockArgs, opts ...pulumi.ResourceOption) (*IpBlock, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CidrBlockSize == nil {
		return nil, errors.New("invalid value for required argument 'CidrBlockSize'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpBlock
	err := ctx.RegisterResource("pnap:index/ipBlock:IpBlock", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpBlock gets an existing IpBlock resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpBlock(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpBlockState, opts ...pulumi.ResourceOption) (*IpBlock, error) {
	var resource IpBlock
	err := ctx.ReadResource("pnap:index/ipBlock:IpBlock", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpBlock resources.
type ipBlockState struct {
	// ID of the resource assigned to the IP Block.
	// * ` assignedResourceType  `- Type of the resource assigned to the IP Block.
	AssignedResourceId   *string `pulumi:"assignedResourceId"`
	AssignedResourceType *string `pulumi:"assignedResourceType"`
	// The IP Block in CIDR notation.
	Cidr *string `pulumi:"cidr"`
	// CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
	CidrBlockSize *string `pulumi:"cidrBlockSize"`
	// Date and time when the IP Block was created.
	CreatedOn *string `pulumi:"createdOn"`
	// Description of the IP Block.
	Description *string `pulumi:"description"`
	// True if the IP Block is a "bring your own" block.
	IsBringYourOwn *bool `pulumi:"isBringYourOwn"`
	// IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
	Location *string `pulumi:"location"`
	// The status of the IP Block.
	Status *string `pulumi:"status"`
	// Tags to set to IP Block, if any.
	Tags []IpBlockTag `pulumi:"tags"`
}

type IpBlockState struct {
	// ID of the resource assigned to the IP Block.
	// * ` assignedResourceType  `- Type of the resource assigned to the IP Block.
	AssignedResourceId   pulumi.StringPtrInput
	AssignedResourceType pulumi.StringPtrInput
	// The IP Block in CIDR notation.
	Cidr pulumi.StringPtrInput
	// CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
	CidrBlockSize pulumi.StringPtrInput
	// Date and time when the IP Block was created.
	CreatedOn pulumi.StringPtrInput
	// Description of the IP Block.
	Description pulumi.StringPtrInput
	// True if the IP Block is a "bring your own" block.
	IsBringYourOwn pulumi.BoolPtrInput
	// IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
	Location pulumi.StringPtrInput
	// The status of the IP Block.
	Status pulumi.StringPtrInput
	// Tags to set to IP Block, if any.
	Tags IpBlockTagArrayInput
}

func (IpBlockState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipBlockState)(nil)).Elem()
}

type ipBlockArgs struct {
	// CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
	CidrBlockSize string `pulumi:"cidrBlockSize"`
	// Description of the IP Block.
	Description *string `pulumi:"description"`
	// IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
	Location string `pulumi:"location"`
	// Tags to set to IP Block, if any.
	Tags []IpBlockTag `pulumi:"tags"`
}

// The set of arguments for constructing a IpBlock resource.
type IpBlockArgs struct {
	// CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
	CidrBlockSize pulumi.StringInput
	// Description of the IP Block.
	Description pulumi.StringPtrInput
	// IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
	Location pulumi.StringInput
	// Tags to set to IP Block, if any.
	Tags IpBlockTagArrayInput
}

func (IpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipBlockArgs)(nil)).Elem()
}

type IpBlockInput interface {
	pulumi.Input

	ToIpBlockOutput() IpBlockOutput
	ToIpBlockOutputWithContext(ctx context.Context) IpBlockOutput
}

func (*IpBlock) ElementType() reflect.Type {
	return reflect.TypeOf((**IpBlock)(nil)).Elem()
}

func (i *IpBlock) ToIpBlockOutput() IpBlockOutput {
	return i.ToIpBlockOutputWithContext(context.Background())
}

func (i *IpBlock) ToIpBlockOutputWithContext(ctx context.Context) IpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockOutput)
}

// IpBlockArrayInput is an input type that accepts IpBlockArray and IpBlockArrayOutput values.
// You can construct a concrete instance of `IpBlockArrayInput` via:
//
//	IpBlockArray{ IpBlockArgs{...} }
type IpBlockArrayInput interface {
	pulumi.Input

	ToIpBlockArrayOutput() IpBlockArrayOutput
	ToIpBlockArrayOutputWithContext(context.Context) IpBlockArrayOutput
}

type IpBlockArray []IpBlockInput

func (IpBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpBlock)(nil)).Elem()
}

func (i IpBlockArray) ToIpBlockArrayOutput() IpBlockArrayOutput {
	return i.ToIpBlockArrayOutputWithContext(context.Background())
}

func (i IpBlockArray) ToIpBlockArrayOutputWithContext(ctx context.Context) IpBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockArrayOutput)
}

// IpBlockMapInput is an input type that accepts IpBlockMap and IpBlockMapOutput values.
// You can construct a concrete instance of `IpBlockMapInput` via:
//
//	IpBlockMap{ "key": IpBlockArgs{...} }
type IpBlockMapInput interface {
	pulumi.Input

	ToIpBlockMapOutput() IpBlockMapOutput
	ToIpBlockMapOutputWithContext(context.Context) IpBlockMapOutput
}

type IpBlockMap map[string]IpBlockInput

func (IpBlockMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpBlock)(nil)).Elem()
}

func (i IpBlockMap) ToIpBlockMapOutput() IpBlockMapOutput {
	return i.ToIpBlockMapOutputWithContext(context.Background())
}

func (i IpBlockMap) ToIpBlockMapOutputWithContext(ctx context.Context) IpBlockMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockMapOutput)
}

type IpBlockOutput struct{ *pulumi.OutputState }

func (IpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpBlock)(nil)).Elem()
}

func (o IpBlockOutput) ToIpBlockOutput() IpBlockOutput {
	return o
}

func (o IpBlockOutput) ToIpBlockOutputWithContext(ctx context.Context) IpBlockOutput {
	return o
}

// ID of the resource assigned to the IP Block.
// * ` assignedResourceType  `- Type of the resource assigned to the IP Block.
func (o IpBlockOutput) AssignedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringOutput { return v.AssignedResourceId }).(pulumi.StringOutput)
}

func (o IpBlockOutput) AssignedResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringOutput { return v.AssignedResourceType }).(pulumi.StringOutput)
}

// The IP Block in CIDR notation.
func (o IpBlockOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

// CIDR IP Block Size. Currently this field should be set to either `/31`, `/30`, `/29` or `/28`. For a larger Block Size contact support.
func (o IpBlockOutput) CidrBlockSize() pulumi.StringOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringOutput { return v.CidrBlockSize }).(pulumi.StringOutput)
}

// Date and time when the IP Block was created.
func (o IpBlockOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// Description of the IP Block.
func (o IpBlockOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// True if the IP Block is a "bring your own" block.
func (o IpBlockOutput) IsBringYourOwn() pulumi.BoolOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.BoolOutput { return v.IsBringYourOwn }).(pulumi.BoolOutput)
}

// IP Block location ID. Currently this field should be set to `PHX`, `ASH`, `SGP`, `NLD`, `CHI`, `SEA` or `AUS`.
func (o IpBlockOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The status of the IP Block.
func (o IpBlockOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *IpBlock) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tags to set to IP Block, if any.
func (o IpBlockOutput) Tags() IpBlockTagArrayOutput {
	return o.ApplyT(func(v *IpBlock) IpBlockTagArrayOutput { return v.Tags }).(IpBlockTagArrayOutput)
}

type IpBlockArrayOutput struct{ *pulumi.OutputState }

func (IpBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpBlock)(nil)).Elem()
}

func (o IpBlockArrayOutput) ToIpBlockArrayOutput() IpBlockArrayOutput {
	return o
}

func (o IpBlockArrayOutput) ToIpBlockArrayOutputWithContext(ctx context.Context) IpBlockArrayOutput {
	return o
}

func (o IpBlockArrayOutput) Index(i pulumi.IntInput) IpBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpBlock {
		return vs[0].([]*IpBlock)[vs[1].(int)]
	}).(IpBlockOutput)
}

type IpBlockMapOutput struct{ *pulumi.OutputState }

func (IpBlockMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpBlock)(nil)).Elem()
}

func (o IpBlockMapOutput) ToIpBlockMapOutput() IpBlockMapOutput {
	return o
}

func (o IpBlockMapOutput) ToIpBlockMapOutputWithContext(ctx context.Context) IpBlockMapOutput {
	return o
}

func (o IpBlockMapOutput) MapIndex(k pulumi.StringInput) IpBlockOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpBlock {
		return vs[0].(map[string]*IpBlock)[vs[1].(string)]
	}).(IpBlockOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpBlockInput)(nil)).Elem(), &IpBlock{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpBlockArrayInput)(nil)).Elem(), IpBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpBlockMapInput)(nil)).Elem(), IpBlockMap{})
	pulumi.RegisterOutputType(IpBlockOutput{})
	pulumi.RegisterOutputType(IpBlockArrayOutput{})
	pulumi.RegisterOutputType(IpBlockMapOutput{})
}
