// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pnap

import (
	"context"
	"reflect"

	"github.com/phoenixnap/pulumi-pnap/sdk/go/pnap/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IpBlockTag struct {
	// Tag request to assign to the IP Block.
	TagAssignment *IpBlockTagTagAssignment `pulumi:"tagAssignment"`
}

// IpBlockTagInput is an input type that accepts IpBlockTagArgs and IpBlockTagOutput values.
// You can construct a concrete instance of `IpBlockTagInput` via:
//
//	IpBlockTagArgs{...}
type IpBlockTagInput interface {
	pulumi.Input

	ToIpBlockTagOutput() IpBlockTagOutput
	ToIpBlockTagOutputWithContext(context.Context) IpBlockTagOutput
}

type IpBlockTagArgs struct {
	// Tag request to assign to the IP Block.
	TagAssignment IpBlockTagTagAssignmentPtrInput `pulumi:"tagAssignment"`
}

func (IpBlockTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpBlockTag)(nil)).Elem()
}

func (i IpBlockTagArgs) ToIpBlockTagOutput() IpBlockTagOutput {
	return i.ToIpBlockTagOutputWithContext(context.Background())
}

func (i IpBlockTagArgs) ToIpBlockTagOutputWithContext(ctx context.Context) IpBlockTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockTagOutput)
}

// IpBlockTagArrayInput is an input type that accepts IpBlockTagArray and IpBlockTagArrayOutput values.
// You can construct a concrete instance of `IpBlockTagArrayInput` via:
//
//	IpBlockTagArray{ IpBlockTagArgs{...} }
type IpBlockTagArrayInput interface {
	pulumi.Input

	ToIpBlockTagArrayOutput() IpBlockTagArrayOutput
	ToIpBlockTagArrayOutputWithContext(context.Context) IpBlockTagArrayOutput
}

type IpBlockTagArray []IpBlockTagInput

func (IpBlockTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpBlockTag)(nil)).Elem()
}

func (i IpBlockTagArray) ToIpBlockTagArrayOutput() IpBlockTagArrayOutput {
	return i.ToIpBlockTagArrayOutputWithContext(context.Background())
}

func (i IpBlockTagArray) ToIpBlockTagArrayOutputWithContext(ctx context.Context) IpBlockTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockTagArrayOutput)
}

type IpBlockTagOutput struct{ *pulumi.OutputState }

func (IpBlockTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpBlockTag)(nil)).Elem()
}

func (o IpBlockTagOutput) ToIpBlockTagOutput() IpBlockTagOutput {
	return o
}

func (o IpBlockTagOutput) ToIpBlockTagOutputWithContext(ctx context.Context) IpBlockTagOutput {
	return o
}

// Tag request to assign to the IP Block.
func (o IpBlockTagOutput) TagAssignment() IpBlockTagTagAssignmentPtrOutput {
	return o.ApplyT(func(v IpBlockTag) *IpBlockTagTagAssignment { return v.TagAssignment }).(IpBlockTagTagAssignmentPtrOutput)
}

type IpBlockTagArrayOutput struct{ *pulumi.OutputState }

func (IpBlockTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpBlockTag)(nil)).Elem()
}

func (o IpBlockTagArrayOutput) ToIpBlockTagArrayOutput() IpBlockTagArrayOutput {
	return o
}

func (o IpBlockTagArrayOutput) ToIpBlockTagArrayOutputWithContext(ctx context.Context) IpBlockTagArrayOutput {
	return o
}

func (o IpBlockTagArrayOutput) Index(i pulumi.IntInput) IpBlockTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpBlockTag {
		return vs[0].([]IpBlockTag)[vs[1].(int)]
	}).(IpBlockTagOutput)
}

type IpBlockTagTagAssignment struct {
	// Who the tag was created by.
	CreatedBy *string `pulumi:"createdBy"`
	// The unique id of the tag.
	Id *string `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag *bool `pulumi:"isBillingTag"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// The value of the tag assigned to the IP Block.
	Value *string `pulumi:"value"`
}

// IpBlockTagTagAssignmentInput is an input type that accepts IpBlockTagTagAssignmentArgs and IpBlockTagTagAssignmentOutput values.
// You can construct a concrete instance of `IpBlockTagTagAssignmentInput` via:
//
//	IpBlockTagTagAssignmentArgs{...}
type IpBlockTagTagAssignmentInput interface {
	pulumi.Input

	ToIpBlockTagTagAssignmentOutput() IpBlockTagTagAssignmentOutput
	ToIpBlockTagTagAssignmentOutputWithContext(context.Context) IpBlockTagTagAssignmentOutput
}

type IpBlockTagTagAssignmentArgs struct {
	// Who the tag was created by.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The unique id of the tag.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag pulumi.BoolPtrInput `pulumi:"isBillingTag"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the tag assigned to the IP Block.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IpBlockTagTagAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpBlockTagTagAssignment)(nil)).Elem()
}

func (i IpBlockTagTagAssignmentArgs) ToIpBlockTagTagAssignmentOutput() IpBlockTagTagAssignmentOutput {
	return i.ToIpBlockTagTagAssignmentOutputWithContext(context.Background())
}

func (i IpBlockTagTagAssignmentArgs) ToIpBlockTagTagAssignmentOutputWithContext(ctx context.Context) IpBlockTagTagAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockTagTagAssignmentOutput)
}

func (i IpBlockTagTagAssignmentArgs) ToIpBlockTagTagAssignmentPtrOutput() IpBlockTagTagAssignmentPtrOutput {
	return i.ToIpBlockTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (i IpBlockTagTagAssignmentArgs) ToIpBlockTagTagAssignmentPtrOutputWithContext(ctx context.Context) IpBlockTagTagAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockTagTagAssignmentOutput).ToIpBlockTagTagAssignmentPtrOutputWithContext(ctx)
}

// IpBlockTagTagAssignmentPtrInput is an input type that accepts IpBlockTagTagAssignmentArgs, IpBlockTagTagAssignmentPtr and IpBlockTagTagAssignmentPtrOutput values.
// You can construct a concrete instance of `IpBlockTagTagAssignmentPtrInput` via:
//
//	        IpBlockTagTagAssignmentArgs{...}
//
//	or:
//
//	        nil
type IpBlockTagTagAssignmentPtrInput interface {
	pulumi.Input

	ToIpBlockTagTagAssignmentPtrOutput() IpBlockTagTagAssignmentPtrOutput
	ToIpBlockTagTagAssignmentPtrOutputWithContext(context.Context) IpBlockTagTagAssignmentPtrOutput
}

type ipBlockTagTagAssignmentPtrType IpBlockTagTagAssignmentArgs

func IpBlockTagTagAssignmentPtr(v *IpBlockTagTagAssignmentArgs) IpBlockTagTagAssignmentPtrInput {
	return (*ipBlockTagTagAssignmentPtrType)(v)
}

func (*ipBlockTagTagAssignmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IpBlockTagTagAssignment)(nil)).Elem()
}

func (i *ipBlockTagTagAssignmentPtrType) ToIpBlockTagTagAssignmentPtrOutput() IpBlockTagTagAssignmentPtrOutput {
	return i.ToIpBlockTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (i *ipBlockTagTagAssignmentPtrType) ToIpBlockTagTagAssignmentPtrOutputWithContext(ctx context.Context) IpBlockTagTagAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpBlockTagTagAssignmentPtrOutput)
}

type IpBlockTagTagAssignmentOutput struct{ *pulumi.OutputState }

func (IpBlockTagTagAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpBlockTagTagAssignment)(nil)).Elem()
}

func (o IpBlockTagTagAssignmentOutput) ToIpBlockTagTagAssignmentOutput() IpBlockTagTagAssignmentOutput {
	return o
}

func (o IpBlockTagTagAssignmentOutput) ToIpBlockTagTagAssignmentOutputWithContext(ctx context.Context) IpBlockTagTagAssignmentOutput {
	return o
}

func (o IpBlockTagTagAssignmentOutput) ToIpBlockTagTagAssignmentPtrOutput() IpBlockTagTagAssignmentPtrOutput {
	return o.ToIpBlockTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (o IpBlockTagTagAssignmentOutput) ToIpBlockTagTagAssignmentPtrOutputWithContext(ctx context.Context) IpBlockTagTagAssignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpBlockTagTagAssignment) *IpBlockTagTagAssignment {
		return &v
	}).(IpBlockTagTagAssignmentPtrOutput)
}

// Who the tag was created by.
func (o IpBlockTagTagAssignmentOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpBlockTagTagAssignment) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The unique id of the tag.
func (o IpBlockTagTagAssignmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpBlockTagTagAssignment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o IpBlockTagTagAssignmentOutput) IsBillingTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IpBlockTagTagAssignment) *bool { return v.IsBillingTag }).(pulumi.BoolPtrOutput)
}

// The name of the tag.
func (o IpBlockTagTagAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IpBlockTagTagAssignment) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the tag assigned to the IP Block.
func (o IpBlockTagTagAssignmentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpBlockTagTagAssignment) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IpBlockTagTagAssignmentPtrOutput struct{ *pulumi.OutputState }

func (IpBlockTagTagAssignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpBlockTagTagAssignment)(nil)).Elem()
}

func (o IpBlockTagTagAssignmentPtrOutput) ToIpBlockTagTagAssignmentPtrOutput() IpBlockTagTagAssignmentPtrOutput {
	return o
}

func (o IpBlockTagTagAssignmentPtrOutput) ToIpBlockTagTagAssignmentPtrOutputWithContext(ctx context.Context) IpBlockTagTagAssignmentPtrOutput {
	return o
}

func (o IpBlockTagTagAssignmentPtrOutput) Elem() IpBlockTagTagAssignmentOutput {
	return o.ApplyT(func(v *IpBlockTagTagAssignment) IpBlockTagTagAssignment {
		if v != nil {
			return *v
		}
		var ret IpBlockTagTagAssignment
		return ret
	}).(IpBlockTagTagAssignmentOutput)
}

// Who the tag was created by.
func (o IpBlockTagTagAssignmentPtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpBlockTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The unique id of the tag.
func (o IpBlockTagTagAssignmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpBlockTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o IpBlockTagTagAssignmentPtrOutput) IsBillingTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IpBlockTagTagAssignment) *bool {
		if v == nil {
			return nil
		}
		return v.IsBillingTag
	}).(pulumi.BoolPtrOutput)
}

// The name of the tag.
func (o IpBlockTagTagAssignmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpBlockTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The value of the tag assigned to the IP Block.
func (o IpBlockTagTagAssignmentPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpBlockTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type PrivateNetworkMembership struct {
	// List of public IPs associated to the resource.
	Ips []string `pulumi:"ips"`
	// The resource identifier.
	ResourceId *string `pulumi:"resourceId"`
	// The resource's type.
	ResourceType *string `pulumi:"resourceType"`
}

// PrivateNetworkMembershipInput is an input type that accepts PrivateNetworkMembershipArgs and PrivateNetworkMembershipOutput values.
// You can construct a concrete instance of `PrivateNetworkMembershipInput` via:
//
//	PrivateNetworkMembershipArgs{...}
type PrivateNetworkMembershipInput interface {
	pulumi.Input

	ToPrivateNetworkMembershipOutput() PrivateNetworkMembershipOutput
	ToPrivateNetworkMembershipOutputWithContext(context.Context) PrivateNetworkMembershipOutput
}

type PrivateNetworkMembershipArgs struct {
	// List of public IPs associated to the resource.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The resource identifier.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The resource's type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (PrivateNetworkMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkMembership)(nil)).Elem()
}

func (i PrivateNetworkMembershipArgs) ToPrivateNetworkMembershipOutput() PrivateNetworkMembershipOutput {
	return i.ToPrivateNetworkMembershipOutputWithContext(context.Background())
}

func (i PrivateNetworkMembershipArgs) ToPrivateNetworkMembershipOutputWithContext(ctx context.Context) PrivateNetworkMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkMembershipOutput)
}

// PrivateNetworkMembershipArrayInput is an input type that accepts PrivateNetworkMembershipArray and PrivateNetworkMembershipArrayOutput values.
// You can construct a concrete instance of `PrivateNetworkMembershipArrayInput` via:
//
//	PrivateNetworkMembershipArray{ PrivateNetworkMembershipArgs{...} }
type PrivateNetworkMembershipArrayInput interface {
	pulumi.Input

	ToPrivateNetworkMembershipArrayOutput() PrivateNetworkMembershipArrayOutput
	ToPrivateNetworkMembershipArrayOutputWithContext(context.Context) PrivateNetworkMembershipArrayOutput
}

type PrivateNetworkMembershipArray []PrivateNetworkMembershipInput

func (PrivateNetworkMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateNetworkMembership)(nil)).Elem()
}

func (i PrivateNetworkMembershipArray) ToPrivateNetworkMembershipArrayOutput() PrivateNetworkMembershipArrayOutput {
	return i.ToPrivateNetworkMembershipArrayOutputWithContext(context.Background())
}

func (i PrivateNetworkMembershipArray) ToPrivateNetworkMembershipArrayOutputWithContext(ctx context.Context) PrivateNetworkMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkMembershipArrayOutput)
}

type PrivateNetworkMembershipOutput struct{ *pulumi.OutputState }

func (PrivateNetworkMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkMembership)(nil)).Elem()
}

func (o PrivateNetworkMembershipOutput) ToPrivateNetworkMembershipOutput() PrivateNetworkMembershipOutput {
	return o
}

func (o PrivateNetworkMembershipOutput) ToPrivateNetworkMembershipOutputWithContext(ctx context.Context) PrivateNetworkMembershipOutput {
	return o
}

// List of public IPs associated to the resource.
func (o PrivateNetworkMembershipOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateNetworkMembership) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The resource identifier.
func (o PrivateNetworkMembershipOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkMembership) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The resource's type.
func (o PrivateNetworkMembershipOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkMembership) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type PrivateNetworkMembershipArrayOutput struct{ *pulumi.OutputState }

func (PrivateNetworkMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateNetworkMembership)(nil)).Elem()
}

func (o PrivateNetworkMembershipArrayOutput) ToPrivateNetworkMembershipArrayOutput() PrivateNetworkMembershipArrayOutput {
	return o
}

func (o PrivateNetworkMembershipArrayOutput) ToPrivateNetworkMembershipArrayOutputWithContext(ctx context.Context) PrivateNetworkMembershipArrayOutput {
	return o
}

func (o PrivateNetworkMembershipArrayOutput) Index(i pulumi.IntInput) PrivateNetworkMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateNetworkMembership {
		return vs[0].([]PrivateNetworkMembership)[vs[1].(int)]
	}).(PrivateNetworkMembershipOutput)
}

type PrivateNetworkServer struct {
	// The server identifier.
	Id *string `pulumi:"id"`
	// List of public IPs associated to the resource.
	Ips []string `pulumi:"ips"`
}

// PrivateNetworkServerInput is an input type that accepts PrivateNetworkServerArgs and PrivateNetworkServerOutput values.
// You can construct a concrete instance of `PrivateNetworkServerInput` via:
//
//	PrivateNetworkServerArgs{...}
type PrivateNetworkServerInput interface {
	pulumi.Input

	ToPrivateNetworkServerOutput() PrivateNetworkServerOutput
	ToPrivateNetworkServerOutputWithContext(context.Context) PrivateNetworkServerOutput
}

type PrivateNetworkServerArgs struct {
	// The server identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// List of public IPs associated to the resource.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
}

func (PrivateNetworkServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkServer)(nil)).Elem()
}

func (i PrivateNetworkServerArgs) ToPrivateNetworkServerOutput() PrivateNetworkServerOutput {
	return i.ToPrivateNetworkServerOutputWithContext(context.Background())
}

func (i PrivateNetworkServerArgs) ToPrivateNetworkServerOutputWithContext(ctx context.Context) PrivateNetworkServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkServerOutput)
}

// PrivateNetworkServerArrayInput is an input type that accepts PrivateNetworkServerArray and PrivateNetworkServerArrayOutput values.
// You can construct a concrete instance of `PrivateNetworkServerArrayInput` via:
//
//	PrivateNetworkServerArray{ PrivateNetworkServerArgs{...} }
type PrivateNetworkServerArrayInput interface {
	pulumi.Input

	ToPrivateNetworkServerArrayOutput() PrivateNetworkServerArrayOutput
	ToPrivateNetworkServerArrayOutputWithContext(context.Context) PrivateNetworkServerArrayOutput
}

type PrivateNetworkServerArray []PrivateNetworkServerInput

func (PrivateNetworkServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateNetworkServer)(nil)).Elem()
}

func (i PrivateNetworkServerArray) ToPrivateNetworkServerArrayOutput() PrivateNetworkServerArrayOutput {
	return i.ToPrivateNetworkServerArrayOutputWithContext(context.Background())
}

func (i PrivateNetworkServerArray) ToPrivateNetworkServerArrayOutputWithContext(ctx context.Context) PrivateNetworkServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateNetworkServerArrayOutput)
}

type PrivateNetworkServerOutput struct{ *pulumi.OutputState }

func (PrivateNetworkServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateNetworkServer)(nil)).Elem()
}

func (o PrivateNetworkServerOutput) ToPrivateNetworkServerOutput() PrivateNetworkServerOutput {
	return o
}

func (o PrivateNetworkServerOutput) ToPrivateNetworkServerOutputWithContext(ctx context.Context) PrivateNetworkServerOutput {
	return o
}

// The server identifier.
func (o PrivateNetworkServerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateNetworkServer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// List of public IPs associated to the resource.
func (o PrivateNetworkServerOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateNetworkServer) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

type PrivateNetworkServerArrayOutput struct{ *pulumi.OutputState }

func (PrivateNetworkServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateNetworkServer)(nil)).Elem()
}

func (o PrivateNetworkServerArrayOutput) ToPrivateNetworkServerArrayOutput() PrivateNetworkServerArrayOutput {
	return o
}

func (o PrivateNetworkServerArrayOutput) ToPrivateNetworkServerArrayOutputWithContext(ctx context.Context) PrivateNetworkServerArrayOutput {
	return o
}

func (o PrivateNetworkServerArrayOutput) Index(i pulumi.IntInput) PrivateNetworkServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateNetworkServer {
		return vs[0].([]PrivateNetworkServer)[vs[1].(int)]
	}).(PrivateNetworkServerOutput)
}

type PublicNetworkIpBlock struct {
	// The assigned IP Block to the public network.
	PublicNetworkIpBlock *PublicNetworkIpBlockPublicNetworkIpBlock `pulumi:"publicNetworkIpBlock"`
}

// PublicNetworkIpBlockInput is an input type that accepts PublicNetworkIpBlockArgs and PublicNetworkIpBlockOutput values.
// You can construct a concrete instance of `PublicNetworkIpBlockInput` via:
//
//	PublicNetworkIpBlockArgs{...}
type PublicNetworkIpBlockInput interface {
	pulumi.Input

	ToPublicNetworkIpBlockOutput() PublicNetworkIpBlockOutput
	ToPublicNetworkIpBlockOutputWithContext(context.Context) PublicNetworkIpBlockOutput
}

type PublicNetworkIpBlockArgs struct {
	// The assigned IP Block to the public network.
	PublicNetworkIpBlock PublicNetworkIpBlockPublicNetworkIpBlockPtrInput `pulumi:"publicNetworkIpBlock"`
}

func (PublicNetworkIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkIpBlock)(nil)).Elem()
}

func (i PublicNetworkIpBlockArgs) ToPublicNetworkIpBlockOutput() PublicNetworkIpBlockOutput {
	return i.ToPublicNetworkIpBlockOutputWithContext(context.Background())
}

func (i PublicNetworkIpBlockArgs) ToPublicNetworkIpBlockOutputWithContext(ctx context.Context) PublicNetworkIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkIpBlockOutput)
}

// PublicNetworkIpBlockArrayInput is an input type that accepts PublicNetworkIpBlockArray and PublicNetworkIpBlockArrayOutput values.
// You can construct a concrete instance of `PublicNetworkIpBlockArrayInput` via:
//
//	PublicNetworkIpBlockArray{ PublicNetworkIpBlockArgs{...} }
type PublicNetworkIpBlockArrayInput interface {
	pulumi.Input

	ToPublicNetworkIpBlockArrayOutput() PublicNetworkIpBlockArrayOutput
	ToPublicNetworkIpBlockArrayOutputWithContext(context.Context) PublicNetworkIpBlockArrayOutput
}

type PublicNetworkIpBlockArray []PublicNetworkIpBlockInput

func (PublicNetworkIpBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicNetworkIpBlock)(nil)).Elem()
}

func (i PublicNetworkIpBlockArray) ToPublicNetworkIpBlockArrayOutput() PublicNetworkIpBlockArrayOutput {
	return i.ToPublicNetworkIpBlockArrayOutputWithContext(context.Background())
}

func (i PublicNetworkIpBlockArray) ToPublicNetworkIpBlockArrayOutputWithContext(ctx context.Context) PublicNetworkIpBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkIpBlockArrayOutput)
}

type PublicNetworkIpBlockOutput struct{ *pulumi.OutputState }

func (PublicNetworkIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkIpBlock)(nil)).Elem()
}

func (o PublicNetworkIpBlockOutput) ToPublicNetworkIpBlockOutput() PublicNetworkIpBlockOutput {
	return o
}

func (o PublicNetworkIpBlockOutput) ToPublicNetworkIpBlockOutputWithContext(ctx context.Context) PublicNetworkIpBlockOutput {
	return o
}

// The assigned IP Block to the public network.
func (o PublicNetworkIpBlockOutput) PublicNetworkIpBlock() PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return o.ApplyT(func(v PublicNetworkIpBlock) *PublicNetworkIpBlockPublicNetworkIpBlock { return v.PublicNetworkIpBlock }).(PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput)
}

type PublicNetworkIpBlockArrayOutput struct{ *pulumi.OutputState }

func (PublicNetworkIpBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicNetworkIpBlock)(nil)).Elem()
}

func (o PublicNetworkIpBlockArrayOutput) ToPublicNetworkIpBlockArrayOutput() PublicNetworkIpBlockArrayOutput {
	return o
}

func (o PublicNetworkIpBlockArrayOutput) ToPublicNetworkIpBlockArrayOutputWithContext(ctx context.Context) PublicNetworkIpBlockArrayOutput {
	return o
}

func (o PublicNetworkIpBlockArrayOutput) Index(i pulumi.IntInput) PublicNetworkIpBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicNetworkIpBlock {
		return vs[0].([]PublicNetworkIpBlock)[vs[1].(int)]
	}).(PublicNetworkIpBlockOutput)
}

type PublicNetworkIpBlockPublicNetworkIpBlock struct {
	// The IP Block identifier.
	Id string `pulumi:"id"`
}

// PublicNetworkIpBlockPublicNetworkIpBlockInput is an input type that accepts PublicNetworkIpBlockPublicNetworkIpBlockArgs and PublicNetworkIpBlockPublicNetworkIpBlockOutput values.
// You can construct a concrete instance of `PublicNetworkIpBlockPublicNetworkIpBlockInput` via:
//
//	PublicNetworkIpBlockPublicNetworkIpBlockArgs{...}
type PublicNetworkIpBlockPublicNetworkIpBlockInput interface {
	pulumi.Input

	ToPublicNetworkIpBlockPublicNetworkIpBlockOutput() PublicNetworkIpBlockPublicNetworkIpBlockOutput
	ToPublicNetworkIpBlockPublicNetworkIpBlockOutputWithContext(context.Context) PublicNetworkIpBlockPublicNetworkIpBlockOutput
}

type PublicNetworkIpBlockPublicNetworkIpBlockArgs struct {
	// The IP Block identifier.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PublicNetworkIpBlockPublicNetworkIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkIpBlockPublicNetworkIpBlock)(nil)).Elem()
}

func (i PublicNetworkIpBlockPublicNetworkIpBlockArgs) ToPublicNetworkIpBlockPublicNetworkIpBlockOutput() PublicNetworkIpBlockPublicNetworkIpBlockOutput {
	return i.ToPublicNetworkIpBlockPublicNetworkIpBlockOutputWithContext(context.Background())
}

func (i PublicNetworkIpBlockPublicNetworkIpBlockArgs) ToPublicNetworkIpBlockPublicNetworkIpBlockOutputWithContext(ctx context.Context) PublicNetworkIpBlockPublicNetworkIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkIpBlockPublicNetworkIpBlockOutput)
}

func (i PublicNetworkIpBlockPublicNetworkIpBlockArgs) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutput() PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return i.ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(context.Background())
}

func (i PublicNetworkIpBlockPublicNetworkIpBlockArgs) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(ctx context.Context) PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkIpBlockPublicNetworkIpBlockOutput).ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(ctx)
}

// PublicNetworkIpBlockPublicNetworkIpBlockPtrInput is an input type that accepts PublicNetworkIpBlockPublicNetworkIpBlockArgs, PublicNetworkIpBlockPublicNetworkIpBlockPtr and PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput values.
// You can construct a concrete instance of `PublicNetworkIpBlockPublicNetworkIpBlockPtrInput` via:
//
//	        PublicNetworkIpBlockPublicNetworkIpBlockArgs{...}
//
//	or:
//
//	        nil
type PublicNetworkIpBlockPublicNetworkIpBlockPtrInput interface {
	pulumi.Input

	ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutput() PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput
	ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(context.Context) PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput
}

type publicNetworkIpBlockPublicNetworkIpBlockPtrType PublicNetworkIpBlockPublicNetworkIpBlockArgs

func PublicNetworkIpBlockPublicNetworkIpBlockPtr(v *PublicNetworkIpBlockPublicNetworkIpBlockArgs) PublicNetworkIpBlockPublicNetworkIpBlockPtrInput {
	return (*publicNetworkIpBlockPublicNetworkIpBlockPtrType)(v)
}

func (*publicNetworkIpBlockPublicNetworkIpBlockPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkIpBlockPublicNetworkIpBlock)(nil)).Elem()
}

func (i *publicNetworkIpBlockPublicNetworkIpBlockPtrType) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutput() PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return i.ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(context.Background())
}

func (i *publicNetworkIpBlockPublicNetworkIpBlockPtrType) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(ctx context.Context) PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput)
}

type PublicNetworkIpBlockPublicNetworkIpBlockOutput struct{ *pulumi.OutputState }

func (PublicNetworkIpBlockPublicNetworkIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkIpBlockPublicNetworkIpBlock)(nil)).Elem()
}

func (o PublicNetworkIpBlockPublicNetworkIpBlockOutput) ToPublicNetworkIpBlockPublicNetworkIpBlockOutput() PublicNetworkIpBlockPublicNetworkIpBlockOutput {
	return o
}

func (o PublicNetworkIpBlockPublicNetworkIpBlockOutput) ToPublicNetworkIpBlockPublicNetworkIpBlockOutputWithContext(ctx context.Context) PublicNetworkIpBlockPublicNetworkIpBlockOutput {
	return o
}

func (o PublicNetworkIpBlockPublicNetworkIpBlockOutput) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutput() PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return o.ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(context.Background())
}

func (o PublicNetworkIpBlockPublicNetworkIpBlockOutput) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(ctx context.Context) PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicNetworkIpBlockPublicNetworkIpBlock) *PublicNetworkIpBlockPublicNetworkIpBlock {
		return &v
	}).(PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput)
}

// The IP Block identifier.
func (o PublicNetworkIpBlockPublicNetworkIpBlockOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PublicNetworkIpBlockPublicNetworkIpBlock) string { return v.Id }).(pulumi.StringOutput)
}

type PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput struct{ *pulumi.OutputState }

func (PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicNetworkIpBlockPublicNetworkIpBlock)(nil)).Elem()
}

func (o PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutput() PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return o
}

func (o PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput) ToPublicNetworkIpBlockPublicNetworkIpBlockPtrOutputWithContext(ctx context.Context) PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput {
	return o
}

func (o PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput) Elem() PublicNetworkIpBlockPublicNetworkIpBlockOutput {
	return o.ApplyT(func(v *PublicNetworkIpBlockPublicNetworkIpBlock) PublicNetworkIpBlockPublicNetworkIpBlock {
		if v != nil {
			return *v
		}
		var ret PublicNetworkIpBlockPublicNetworkIpBlock
		return ret
	}).(PublicNetworkIpBlockPublicNetworkIpBlockOutput)
}

// The IP Block identifier.
func (o PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicNetworkIpBlockPublicNetworkIpBlock) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type PublicNetworkMembership struct {
	// List of public IPs associated to the resource.
	Ips []string `pulumi:"ips"`
	// The resource identifier.
	ResourceId *string `pulumi:"resourceId"`
	// The resource's type.
	ResourceType *string `pulumi:"resourceType"`
}

// PublicNetworkMembershipInput is an input type that accepts PublicNetworkMembershipArgs and PublicNetworkMembershipOutput values.
// You can construct a concrete instance of `PublicNetworkMembershipInput` via:
//
//	PublicNetworkMembershipArgs{...}
type PublicNetworkMembershipInput interface {
	pulumi.Input

	ToPublicNetworkMembershipOutput() PublicNetworkMembershipOutput
	ToPublicNetworkMembershipOutputWithContext(context.Context) PublicNetworkMembershipOutput
}

type PublicNetworkMembershipArgs struct {
	// List of public IPs associated to the resource.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The resource identifier.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// The resource's type.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (PublicNetworkMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkMembership)(nil)).Elem()
}

func (i PublicNetworkMembershipArgs) ToPublicNetworkMembershipOutput() PublicNetworkMembershipOutput {
	return i.ToPublicNetworkMembershipOutputWithContext(context.Background())
}

func (i PublicNetworkMembershipArgs) ToPublicNetworkMembershipOutputWithContext(ctx context.Context) PublicNetworkMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkMembershipOutput)
}

// PublicNetworkMembershipArrayInput is an input type that accepts PublicNetworkMembershipArray and PublicNetworkMembershipArrayOutput values.
// You can construct a concrete instance of `PublicNetworkMembershipArrayInput` via:
//
//	PublicNetworkMembershipArray{ PublicNetworkMembershipArgs{...} }
type PublicNetworkMembershipArrayInput interface {
	pulumi.Input

	ToPublicNetworkMembershipArrayOutput() PublicNetworkMembershipArrayOutput
	ToPublicNetworkMembershipArrayOutputWithContext(context.Context) PublicNetworkMembershipArrayOutput
}

type PublicNetworkMembershipArray []PublicNetworkMembershipInput

func (PublicNetworkMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicNetworkMembership)(nil)).Elem()
}

func (i PublicNetworkMembershipArray) ToPublicNetworkMembershipArrayOutput() PublicNetworkMembershipArrayOutput {
	return i.ToPublicNetworkMembershipArrayOutputWithContext(context.Background())
}

func (i PublicNetworkMembershipArray) ToPublicNetworkMembershipArrayOutputWithContext(ctx context.Context) PublicNetworkMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicNetworkMembershipArrayOutput)
}

type PublicNetworkMembershipOutput struct{ *pulumi.OutputState }

func (PublicNetworkMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicNetworkMembership)(nil)).Elem()
}

func (o PublicNetworkMembershipOutput) ToPublicNetworkMembershipOutput() PublicNetworkMembershipOutput {
	return o
}

func (o PublicNetworkMembershipOutput) ToPublicNetworkMembershipOutputWithContext(ctx context.Context) PublicNetworkMembershipOutput {
	return o
}

// List of public IPs associated to the resource.
func (o PublicNetworkMembershipOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicNetworkMembership) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The resource identifier.
func (o PublicNetworkMembershipOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicNetworkMembership) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The resource's type.
func (o PublicNetworkMembershipOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicNetworkMembership) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type PublicNetworkMembershipArrayOutput struct{ *pulumi.OutputState }

func (PublicNetworkMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicNetworkMembership)(nil)).Elem()
}

func (o PublicNetworkMembershipArrayOutput) ToPublicNetworkMembershipArrayOutput() PublicNetworkMembershipArrayOutput {
	return o
}

func (o PublicNetworkMembershipArrayOutput) ToPublicNetworkMembershipArrayOutputWithContext(ctx context.Context) PublicNetworkMembershipArrayOutput {
	return o
}

func (o PublicNetworkMembershipArrayOutput) Index(i pulumi.IntInput) PublicNetworkMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicNetworkMembership {
		return vs[0].([]PublicNetworkMembership)[vs[1].(int)]
	}).(PublicNetworkMembershipOutput)
}

type RancherClusterConfiguration struct {
	// Define the custom SSL certificates to be used instead of defaults. The `certificates` block has 3 fields.
	Certificates *RancherClusterConfigurationCertificates `pulumi:"certificates"`
	// This maps to rancher's cluster-domain. Cluster Domain.
	ClusterDomain *string `pulumi:"clusterDomain"`
	// This maps to rancher's etcd-snapshot-retention. Number of snapshots to retain. Default value is 5.
	EtcdSnapshotRetention *int `pulumi:"etcdSnapshotRetention"`
	// This maps to rancher's etcd-snapshot-schedule-cron. Snapshot interval time in cron spec.
	EtcdSnapshotScheduleCron *string `pulumi:"etcdSnapshotScheduleCron"`
	// This maps to rancher's node-taint. Registering kubelet with set of taints.
	NodeTaint *string `pulumi:"nodeTaint"`
	// This maps to rancher's tls-san. Add additional hostname or IP as a Subject Alternative Name in the TLS cert.
	TlsSan *string `pulumi:"tlsSan"`
	// Shared secret used to join a server or agent to a cluster.
	Token *string `pulumi:"token"`
}

// RancherClusterConfigurationInput is an input type that accepts RancherClusterConfigurationArgs and RancherClusterConfigurationOutput values.
// You can construct a concrete instance of `RancherClusterConfigurationInput` via:
//
//	RancherClusterConfigurationArgs{...}
type RancherClusterConfigurationInput interface {
	pulumi.Input

	ToRancherClusterConfigurationOutput() RancherClusterConfigurationOutput
	ToRancherClusterConfigurationOutputWithContext(context.Context) RancherClusterConfigurationOutput
}

type RancherClusterConfigurationArgs struct {
	// Define the custom SSL certificates to be used instead of defaults. The `certificates` block has 3 fields.
	Certificates RancherClusterConfigurationCertificatesPtrInput `pulumi:"certificates"`
	// This maps to rancher's cluster-domain. Cluster Domain.
	ClusterDomain pulumi.StringPtrInput `pulumi:"clusterDomain"`
	// This maps to rancher's etcd-snapshot-retention. Number of snapshots to retain. Default value is 5.
	EtcdSnapshotRetention pulumi.IntPtrInput `pulumi:"etcdSnapshotRetention"`
	// This maps to rancher's etcd-snapshot-schedule-cron. Snapshot interval time in cron spec.
	EtcdSnapshotScheduleCron pulumi.StringPtrInput `pulumi:"etcdSnapshotScheduleCron"`
	// This maps to rancher's node-taint. Registering kubelet with set of taints.
	NodeTaint pulumi.StringPtrInput `pulumi:"nodeTaint"`
	// This maps to rancher's tls-san. Add additional hostname or IP as a Subject Alternative Name in the TLS cert.
	TlsSan pulumi.StringPtrInput `pulumi:"tlsSan"`
	// Shared secret used to join a server or agent to a cluster.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (RancherClusterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterConfiguration)(nil)).Elem()
}

func (i RancherClusterConfigurationArgs) ToRancherClusterConfigurationOutput() RancherClusterConfigurationOutput {
	return i.ToRancherClusterConfigurationOutputWithContext(context.Background())
}

func (i RancherClusterConfigurationArgs) ToRancherClusterConfigurationOutputWithContext(ctx context.Context) RancherClusterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterConfigurationOutput)
}

func (i RancherClusterConfigurationArgs) ToRancherClusterConfigurationPtrOutput() RancherClusterConfigurationPtrOutput {
	return i.ToRancherClusterConfigurationPtrOutputWithContext(context.Background())
}

func (i RancherClusterConfigurationArgs) ToRancherClusterConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterConfigurationOutput).ToRancherClusterConfigurationPtrOutputWithContext(ctx)
}

// RancherClusterConfigurationPtrInput is an input type that accepts RancherClusterConfigurationArgs, RancherClusterConfigurationPtr and RancherClusterConfigurationPtrOutput values.
// You can construct a concrete instance of `RancherClusterConfigurationPtrInput` via:
//
//	        RancherClusterConfigurationArgs{...}
//
//	or:
//
//	        nil
type RancherClusterConfigurationPtrInput interface {
	pulumi.Input

	ToRancherClusterConfigurationPtrOutput() RancherClusterConfigurationPtrOutput
	ToRancherClusterConfigurationPtrOutputWithContext(context.Context) RancherClusterConfigurationPtrOutput
}

type rancherClusterConfigurationPtrType RancherClusterConfigurationArgs

func RancherClusterConfigurationPtr(v *RancherClusterConfigurationArgs) RancherClusterConfigurationPtrInput {
	return (*rancherClusterConfigurationPtrType)(v)
}

func (*rancherClusterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterConfiguration)(nil)).Elem()
}

func (i *rancherClusterConfigurationPtrType) ToRancherClusterConfigurationPtrOutput() RancherClusterConfigurationPtrOutput {
	return i.ToRancherClusterConfigurationPtrOutputWithContext(context.Background())
}

func (i *rancherClusterConfigurationPtrType) ToRancherClusterConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterConfigurationPtrOutput)
}

type RancherClusterConfigurationOutput struct{ *pulumi.OutputState }

func (RancherClusterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterConfiguration)(nil)).Elem()
}

func (o RancherClusterConfigurationOutput) ToRancherClusterConfigurationOutput() RancherClusterConfigurationOutput {
	return o
}

func (o RancherClusterConfigurationOutput) ToRancherClusterConfigurationOutputWithContext(ctx context.Context) RancherClusterConfigurationOutput {
	return o
}

func (o RancherClusterConfigurationOutput) ToRancherClusterConfigurationPtrOutput() RancherClusterConfigurationPtrOutput {
	return o.ToRancherClusterConfigurationPtrOutputWithContext(context.Background())
}

func (o RancherClusterConfigurationOutput) ToRancherClusterConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RancherClusterConfiguration) *RancherClusterConfiguration {
		return &v
	}).(RancherClusterConfigurationPtrOutput)
}

// Define the custom SSL certificates to be used instead of defaults. The `certificates` block has 3 fields.
func (o RancherClusterConfigurationOutput) Certificates() RancherClusterConfigurationCertificatesPtrOutput {
	return o.ApplyT(func(v RancherClusterConfiguration) *RancherClusterConfigurationCertificates { return v.Certificates }).(RancherClusterConfigurationCertificatesPtrOutput)
}

// This maps to rancher's cluster-domain. Cluster Domain.
func (o RancherClusterConfigurationOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfiguration) *string { return v.ClusterDomain }).(pulumi.StringPtrOutput)
}

// This maps to rancher's etcd-snapshot-retention. Number of snapshots to retain. Default value is 5.
func (o RancherClusterConfigurationOutput) EtcdSnapshotRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RancherClusterConfiguration) *int { return v.EtcdSnapshotRetention }).(pulumi.IntPtrOutput)
}

// This maps to rancher's etcd-snapshot-schedule-cron. Snapshot interval time in cron spec.
func (o RancherClusterConfigurationOutput) EtcdSnapshotScheduleCron() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfiguration) *string { return v.EtcdSnapshotScheduleCron }).(pulumi.StringPtrOutput)
}

// This maps to rancher's node-taint. Registering kubelet with set of taints.
func (o RancherClusterConfigurationOutput) NodeTaint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfiguration) *string { return v.NodeTaint }).(pulumi.StringPtrOutput)
}

// This maps to rancher's tls-san. Add additional hostname or IP as a Subject Alternative Name in the TLS cert.
func (o RancherClusterConfigurationOutput) TlsSan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfiguration) *string { return v.TlsSan }).(pulumi.StringPtrOutput)
}

// Shared secret used to join a server or agent to a cluster.
func (o RancherClusterConfigurationOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfiguration) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type RancherClusterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RancherClusterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterConfiguration)(nil)).Elem()
}

func (o RancherClusterConfigurationPtrOutput) ToRancherClusterConfigurationPtrOutput() RancherClusterConfigurationPtrOutput {
	return o
}

func (o RancherClusterConfigurationPtrOutput) ToRancherClusterConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationPtrOutput {
	return o
}

func (o RancherClusterConfigurationPtrOutput) Elem() RancherClusterConfigurationOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) RancherClusterConfiguration {
		if v != nil {
			return *v
		}
		var ret RancherClusterConfiguration
		return ret
	}).(RancherClusterConfigurationOutput)
}

// Define the custom SSL certificates to be used instead of defaults. The `certificates` block has 3 fields.
func (o RancherClusterConfigurationPtrOutput) Certificates() RancherClusterConfigurationCertificatesPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) *RancherClusterConfigurationCertificates {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(RancherClusterConfigurationCertificatesPtrOutput)
}

// This maps to rancher's cluster-domain. Cluster Domain.
func (o RancherClusterConfigurationPtrOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDomain
	}).(pulumi.StringPtrOutput)
}

// This maps to rancher's etcd-snapshot-retention. Number of snapshots to retain. Default value is 5.
func (o RancherClusterConfigurationPtrOutput) EtcdSnapshotRetention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.EtcdSnapshotRetention
	}).(pulumi.IntPtrOutput)
}

// This maps to rancher's etcd-snapshot-schedule-cron. Snapshot interval time in cron spec.
func (o RancherClusterConfigurationPtrOutput) EtcdSnapshotScheduleCron() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EtcdSnapshotScheduleCron
	}).(pulumi.StringPtrOutput)
}

// This maps to rancher's node-taint. Registering kubelet with set of taints.
func (o RancherClusterConfigurationPtrOutput) NodeTaint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.NodeTaint
	}).(pulumi.StringPtrOutput)
}

// This maps to rancher's tls-san. Add additional hostname or IP as a Subject Alternative Name in the TLS cert.
func (o RancherClusterConfigurationPtrOutput) TlsSan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TlsSan
	}).(pulumi.StringPtrOutput)
}

// Shared secret used to join a server or agent to a cluster.
func (o RancherClusterConfigurationPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

type RancherClusterConfigurationCertificates struct {
	// The SSL CA certificate to be used for rancher admin.
	CaCertificate *string `pulumi:"caCertificate"`
	// The SSL certificate to be used for rancher admin.
	Certificate *string `pulumi:"certificate"`
	// The SSL certificate key to be used for rancher admin.
	CertificateKey *string `pulumi:"certificateKey"`
}

// RancherClusterConfigurationCertificatesInput is an input type that accepts RancherClusterConfigurationCertificatesArgs and RancherClusterConfigurationCertificatesOutput values.
// You can construct a concrete instance of `RancherClusterConfigurationCertificatesInput` via:
//
//	RancherClusterConfigurationCertificatesArgs{...}
type RancherClusterConfigurationCertificatesInput interface {
	pulumi.Input

	ToRancherClusterConfigurationCertificatesOutput() RancherClusterConfigurationCertificatesOutput
	ToRancherClusterConfigurationCertificatesOutputWithContext(context.Context) RancherClusterConfigurationCertificatesOutput
}

type RancherClusterConfigurationCertificatesArgs struct {
	// The SSL CA certificate to be used for rancher admin.
	CaCertificate pulumi.StringPtrInput `pulumi:"caCertificate"`
	// The SSL certificate to be used for rancher admin.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The SSL certificate key to be used for rancher admin.
	CertificateKey pulumi.StringPtrInput `pulumi:"certificateKey"`
}

func (RancherClusterConfigurationCertificatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterConfigurationCertificates)(nil)).Elem()
}

func (i RancherClusterConfigurationCertificatesArgs) ToRancherClusterConfigurationCertificatesOutput() RancherClusterConfigurationCertificatesOutput {
	return i.ToRancherClusterConfigurationCertificatesOutputWithContext(context.Background())
}

func (i RancherClusterConfigurationCertificatesArgs) ToRancherClusterConfigurationCertificatesOutputWithContext(ctx context.Context) RancherClusterConfigurationCertificatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterConfigurationCertificatesOutput)
}

func (i RancherClusterConfigurationCertificatesArgs) ToRancherClusterConfigurationCertificatesPtrOutput() RancherClusterConfigurationCertificatesPtrOutput {
	return i.ToRancherClusterConfigurationCertificatesPtrOutputWithContext(context.Background())
}

func (i RancherClusterConfigurationCertificatesArgs) ToRancherClusterConfigurationCertificatesPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationCertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterConfigurationCertificatesOutput).ToRancherClusterConfigurationCertificatesPtrOutputWithContext(ctx)
}

// RancherClusterConfigurationCertificatesPtrInput is an input type that accepts RancherClusterConfigurationCertificatesArgs, RancherClusterConfigurationCertificatesPtr and RancherClusterConfigurationCertificatesPtrOutput values.
// You can construct a concrete instance of `RancherClusterConfigurationCertificatesPtrInput` via:
//
//	        RancherClusterConfigurationCertificatesArgs{...}
//
//	or:
//
//	        nil
type RancherClusterConfigurationCertificatesPtrInput interface {
	pulumi.Input

	ToRancherClusterConfigurationCertificatesPtrOutput() RancherClusterConfigurationCertificatesPtrOutput
	ToRancherClusterConfigurationCertificatesPtrOutputWithContext(context.Context) RancherClusterConfigurationCertificatesPtrOutput
}

type rancherClusterConfigurationCertificatesPtrType RancherClusterConfigurationCertificatesArgs

func RancherClusterConfigurationCertificatesPtr(v *RancherClusterConfigurationCertificatesArgs) RancherClusterConfigurationCertificatesPtrInput {
	return (*rancherClusterConfigurationCertificatesPtrType)(v)
}

func (*rancherClusterConfigurationCertificatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterConfigurationCertificates)(nil)).Elem()
}

func (i *rancherClusterConfigurationCertificatesPtrType) ToRancherClusterConfigurationCertificatesPtrOutput() RancherClusterConfigurationCertificatesPtrOutput {
	return i.ToRancherClusterConfigurationCertificatesPtrOutputWithContext(context.Background())
}

func (i *rancherClusterConfigurationCertificatesPtrType) ToRancherClusterConfigurationCertificatesPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationCertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterConfigurationCertificatesPtrOutput)
}

type RancherClusterConfigurationCertificatesOutput struct{ *pulumi.OutputState }

func (RancherClusterConfigurationCertificatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterConfigurationCertificates)(nil)).Elem()
}

func (o RancherClusterConfigurationCertificatesOutput) ToRancherClusterConfigurationCertificatesOutput() RancherClusterConfigurationCertificatesOutput {
	return o
}

func (o RancherClusterConfigurationCertificatesOutput) ToRancherClusterConfigurationCertificatesOutputWithContext(ctx context.Context) RancherClusterConfigurationCertificatesOutput {
	return o
}

func (o RancherClusterConfigurationCertificatesOutput) ToRancherClusterConfigurationCertificatesPtrOutput() RancherClusterConfigurationCertificatesPtrOutput {
	return o.ToRancherClusterConfigurationCertificatesPtrOutputWithContext(context.Background())
}

func (o RancherClusterConfigurationCertificatesOutput) ToRancherClusterConfigurationCertificatesPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationCertificatesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RancherClusterConfigurationCertificates) *RancherClusterConfigurationCertificates {
		return &v
	}).(RancherClusterConfigurationCertificatesPtrOutput)
}

// The SSL CA certificate to be used for rancher admin.
func (o RancherClusterConfigurationCertificatesOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfigurationCertificates) *string { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// The SSL certificate to be used for rancher admin.
func (o RancherClusterConfigurationCertificatesOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfigurationCertificates) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The SSL certificate key to be used for rancher admin.
func (o RancherClusterConfigurationCertificatesOutput) CertificateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterConfigurationCertificates) *string { return v.CertificateKey }).(pulumi.StringPtrOutput)
}

type RancherClusterConfigurationCertificatesPtrOutput struct{ *pulumi.OutputState }

func (RancherClusterConfigurationCertificatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterConfigurationCertificates)(nil)).Elem()
}

func (o RancherClusterConfigurationCertificatesPtrOutput) ToRancherClusterConfigurationCertificatesPtrOutput() RancherClusterConfigurationCertificatesPtrOutput {
	return o
}

func (o RancherClusterConfigurationCertificatesPtrOutput) ToRancherClusterConfigurationCertificatesPtrOutputWithContext(ctx context.Context) RancherClusterConfigurationCertificatesPtrOutput {
	return o
}

func (o RancherClusterConfigurationCertificatesPtrOutput) Elem() RancherClusterConfigurationCertificatesOutput {
	return o.ApplyT(func(v *RancherClusterConfigurationCertificates) RancherClusterConfigurationCertificates {
		if v != nil {
			return *v
		}
		var ret RancherClusterConfigurationCertificates
		return ret
	}).(RancherClusterConfigurationCertificatesOutput)
}

// The SSL CA certificate to be used for rancher admin.
func (o RancherClusterConfigurationCertificatesPtrOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfigurationCertificates) *string {
		if v == nil {
			return nil
		}
		return v.CaCertificate
	}).(pulumi.StringPtrOutput)
}

// The SSL certificate to be used for rancher admin.
func (o RancherClusterConfigurationCertificatesPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfigurationCertificates) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

// The SSL certificate key to be used for rancher admin.
func (o RancherClusterConfigurationCertificatesPtrOutput) CertificateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterConfigurationCertificates) *string {
		if v == nil {
			return nil
		}
		return v.CertificateKey
	}).(pulumi.StringPtrOutput)
}

type RancherClusterMetadata struct {
	// This is the password to be used to login to the Rancher Server. This field is returned only as a response to the create cluster request. Make sure to take note or you will not be able to access the server.
	Password *string `pulumi:"password"`
	// The Rancher Server URL.
	Url *string `pulumi:"url"`
	// The username to use to login to the Rancher Server. This field is returned only as a response to the create cluster request. Make sure to take note or you will not be able to access the server.
	Username *string `pulumi:"username"`
}

// RancherClusterMetadataInput is an input type that accepts RancherClusterMetadataArgs and RancherClusterMetadataOutput values.
// You can construct a concrete instance of `RancherClusterMetadataInput` via:
//
//	RancherClusterMetadataArgs{...}
type RancherClusterMetadataInput interface {
	pulumi.Input

	ToRancherClusterMetadataOutput() RancherClusterMetadataOutput
	ToRancherClusterMetadataOutputWithContext(context.Context) RancherClusterMetadataOutput
}

type RancherClusterMetadataArgs struct {
	// This is the password to be used to login to the Rancher Server. This field is returned only as a response to the create cluster request. Make sure to take note or you will not be able to access the server.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The Rancher Server URL.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// The username to use to login to the Rancher Server. This field is returned only as a response to the create cluster request. Make sure to take note or you will not be able to access the server.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (RancherClusterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterMetadata)(nil)).Elem()
}

func (i RancherClusterMetadataArgs) ToRancherClusterMetadataOutput() RancherClusterMetadataOutput {
	return i.ToRancherClusterMetadataOutputWithContext(context.Background())
}

func (i RancherClusterMetadataArgs) ToRancherClusterMetadataOutputWithContext(ctx context.Context) RancherClusterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterMetadataOutput)
}

// RancherClusterMetadataArrayInput is an input type that accepts RancherClusterMetadataArray and RancherClusterMetadataArrayOutput values.
// You can construct a concrete instance of `RancherClusterMetadataArrayInput` via:
//
//	RancherClusterMetadataArray{ RancherClusterMetadataArgs{...} }
type RancherClusterMetadataArrayInput interface {
	pulumi.Input

	ToRancherClusterMetadataArrayOutput() RancherClusterMetadataArrayOutput
	ToRancherClusterMetadataArrayOutputWithContext(context.Context) RancherClusterMetadataArrayOutput
}

type RancherClusterMetadataArray []RancherClusterMetadataInput

func (RancherClusterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RancherClusterMetadata)(nil)).Elem()
}

func (i RancherClusterMetadataArray) ToRancherClusterMetadataArrayOutput() RancherClusterMetadataArrayOutput {
	return i.ToRancherClusterMetadataArrayOutputWithContext(context.Background())
}

func (i RancherClusterMetadataArray) ToRancherClusterMetadataArrayOutputWithContext(ctx context.Context) RancherClusterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterMetadataArrayOutput)
}

type RancherClusterMetadataOutput struct{ *pulumi.OutputState }

func (RancherClusterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterMetadata)(nil)).Elem()
}

func (o RancherClusterMetadataOutput) ToRancherClusterMetadataOutput() RancherClusterMetadataOutput {
	return o
}

func (o RancherClusterMetadataOutput) ToRancherClusterMetadataOutputWithContext(ctx context.Context) RancherClusterMetadataOutput {
	return o
}

// This is the password to be used to login to the Rancher Server. This field is returned only as a response to the create cluster request. Make sure to take note or you will not be able to access the server.
func (o RancherClusterMetadataOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterMetadata) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The Rancher Server URL.
func (o RancherClusterMetadataOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterMetadata) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// The username to use to login to the Rancher Server. This field is returned only as a response to the create cluster request. Make sure to take note or you will not be able to access the server.
func (o RancherClusterMetadataOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterMetadata) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type RancherClusterMetadataArrayOutput struct{ *pulumi.OutputState }

func (RancherClusterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RancherClusterMetadata)(nil)).Elem()
}

func (o RancherClusterMetadataArrayOutput) ToRancherClusterMetadataArrayOutput() RancherClusterMetadataArrayOutput {
	return o
}

func (o RancherClusterMetadataArrayOutput) ToRancherClusterMetadataArrayOutputWithContext(ctx context.Context) RancherClusterMetadataArrayOutput {
	return o
}

func (o RancherClusterMetadataArrayOutput) Index(i pulumi.IntInput) RancherClusterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RancherClusterMetadata {
		return vs[0].([]RancherClusterMetadata)[vs[1].(int)]
	}).(RancherClusterMetadataOutput)
}

type RancherClusterNodePools struct {
	// The name of the workload cluster. This field is autogenerated if not provided.
	Name *string `pulumi:"name"`
	// Number of configured nodes. Currently only node counts of 1 and 3 are possible.
	NodeCount *int `pulumi:"nodeCount"`
	// The nodes associated with this node pool.
	Nodes []RancherClusterNodePoolsNode `pulumi:"nodes"`
	// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
	ServerType *string `pulumi:"serverType"`
	// Configuration defining which public SSH keys are pre-installed as authorized on the server. The `sshConfig` block has 3 fields.
	SshConfig *RancherClusterNodePoolsSshConfig `pulumi:"sshConfig"`
}

// RancherClusterNodePoolsInput is an input type that accepts RancherClusterNodePoolsArgs and RancherClusterNodePoolsOutput values.
// You can construct a concrete instance of `RancherClusterNodePoolsInput` via:
//
//	RancherClusterNodePoolsArgs{...}
type RancherClusterNodePoolsInput interface {
	pulumi.Input

	ToRancherClusterNodePoolsOutput() RancherClusterNodePoolsOutput
	ToRancherClusterNodePoolsOutputWithContext(context.Context) RancherClusterNodePoolsOutput
}

type RancherClusterNodePoolsArgs struct {
	// The name of the workload cluster. This field is autogenerated if not provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Number of configured nodes. Currently only node counts of 1 and 3 are possible.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// The nodes associated with this node pool.
	Nodes RancherClusterNodePoolsNodeArrayInput `pulumi:"nodes"`
	// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
	// Configuration defining which public SSH keys are pre-installed as authorized on the server. The `sshConfig` block has 3 fields.
	SshConfig RancherClusterNodePoolsSshConfigPtrInput `pulumi:"sshConfig"`
}

func (RancherClusterNodePoolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterNodePools)(nil)).Elem()
}

func (i RancherClusterNodePoolsArgs) ToRancherClusterNodePoolsOutput() RancherClusterNodePoolsOutput {
	return i.ToRancherClusterNodePoolsOutputWithContext(context.Background())
}

func (i RancherClusterNodePoolsArgs) ToRancherClusterNodePoolsOutputWithContext(ctx context.Context) RancherClusterNodePoolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsOutput)
}

func (i RancherClusterNodePoolsArgs) ToRancherClusterNodePoolsPtrOutput() RancherClusterNodePoolsPtrOutput {
	return i.ToRancherClusterNodePoolsPtrOutputWithContext(context.Background())
}

func (i RancherClusterNodePoolsArgs) ToRancherClusterNodePoolsPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsOutput).ToRancherClusterNodePoolsPtrOutputWithContext(ctx)
}

// RancherClusterNodePoolsPtrInput is an input type that accepts RancherClusterNodePoolsArgs, RancherClusterNodePoolsPtr and RancherClusterNodePoolsPtrOutput values.
// You can construct a concrete instance of `RancherClusterNodePoolsPtrInput` via:
//
//	        RancherClusterNodePoolsArgs{...}
//
//	or:
//
//	        nil
type RancherClusterNodePoolsPtrInput interface {
	pulumi.Input

	ToRancherClusterNodePoolsPtrOutput() RancherClusterNodePoolsPtrOutput
	ToRancherClusterNodePoolsPtrOutputWithContext(context.Context) RancherClusterNodePoolsPtrOutput
}

type rancherClusterNodePoolsPtrType RancherClusterNodePoolsArgs

func RancherClusterNodePoolsPtr(v *RancherClusterNodePoolsArgs) RancherClusterNodePoolsPtrInput {
	return (*rancherClusterNodePoolsPtrType)(v)
}

func (*rancherClusterNodePoolsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterNodePools)(nil)).Elem()
}

func (i *rancherClusterNodePoolsPtrType) ToRancherClusterNodePoolsPtrOutput() RancherClusterNodePoolsPtrOutput {
	return i.ToRancherClusterNodePoolsPtrOutputWithContext(context.Background())
}

func (i *rancherClusterNodePoolsPtrType) ToRancherClusterNodePoolsPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsPtrOutput)
}

type RancherClusterNodePoolsOutput struct{ *pulumi.OutputState }

func (RancherClusterNodePoolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterNodePools)(nil)).Elem()
}

func (o RancherClusterNodePoolsOutput) ToRancherClusterNodePoolsOutput() RancherClusterNodePoolsOutput {
	return o
}

func (o RancherClusterNodePoolsOutput) ToRancherClusterNodePoolsOutputWithContext(ctx context.Context) RancherClusterNodePoolsOutput {
	return o
}

func (o RancherClusterNodePoolsOutput) ToRancherClusterNodePoolsPtrOutput() RancherClusterNodePoolsPtrOutput {
	return o.ToRancherClusterNodePoolsPtrOutputWithContext(context.Background())
}

func (o RancherClusterNodePoolsOutput) ToRancherClusterNodePoolsPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RancherClusterNodePools) *RancherClusterNodePools {
		return &v
	}).(RancherClusterNodePoolsPtrOutput)
}

// The name of the workload cluster. This field is autogenerated if not provided.
func (o RancherClusterNodePoolsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterNodePools) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Number of configured nodes. Currently only node counts of 1 and 3 are possible.
func (o RancherClusterNodePoolsOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RancherClusterNodePools) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// The nodes associated with this node pool.
func (o RancherClusterNodePoolsOutput) Nodes() RancherClusterNodePoolsNodeArrayOutput {
	return o.ApplyT(func(v RancherClusterNodePools) []RancherClusterNodePoolsNode { return v.Nodes }).(RancherClusterNodePoolsNodeArrayOutput)
}

// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
func (o RancherClusterNodePoolsOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterNodePools) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

// Configuration defining which public SSH keys are pre-installed as authorized on the server. The `sshConfig` block has 3 fields.
func (o RancherClusterNodePoolsOutput) SshConfig() RancherClusterNodePoolsSshConfigPtrOutput {
	return o.ApplyT(func(v RancherClusterNodePools) *RancherClusterNodePoolsSshConfig { return v.SshConfig }).(RancherClusterNodePoolsSshConfigPtrOutput)
}

type RancherClusterNodePoolsPtrOutput struct{ *pulumi.OutputState }

func (RancherClusterNodePoolsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterNodePools)(nil)).Elem()
}

func (o RancherClusterNodePoolsPtrOutput) ToRancherClusterNodePoolsPtrOutput() RancherClusterNodePoolsPtrOutput {
	return o
}

func (o RancherClusterNodePoolsPtrOutput) ToRancherClusterNodePoolsPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsPtrOutput {
	return o
}

func (o RancherClusterNodePoolsPtrOutput) Elem() RancherClusterNodePoolsOutput {
	return o.ApplyT(func(v *RancherClusterNodePools) RancherClusterNodePools {
		if v != nil {
			return *v
		}
		var ret RancherClusterNodePools
		return ret
	}).(RancherClusterNodePoolsOutput)
}

// The name of the workload cluster. This field is autogenerated if not provided.
func (o RancherClusterNodePoolsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterNodePools) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Number of configured nodes. Currently only node counts of 1 and 3 are possible.
func (o RancherClusterNodePoolsPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RancherClusterNodePools) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// The nodes associated with this node pool.
func (o RancherClusterNodePoolsPtrOutput) Nodes() RancherClusterNodePoolsNodeArrayOutput {
	return o.ApplyT(func(v *RancherClusterNodePools) []RancherClusterNodePoolsNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(RancherClusterNodePoolsNodeArrayOutput)
}

// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
func (o RancherClusterNodePoolsPtrOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterNodePools) *string {
		if v == nil {
			return nil
		}
		return v.ServerType
	}).(pulumi.StringPtrOutput)
}

// Configuration defining which public SSH keys are pre-installed as authorized on the server. The `sshConfig` block has 3 fields.
func (o RancherClusterNodePoolsPtrOutput) SshConfig() RancherClusterNodePoolsSshConfigPtrOutput {
	return o.ApplyT(func(v *RancherClusterNodePools) *RancherClusterNodePoolsSshConfig {
		if v == nil {
			return nil
		}
		return v.SshConfig
	}).(RancherClusterNodePoolsSshConfigPtrOutput)
}

type RancherClusterNodePoolsNode struct {
	// The server identifier.
	ServerId *string `pulumi:"serverId"`
}

// RancherClusterNodePoolsNodeInput is an input type that accepts RancherClusterNodePoolsNodeArgs and RancherClusterNodePoolsNodeOutput values.
// You can construct a concrete instance of `RancherClusterNodePoolsNodeInput` via:
//
//	RancherClusterNodePoolsNodeArgs{...}
type RancherClusterNodePoolsNodeInput interface {
	pulumi.Input

	ToRancherClusterNodePoolsNodeOutput() RancherClusterNodePoolsNodeOutput
	ToRancherClusterNodePoolsNodeOutputWithContext(context.Context) RancherClusterNodePoolsNodeOutput
}

type RancherClusterNodePoolsNodeArgs struct {
	// The server identifier.
	ServerId pulumi.StringPtrInput `pulumi:"serverId"`
}

func (RancherClusterNodePoolsNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterNodePoolsNode)(nil)).Elem()
}

func (i RancherClusterNodePoolsNodeArgs) ToRancherClusterNodePoolsNodeOutput() RancherClusterNodePoolsNodeOutput {
	return i.ToRancherClusterNodePoolsNodeOutputWithContext(context.Background())
}

func (i RancherClusterNodePoolsNodeArgs) ToRancherClusterNodePoolsNodeOutputWithContext(ctx context.Context) RancherClusterNodePoolsNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsNodeOutput)
}

// RancherClusterNodePoolsNodeArrayInput is an input type that accepts RancherClusterNodePoolsNodeArray and RancherClusterNodePoolsNodeArrayOutput values.
// You can construct a concrete instance of `RancherClusterNodePoolsNodeArrayInput` via:
//
//	RancherClusterNodePoolsNodeArray{ RancherClusterNodePoolsNodeArgs{...} }
type RancherClusterNodePoolsNodeArrayInput interface {
	pulumi.Input

	ToRancherClusterNodePoolsNodeArrayOutput() RancherClusterNodePoolsNodeArrayOutput
	ToRancherClusterNodePoolsNodeArrayOutputWithContext(context.Context) RancherClusterNodePoolsNodeArrayOutput
}

type RancherClusterNodePoolsNodeArray []RancherClusterNodePoolsNodeInput

func (RancherClusterNodePoolsNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RancherClusterNodePoolsNode)(nil)).Elem()
}

func (i RancherClusterNodePoolsNodeArray) ToRancherClusterNodePoolsNodeArrayOutput() RancherClusterNodePoolsNodeArrayOutput {
	return i.ToRancherClusterNodePoolsNodeArrayOutputWithContext(context.Background())
}

func (i RancherClusterNodePoolsNodeArray) ToRancherClusterNodePoolsNodeArrayOutputWithContext(ctx context.Context) RancherClusterNodePoolsNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsNodeArrayOutput)
}

type RancherClusterNodePoolsNodeOutput struct{ *pulumi.OutputState }

func (RancherClusterNodePoolsNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterNodePoolsNode)(nil)).Elem()
}

func (o RancherClusterNodePoolsNodeOutput) ToRancherClusterNodePoolsNodeOutput() RancherClusterNodePoolsNodeOutput {
	return o
}

func (o RancherClusterNodePoolsNodeOutput) ToRancherClusterNodePoolsNodeOutputWithContext(ctx context.Context) RancherClusterNodePoolsNodeOutput {
	return o
}

// The server identifier.
func (o RancherClusterNodePoolsNodeOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterNodePoolsNode) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

type RancherClusterNodePoolsNodeArrayOutput struct{ *pulumi.OutputState }

func (RancherClusterNodePoolsNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RancherClusterNodePoolsNode)(nil)).Elem()
}

func (o RancherClusterNodePoolsNodeArrayOutput) ToRancherClusterNodePoolsNodeArrayOutput() RancherClusterNodePoolsNodeArrayOutput {
	return o
}

func (o RancherClusterNodePoolsNodeArrayOutput) ToRancherClusterNodePoolsNodeArrayOutputWithContext(ctx context.Context) RancherClusterNodePoolsNodeArrayOutput {
	return o
}

func (o RancherClusterNodePoolsNodeArrayOutput) Index(i pulumi.IntInput) RancherClusterNodePoolsNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RancherClusterNodePoolsNode {
		return vs[0].([]RancherClusterNodePoolsNode)[vs[1].(int)]
	}).(RancherClusterNodePoolsNodeOutput)
}

type RancherClusterNodePoolsSshConfig struct {
	// Define whether public keys marked as default should be installed on this node. Default value is true.
	InstallDefaultKeys *bool `pulumi:"installDefaultKeys"`
	// List of public SSH key identifiers.
	KeyIds []string `pulumi:"keyIds"`
	// List of public SSH keys.
	Keys []string `pulumi:"keys"`
}

// RancherClusterNodePoolsSshConfigInput is an input type that accepts RancherClusterNodePoolsSshConfigArgs and RancherClusterNodePoolsSshConfigOutput values.
// You can construct a concrete instance of `RancherClusterNodePoolsSshConfigInput` via:
//
//	RancherClusterNodePoolsSshConfigArgs{...}
type RancherClusterNodePoolsSshConfigInput interface {
	pulumi.Input

	ToRancherClusterNodePoolsSshConfigOutput() RancherClusterNodePoolsSshConfigOutput
	ToRancherClusterNodePoolsSshConfigOutputWithContext(context.Context) RancherClusterNodePoolsSshConfigOutput
}

type RancherClusterNodePoolsSshConfigArgs struct {
	// Define whether public keys marked as default should be installed on this node. Default value is true.
	InstallDefaultKeys pulumi.BoolPtrInput `pulumi:"installDefaultKeys"`
	// List of public SSH key identifiers.
	KeyIds pulumi.StringArrayInput `pulumi:"keyIds"`
	// List of public SSH keys.
	Keys pulumi.StringArrayInput `pulumi:"keys"`
}

func (RancherClusterNodePoolsSshConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterNodePoolsSshConfig)(nil)).Elem()
}

func (i RancherClusterNodePoolsSshConfigArgs) ToRancherClusterNodePoolsSshConfigOutput() RancherClusterNodePoolsSshConfigOutput {
	return i.ToRancherClusterNodePoolsSshConfigOutputWithContext(context.Background())
}

func (i RancherClusterNodePoolsSshConfigArgs) ToRancherClusterNodePoolsSshConfigOutputWithContext(ctx context.Context) RancherClusterNodePoolsSshConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsSshConfigOutput)
}

func (i RancherClusterNodePoolsSshConfigArgs) ToRancherClusterNodePoolsSshConfigPtrOutput() RancherClusterNodePoolsSshConfigPtrOutput {
	return i.ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(context.Background())
}

func (i RancherClusterNodePoolsSshConfigArgs) ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsSshConfigOutput).ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(ctx)
}

// RancherClusterNodePoolsSshConfigPtrInput is an input type that accepts RancherClusterNodePoolsSshConfigArgs, RancherClusterNodePoolsSshConfigPtr and RancherClusterNodePoolsSshConfigPtrOutput values.
// You can construct a concrete instance of `RancherClusterNodePoolsSshConfigPtrInput` via:
//
//	        RancherClusterNodePoolsSshConfigArgs{...}
//
//	or:
//
//	        nil
type RancherClusterNodePoolsSshConfigPtrInput interface {
	pulumi.Input

	ToRancherClusterNodePoolsSshConfigPtrOutput() RancherClusterNodePoolsSshConfigPtrOutput
	ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(context.Context) RancherClusterNodePoolsSshConfigPtrOutput
}

type rancherClusterNodePoolsSshConfigPtrType RancherClusterNodePoolsSshConfigArgs

func RancherClusterNodePoolsSshConfigPtr(v *RancherClusterNodePoolsSshConfigArgs) RancherClusterNodePoolsSshConfigPtrInput {
	return (*rancherClusterNodePoolsSshConfigPtrType)(v)
}

func (*rancherClusterNodePoolsSshConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterNodePoolsSshConfig)(nil)).Elem()
}

func (i *rancherClusterNodePoolsSshConfigPtrType) ToRancherClusterNodePoolsSshConfigPtrOutput() RancherClusterNodePoolsSshConfigPtrOutput {
	return i.ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(context.Background())
}

func (i *rancherClusterNodePoolsSshConfigPtrType) ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsSshConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterNodePoolsSshConfigPtrOutput)
}

type RancherClusterNodePoolsSshConfigOutput struct{ *pulumi.OutputState }

func (RancherClusterNodePoolsSshConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterNodePoolsSshConfig)(nil)).Elem()
}

func (o RancherClusterNodePoolsSshConfigOutput) ToRancherClusterNodePoolsSshConfigOutput() RancherClusterNodePoolsSshConfigOutput {
	return o
}

func (o RancherClusterNodePoolsSshConfigOutput) ToRancherClusterNodePoolsSshConfigOutputWithContext(ctx context.Context) RancherClusterNodePoolsSshConfigOutput {
	return o
}

func (o RancherClusterNodePoolsSshConfigOutput) ToRancherClusterNodePoolsSshConfigPtrOutput() RancherClusterNodePoolsSshConfigPtrOutput {
	return o.ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(context.Background())
}

func (o RancherClusterNodePoolsSshConfigOutput) ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsSshConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RancherClusterNodePoolsSshConfig) *RancherClusterNodePoolsSshConfig {
		return &v
	}).(RancherClusterNodePoolsSshConfigPtrOutput)
}

// Define whether public keys marked as default should be installed on this node. Default value is true.
func (o RancherClusterNodePoolsSshConfigOutput) InstallDefaultKeys() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RancherClusterNodePoolsSshConfig) *bool { return v.InstallDefaultKeys }).(pulumi.BoolPtrOutput)
}

// List of public SSH key identifiers.
func (o RancherClusterNodePoolsSshConfigOutput) KeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RancherClusterNodePoolsSshConfig) []string { return v.KeyIds }).(pulumi.StringArrayOutput)
}

// List of public SSH keys.
func (o RancherClusterNodePoolsSshConfigOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RancherClusterNodePoolsSshConfig) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type RancherClusterNodePoolsSshConfigPtrOutput struct{ *pulumi.OutputState }

func (RancherClusterNodePoolsSshConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterNodePoolsSshConfig)(nil)).Elem()
}

func (o RancherClusterNodePoolsSshConfigPtrOutput) ToRancherClusterNodePoolsSshConfigPtrOutput() RancherClusterNodePoolsSshConfigPtrOutput {
	return o
}

func (o RancherClusterNodePoolsSshConfigPtrOutput) ToRancherClusterNodePoolsSshConfigPtrOutputWithContext(ctx context.Context) RancherClusterNodePoolsSshConfigPtrOutput {
	return o
}

func (o RancherClusterNodePoolsSshConfigPtrOutput) Elem() RancherClusterNodePoolsSshConfigOutput {
	return o.ApplyT(func(v *RancherClusterNodePoolsSshConfig) RancherClusterNodePoolsSshConfig {
		if v != nil {
			return *v
		}
		var ret RancherClusterNodePoolsSshConfig
		return ret
	}).(RancherClusterNodePoolsSshConfigOutput)
}

// Define whether public keys marked as default should be installed on this node. Default value is true.
func (o RancherClusterNodePoolsSshConfigPtrOutput) InstallDefaultKeys() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RancherClusterNodePoolsSshConfig) *bool {
		if v == nil {
			return nil
		}
		return v.InstallDefaultKeys
	}).(pulumi.BoolPtrOutput)
}

// List of public SSH key identifiers.
func (o RancherClusterNodePoolsSshConfigPtrOutput) KeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RancherClusterNodePoolsSshConfig) []string {
		if v == nil {
			return nil
		}
		return v.KeyIds
	}).(pulumi.StringArrayOutput)
}

// List of public SSH keys.
func (o RancherClusterNodePoolsSshConfigPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RancherClusterNodePoolsSshConfig) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

type RancherClusterWorkloadConfiguration struct {
	// Workload cluster location. Cannot be changed once the cluster is created. For a full list of allowed locations visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
	Location string `pulumi:"location"`
	// The name of the workload cluster. This field is autogenerated if not provided.
	Name *string `pulumi:"name"`
	// Number of configured servers. Currently only server counts of 1 and 3 are possible. Default value is 1.
	ServerCount *int `pulumi:"serverCount"`
	// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
	ServerType string `pulumi:"serverType"`
}

// RancherClusterWorkloadConfigurationInput is an input type that accepts RancherClusterWorkloadConfigurationArgs and RancherClusterWorkloadConfigurationOutput values.
// You can construct a concrete instance of `RancherClusterWorkloadConfigurationInput` via:
//
//	RancherClusterWorkloadConfigurationArgs{...}
type RancherClusterWorkloadConfigurationInput interface {
	pulumi.Input

	ToRancherClusterWorkloadConfigurationOutput() RancherClusterWorkloadConfigurationOutput
	ToRancherClusterWorkloadConfigurationOutputWithContext(context.Context) RancherClusterWorkloadConfigurationOutput
}

type RancherClusterWorkloadConfigurationArgs struct {
	// Workload cluster location. Cannot be changed once the cluster is created. For a full list of allowed locations visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the workload cluster. This field is autogenerated if not provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Number of configured servers. Currently only server counts of 1 and 3 are possible. Default value is 1.
	ServerCount pulumi.IntPtrInput `pulumi:"serverCount"`
	// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
	ServerType pulumi.StringInput `pulumi:"serverType"`
}

func (RancherClusterWorkloadConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterWorkloadConfiguration)(nil)).Elem()
}

func (i RancherClusterWorkloadConfigurationArgs) ToRancherClusterWorkloadConfigurationOutput() RancherClusterWorkloadConfigurationOutput {
	return i.ToRancherClusterWorkloadConfigurationOutputWithContext(context.Background())
}

func (i RancherClusterWorkloadConfigurationArgs) ToRancherClusterWorkloadConfigurationOutputWithContext(ctx context.Context) RancherClusterWorkloadConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterWorkloadConfigurationOutput)
}

func (i RancherClusterWorkloadConfigurationArgs) ToRancherClusterWorkloadConfigurationPtrOutput() RancherClusterWorkloadConfigurationPtrOutput {
	return i.ToRancherClusterWorkloadConfigurationPtrOutputWithContext(context.Background())
}

func (i RancherClusterWorkloadConfigurationArgs) ToRancherClusterWorkloadConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterWorkloadConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterWorkloadConfigurationOutput).ToRancherClusterWorkloadConfigurationPtrOutputWithContext(ctx)
}

// RancherClusterWorkloadConfigurationPtrInput is an input type that accepts RancherClusterWorkloadConfigurationArgs, RancherClusterWorkloadConfigurationPtr and RancherClusterWorkloadConfigurationPtrOutput values.
// You can construct a concrete instance of `RancherClusterWorkloadConfigurationPtrInput` via:
//
//	        RancherClusterWorkloadConfigurationArgs{...}
//
//	or:
//
//	        nil
type RancherClusterWorkloadConfigurationPtrInput interface {
	pulumi.Input

	ToRancherClusterWorkloadConfigurationPtrOutput() RancherClusterWorkloadConfigurationPtrOutput
	ToRancherClusterWorkloadConfigurationPtrOutputWithContext(context.Context) RancherClusterWorkloadConfigurationPtrOutput
}

type rancherClusterWorkloadConfigurationPtrType RancherClusterWorkloadConfigurationArgs

func RancherClusterWorkloadConfigurationPtr(v *RancherClusterWorkloadConfigurationArgs) RancherClusterWorkloadConfigurationPtrInput {
	return (*rancherClusterWorkloadConfigurationPtrType)(v)
}

func (*rancherClusterWorkloadConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterWorkloadConfiguration)(nil)).Elem()
}

func (i *rancherClusterWorkloadConfigurationPtrType) ToRancherClusterWorkloadConfigurationPtrOutput() RancherClusterWorkloadConfigurationPtrOutput {
	return i.ToRancherClusterWorkloadConfigurationPtrOutputWithContext(context.Background())
}

func (i *rancherClusterWorkloadConfigurationPtrType) ToRancherClusterWorkloadConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterWorkloadConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RancherClusterWorkloadConfigurationPtrOutput)
}

type RancherClusterWorkloadConfigurationOutput struct{ *pulumi.OutputState }

func (RancherClusterWorkloadConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RancherClusterWorkloadConfiguration)(nil)).Elem()
}

func (o RancherClusterWorkloadConfigurationOutput) ToRancherClusterWorkloadConfigurationOutput() RancherClusterWorkloadConfigurationOutput {
	return o
}

func (o RancherClusterWorkloadConfigurationOutput) ToRancherClusterWorkloadConfigurationOutputWithContext(ctx context.Context) RancherClusterWorkloadConfigurationOutput {
	return o
}

func (o RancherClusterWorkloadConfigurationOutput) ToRancherClusterWorkloadConfigurationPtrOutput() RancherClusterWorkloadConfigurationPtrOutput {
	return o.ToRancherClusterWorkloadConfigurationPtrOutputWithContext(context.Background())
}

func (o RancherClusterWorkloadConfigurationOutput) ToRancherClusterWorkloadConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterWorkloadConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RancherClusterWorkloadConfiguration) *RancherClusterWorkloadConfiguration {
		return &v
	}).(RancherClusterWorkloadConfigurationPtrOutput)
}

// Workload cluster location. Cannot be changed once the cluster is created. For a full list of allowed locations visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
func (o RancherClusterWorkloadConfigurationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RancherClusterWorkloadConfiguration) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the workload cluster. This field is autogenerated if not provided.
func (o RancherClusterWorkloadConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RancherClusterWorkloadConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Number of configured servers. Currently only server counts of 1 and 3 are possible. Default value is 1.
func (o RancherClusterWorkloadConfigurationOutput) ServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RancherClusterWorkloadConfiguration) *int { return v.ServerCount }).(pulumi.IntPtrOutput)
}

// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
func (o RancherClusterWorkloadConfigurationOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v RancherClusterWorkloadConfiguration) string { return v.ServerType }).(pulumi.StringOutput)
}

type RancherClusterWorkloadConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RancherClusterWorkloadConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RancherClusterWorkloadConfiguration)(nil)).Elem()
}

func (o RancherClusterWorkloadConfigurationPtrOutput) ToRancherClusterWorkloadConfigurationPtrOutput() RancherClusterWorkloadConfigurationPtrOutput {
	return o
}

func (o RancherClusterWorkloadConfigurationPtrOutput) ToRancherClusterWorkloadConfigurationPtrOutputWithContext(ctx context.Context) RancherClusterWorkloadConfigurationPtrOutput {
	return o
}

func (o RancherClusterWorkloadConfigurationPtrOutput) Elem() RancherClusterWorkloadConfigurationOutput {
	return o.ApplyT(func(v *RancherClusterWorkloadConfiguration) RancherClusterWorkloadConfiguration {
		if v != nil {
			return *v
		}
		var ret RancherClusterWorkloadConfiguration
		return ret
	}).(RancherClusterWorkloadConfigurationOutput)
}

// Workload cluster location. Cannot be changed once the cluster is created. For a full list of allowed locations visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
func (o RancherClusterWorkloadConfigurationPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterWorkloadConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// The name of the workload cluster. This field is autogenerated if not provided.
func (o RancherClusterWorkloadConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterWorkloadConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Number of configured servers. Currently only server counts of 1 and 3 are possible. Default value is 1.
func (o RancherClusterWorkloadConfigurationPtrOutput) ServerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RancherClusterWorkloadConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ServerCount
	}).(pulumi.IntPtrOutput)
}

// Node server type. Cannot be changed once the cluster is created. Default value is "s0.d1.small". For a full list of allowed values visit [API docs](https://developers.phoenixnap.com/docs/rancher/1)
func (o RancherClusterWorkloadConfigurationPtrOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RancherClusterWorkloadConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ServerType
	}).(pulumi.StringPtrOutput)
}

type ServerCloudInit struct {
	// User data for the [cloud-init](https://cloudinit.readthedocs.io/en/latest/) configuration in base64 encoding. NoCloud format is supported. Follow the [instructions](https://phoenixnap.com/kb/bmc-cloud-init) on how to provision a server using cloud-init. Only ubuntu/bionic and ubuntu/focal and ubuntu/jammy are supported.
	//
	// The `netrisSoftgate` block has three fields:
	UserData *string `pulumi:"userData"`
}

// ServerCloudInitInput is an input type that accepts ServerCloudInitArgs and ServerCloudInitOutput values.
// You can construct a concrete instance of `ServerCloudInitInput` via:
//
//	ServerCloudInitArgs{...}
type ServerCloudInitInput interface {
	pulumi.Input

	ToServerCloudInitOutput() ServerCloudInitOutput
	ToServerCloudInitOutputWithContext(context.Context) ServerCloudInitOutput
}

type ServerCloudInitArgs struct {
	// User data for the [cloud-init](https://cloudinit.readthedocs.io/en/latest/) configuration in base64 encoding. NoCloud format is supported. Follow the [instructions](https://phoenixnap.com/kb/bmc-cloud-init) on how to provision a server using cloud-init. Only ubuntu/bionic and ubuntu/focal and ubuntu/jammy are supported.
	//
	// The `netrisSoftgate` block has three fields:
	UserData pulumi.StringPtrInput `pulumi:"userData"`
}

func (ServerCloudInitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerCloudInit)(nil)).Elem()
}

func (i ServerCloudInitArgs) ToServerCloudInitOutput() ServerCloudInitOutput {
	return i.ToServerCloudInitOutputWithContext(context.Background())
}

func (i ServerCloudInitArgs) ToServerCloudInitOutputWithContext(ctx context.Context) ServerCloudInitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerCloudInitOutput)
}

func (i ServerCloudInitArgs) ToServerCloudInitPtrOutput() ServerCloudInitPtrOutput {
	return i.ToServerCloudInitPtrOutputWithContext(context.Background())
}

func (i ServerCloudInitArgs) ToServerCloudInitPtrOutputWithContext(ctx context.Context) ServerCloudInitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerCloudInitOutput).ToServerCloudInitPtrOutputWithContext(ctx)
}

// ServerCloudInitPtrInput is an input type that accepts ServerCloudInitArgs, ServerCloudInitPtr and ServerCloudInitPtrOutput values.
// You can construct a concrete instance of `ServerCloudInitPtrInput` via:
//
//	        ServerCloudInitArgs{...}
//
//	or:
//
//	        nil
type ServerCloudInitPtrInput interface {
	pulumi.Input

	ToServerCloudInitPtrOutput() ServerCloudInitPtrOutput
	ToServerCloudInitPtrOutputWithContext(context.Context) ServerCloudInitPtrOutput
}

type serverCloudInitPtrType ServerCloudInitArgs

func ServerCloudInitPtr(v *ServerCloudInitArgs) ServerCloudInitPtrInput {
	return (*serverCloudInitPtrType)(v)
}

func (*serverCloudInitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerCloudInit)(nil)).Elem()
}

func (i *serverCloudInitPtrType) ToServerCloudInitPtrOutput() ServerCloudInitPtrOutput {
	return i.ToServerCloudInitPtrOutputWithContext(context.Background())
}

func (i *serverCloudInitPtrType) ToServerCloudInitPtrOutputWithContext(ctx context.Context) ServerCloudInitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerCloudInitPtrOutput)
}

type ServerCloudInitOutput struct{ *pulumi.OutputState }

func (ServerCloudInitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerCloudInit)(nil)).Elem()
}

func (o ServerCloudInitOutput) ToServerCloudInitOutput() ServerCloudInitOutput {
	return o
}

func (o ServerCloudInitOutput) ToServerCloudInitOutputWithContext(ctx context.Context) ServerCloudInitOutput {
	return o
}

func (o ServerCloudInitOutput) ToServerCloudInitPtrOutput() ServerCloudInitPtrOutput {
	return o.ToServerCloudInitPtrOutputWithContext(context.Background())
}

func (o ServerCloudInitOutput) ToServerCloudInitPtrOutputWithContext(ctx context.Context) ServerCloudInitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerCloudInit) *ServerCloudInit {
		return &v
	}).(ServerCloudInitPtrOutput)
}

// User data for the [cloud-init](https://cloudinit.readthedocs.io/en/latest/) configuration in base64 encoding. NoCloud format is supported. Follow the [instructions](https://phoenixnap.com/kb/bmc-cloud-init) on how to provision a server using cloud-init. Only ubuntu/bionic and ubuntu/focal and ubuntu/jammy are supported.
//
// The `netrisSoftgate` block has three fields:
func (o ServerCloudInitOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCloudInit) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

type ServerCloudInitPtrOutput struct{ *pulumi.OutputState }

func (ServerCloudInitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerCloudInit)(nil)).Elem()
}

func (o ServerCloudInitPtrOutput) ToServerCloudInitPtrOutput() ServerCloudInitPtrOutput {
	return o
}

func (o ServerCloudInitPtrOutput) ToServerCloudInitPtrOutputWithContext(ctx context.Context) ServerCloudInitPtrOutput {
	return o
}

func (o ServerCloudInitPtrOutput) Elem() ServerCloudInitOutput {
	return o.ApplyT(func(v *ServerCloudInit) ServerCloudInit {
		if v != nil {
			return *v
		}
		var ret ServerCloudInit
		return ret
	}).(ServerCloudInitOutput)
}

// User data for the [cloud-init](https://cloudinit.readthedocs.io/en/latest/) configuration in base64 encoding. NoCloud format is supported. Follow the [instructions](https://phoenixnap.com/kb/bmc-cloud-init) on how to provision a server using cloud-init. Only ubuntu/bionic and ubuntu/focal and ubuntu/jammy are supported.
//
// The `netrisSoftgate` block has three fields:
func (o ServerCloudInitPtrOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCloudInit) *string {
		if v == nil {
			return nil
		}
		return v.UserData
	}).(pulumi.StringPtrOutput)
}

type ServerNetrisController struct {
	// Host OS on which the Netris Softgate is installed.
	HostOs *string `pulumi:"hostOs"`
	// Auto-generated password set for user 'netris' in the web console.
	NetrisUserPassword *string `pulumi:"netrisUserPassword"`
	// The URL for the Netris Controller web console.
	NetrisWebConsoleUrl *string `pulumi:"netrisWebConsoleUrl"`
}

// ServerNetrisControllerInput is an input type that accepts ServerNetrisControllerArgs and ServerNetrisControllerOutput values.
// You can construct a concrete instance of `ServerNetrisControllerInput` via:
//
//	ServerNetrisControllerArgs{...}
type ServerNetrisControllerInput interface {
	pulumi.Input

	ToServerNetrisControllerOutput() ServerNetrisControllerOutput
	ToServerNetrisControllerOutputWithContext(context.Context) ServerNetrisControllerOutput
}

type ServerNetrisControllerArgs struct {
	// Host OS on which the Netris Softgate is installed.
	HostOs pulumi.StringPtrInput `pulumi:"hostOs"`
	// Auto-generated password set for user 'netris' in the web console.
	NetrisUserPassword pulumi.StringPtrInput `pulumi:"netrisUserPassword"`
	// The URL for the Netris Controller web console.
	NetrisWebConsoleUrl pulumi.StringPtrInput `pulumi:"netrisWebConsoleUrl"`
}

func (ServerNetrisControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetrisController)(nil)).Elem()
}

func (i ServerNetrisControllerArgs) ToServerNetrisControllerOutput() ServerNetrisControllerOutput {
	return i.ToServerNetrisControllerOutputWithContext(context.Background())
}

func (i ServerNetrisControllerArgs) ToServerNetrisControllerOutputWithContext(ctx context.Context) ServerNetrisControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetrisControllerOutput)
}

// ServerNetrisControllerArrayInput is an input type that accepts ServerNetrisControllerArray and ServerNetrisControllerArrayOutput values.
// You can construct a concrete instance of `ServerNetrisControllerArrayInput` via:
//
//	ServerNetrisControllerArray{ ServerNetrisControllerArgs{...} }
type ServerNetrisControllerArrayInput interface {
	pulumi.Input

	ToServerNetrisControllerArrayOutput() ServerNetrisControllerArrayOutput
	ToServerNetrisControllerArrayOutputWithContext(context.Context) ServerNetrisControllerArrayOutput
}

type ServerNetrisControllerArray []ServerNetrisControllerInput

func (ServerNetrisControllerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetrisController)(nil)).Elem()
}

func (i ServerNetrisControllerArray) ToServerNetrisControllerArrayOutput() ServerNetrisControllerArrayOutput {
	return i.ToServerNetrisControllerArrayOutputWithContext(context.Background())
}

func (i ServerNetrisControllerArray) ToServerNetrisControllerArrayOutputWithContext(ctx context.Context) ServerNetrisControllerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetrisControllerArrayOutput)
}

type ServerNetrisControllerOutput struct{ *pulumi.OutputState }

func (ServerNetrisControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetrisController)(nil)).Elem()
}

func (o ServerNetrisControllerOutput) ToServerNetrisControllerOutput() ServerNetrisControllerOutput {
	return o
}

func (o ServerNetrisControllerOutput) ToServerNetrisControllerOutputWithContext(ctx context.Context) ServerNetrisControllerOutput {
	return o
}

// Host OS on which the Netris Softgate is installed.
func (o ServerNetrisControllerOutput) HostOs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetrisController) *string { return v.HostOs }).(pulumi.StringPtrOutput)
}

// Auto-generated password set for user 'netris' in the web console.
func (o ServerNetrisControllerOutput) NetrisUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetrisController) *string { return v.NetrisUserPassword }).(pulumi.StringPtrOutput)
}

// The URL for the Netris Controller web console.
func (o ServerNetrisControllerOutput) NetrisWebConsoleUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetrisController) *string { return v.NetrisWebConsoleUrl }).(pulumi.StringPtrOutput)
}

type ServerNetrisControllerArrayOutput struct{ *pulumi.OutputState }

func (ServerNetrisControllerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetrisController)(nil)).Elem()
}

func (o ServerNetrisControllerArrayOutput) ToServerNetrisControllerArrayOutput() ServerNetrisControllerArrayOutput {
	return o
}

func (o ServerNetrisControllerArrayOutput) ToServerNetrisControllerArrayOutputWithContext(ctx context.Context) ServerNetrisControllerArrayOutput {
	return o
}

func (o ServerNetrisControllerArrayOutput) Index(i pulumi.IntInput) ServerNetrisControllerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNetrisController {
		return vs[0].([]ServerNetrisController)[vs[1].(int)]
	}).(ServerNetrisControllerOutput)
}

type ServerNetrisSoftgate struct {
	// IP address or hostname through which to reach the Netris Controller.
	ControllerAddress *string `pulumi:"controllerAddress"`
	// The authentication key of the Netris Controller to connect to. Required for the softgate agent to be able to interact with the Netris Controller.
	//
	// The `tags` block has field `tagAssignment`.
	// The `tagAssignment` block has 2 fields:
	ControllerAuthKey *string `pulumi:"controllerAuthKey"`
	// The version of the Netris Controller to connect to.
	ControllerVersion *string `pulumi:"controllerVersion"`
	// Host OS on which the Netris Softgate is installed.
	HostOs *string `pulumi:"hostOs"`
}

// ServerNetrisSoftgateInput is an input type that accepts ServerNetrisSoftgateArgs and ServerNetrisSoftgateOutput values.
// You can construct a concrete instance of `ServerNetrisSoftgateInput` via:
//
//	ServerNetrisSoftgateArgs{...}
type ServerNetrisSoftgateInput interface {
	pulumi.Input

	ToServerNetrisSoftgateOutput() ServerNetrisSoftgateOutput
	ToServerNetrisSoftgateOutputWithContext(context.Context) ServerNetrisSoftgateOutput
}

type ServerNetrisSoftgateArgs struct {
	// IP address or hostname through which to reach the Netris Controller.
	ControllerAddress pulumi.StringPtrInput `pulumi:"controllerAddress"`
	// The authentication key of the Netris Controller to connect to. Required for the softgate agent to be able to interact with the Netris Controller.
	//
	// The `tags` block has field `tagAssignment`.
	// The `tagAssignment` block has 2 fields:
	ControllerAuthKey pulumi.StringPtrInput `pulumi:"controllerAuthKey"`
	// The version of the Netris Controller to connect to.
	ControllerVersion pulumi.StringPtrInput `pulumi:"controllerVersion"`
	// Host OS on which the Netris Softgate is installed.
	HostOs pulumi.StringPtrInput `pulumi:"hostOs"`
}

func (ServerNetrisSoftgateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetrisSoftgate)(nil)).Elem()
}

func (i ServerNetrisSoftgateArgs) ToServerNetrisSoftgateOutput() ServerNetrisSoftgateOutput {
	return i.ToServerNetrisSoftgateOutputWithContext(context.Background())
}

func (i ServerNetrisSoftgateArgs) ToServerNetrisSoftgateOutputWithContext(ctx context.Context) ServerNetrisSoftgateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetrisSoftgateOutput)
}

func (i ServerNetrisSoftgateArgs) ToServerNetrisSoftgatePtrOutput() ServerNetrisSoftgatePtrOutput {
	return i.ToServerNetrisSoftgatePtrOutputWithContext(context.Background())
}

func (i ServerNetrisSoftgateArgs) ToServerNetrisSoftgatePtrOutputWithContext(ctx context.Context) ServerNetrisSoftgatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetrisSoftgateOutput).ToServerNetrisSoftgatePtrOutputWithContext(ctx)
}

// ServerNetrisSoftgatePtrInput is an input type that accepts ServerNetrisSoftgateArgs, ServerNetrisSoftgatePtr and ServerNetrisSoftgatePtrOutput values.
// You can construct a concrete instance of `ServerNetrisSoftgatePtrInput` via:
//
//	        ServerNetrisSoftgateArgs{...}
//
//	or:
//
//	        nil
type ServerNetrisSoftgatePtrInput interface {
	pulumi.Input

	ToServerNetrisSoftgatePtrOutput() ServerNetrisSoftgatePtrOutput
	ToServerNetrisSoftgatePtrOutputWithContext(context.Context) ServerNetrisSoftgatePtrOutput
}

type serverNetrisSoftgatePtrType ServerNetrisSoftgateArgs

func ServerNetrisSoftgatePtr(v *ServerNetrisSoftgateArgs) ServerNetrisSoftgatePtrInput {
	return (*serverNetrisSoftgatePtrType)(v)
}

func (*serverNetrisSoftgatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetrisSoftgate)(nil)).Elem()
}

func (i *serverNetrisSoftgatePtrType) ToServerNetrisSoftgatePtrOutput() ServerNetrisSoftgatePtrOutput {
	return i.ToServerNetrisSoftgatePtrOutputWithContext(context.Background())
}

func (i *serverNetrisSoftgatePtrType) ToServerNetrisSoftgatePtrOutputWithContext(ctx context.Context) ServerNetrisSoftgatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetrisSoftgatePtrOutput)
}

type ServerNetrisSoftgateOutput struct{ *pulumi.OutputState }

func (ServerNetrisSoftgateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetrisSoftgate)(nil)).Elem()
}

func (o ServerNetrisSoftgateOutput) ToServerNetrisSoftgateOutput() ServerNetrisSoftgateOutput {
	return o
}

func (o ServerNetrisSoftgateOutput) ToServerNetrisSoftgateOutputWithContext(ctx context.Context) ServerNetrisSoftgateOutput {
	return o
}

func (o ServerNetrisSoftgateOutput) ToServerNetrisSoftgatePtrOutput() ServerNetrisSoftgatePtrOutput {
	return o.ToServerNetrisSoftgatePtrOutputWithContext(context.Background())
}

func (o ServerNetrisSoftgateOutput) ToServerNetrisSoftgatePtrOutputWithContext(ctx context.Context) ServerNetrisSoftgatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetrisSoftgate) *ServerNetrisSoftgate {
		return &v
	}).(ServerNetrisSoftgatePtrOutput)
}

// IP address or hostname through which to reach the Netris Controller.
func (o ServerNetrisSoftgateOutput) ControllerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetrisSoftgate) *string { return v.ControllerAddress }).(pulumi.StringPtrOutput)
}

// The authentication key of the Netris Controller to connect to. Required for the softgate agent to be able to interact with the Netris Controller.
//
// The `tags` block has field `tagAssignment`.
// The `tagAssignment` block has 2 fields:
func (o ServerNetrisSoftgateOutput) ControllerAuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetrisSoftgate) *string { return v.ControllerAuthKey }).(pulumi.StringPtrOutput)
}

// The version of the Netris Controller to connect to.
func (o ServerNetrisSoftgateOutput) ControllerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetrisSoftgate) *string { return v.ControllerVersion }).(pulumi.StringPtrOutput)
}

// Host OS on which the Netris Softgate is installed.
func (o ServerNetrisSoftgateOutput) HostOs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetrisSoftgate) *string { return v.HostOs }).(pulumi.StringPtrOutput)
}

type ServerNetrisSoftgatePtrOutput struct{ *pulumi.OutputState }

func (ServerNetrisSoftgatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetrisSoftgate)(nil)).Elem()
}

func (o ServerNetrisSoftgatePtrOutput) ToServerNetrisSoftgatePtrOutput() ServerNetrisSoftgatePtrOutput {
	return o
}

func (o ServerNetrisSoftgatePtrOutput) ToServerNetrisSoftgatePtrOutputWithContext(ctx context.Context) ServerNetrisSoftgatePtrOutput {
	return o
}

func (o ServerNetrisSoftgatePtrOutput) Elem() ServerNetrisSoftgateOutput {
	return o.ApplyT(func(v *ServerNetrisSoftgate) ServerNetrisSoftgate {
		if v != nil {
			return *v
		}
		var ret ServerNetrisSoftgate
		return ret
	}).(ServerNetrisSoftgateOutput)
}

// IP address or hostname through which to reach the Netris Controller.
func (o ServerNetrisSoftgatePtrOutput) ControllerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetrisSoftgate) *string {
		if v == nil {
			return nil
		}
		return v.ControllerAddress
	}).(pulumi.StringPtrOutput)
}

// The authentication key of the Netris Controller to connect to. Required for the softgate agent to be able to interact with the Netris Controller.
//
// The `tags` block has field `tagAssignment`.
// The `tagAssignment` block has 2 fields:
func (o ServerNetrisSoftgatePtrOutput) ControllerAuthKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetrisSoftgate) *string {
		if v == nil {
			return nil
		}
		return v.ControllerAuthKey
	}).(pulumi.StringPtrOutput)
}

// The version of the Netris Controller to connect to.
func (o ServerNetrisSoftgatePtrOutput) ControllerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetrisSoftgate) *string {
		if v == nil {
			return nil
		}
		return v.ControllerVersion
	}).(pulumi.StringPtrOutput)
}

// Host OS on which the Netris Softgate is installed.
func (o ServerNetrisSoftgatePtrOutput) HostOs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetrisSoftgate) *string {
		if v == nil {
			return nil
		}
		return v.HostOs
	}).(pulumi.StringPtrOutput)
}

type ServerNetworkConfiguration struct {
	// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
	GatewayAddress              *string                                                `pulumi:"gatewayAddress"`
	IpBlocksConfiguration       *ServerNetworkConfigurationIpBlocksConfiguration       `pulumi:"ipBlocksConfiguration"`
	PrivateNetworkConfiguration *ServerNetworkConfigurationPrivateNetworkConfiguration `pulumi:"privateNetworkConfiguration"`
	PublicNetworkConfiguration  *ServerNetworkConfigurationPublicNetworkConfiguration  `pulumi:"publicNetworkConfiguration"`
}

// ServerNetworkConfigurationInput is an input type that accepts ServerNetworkConfigurationArgs and ServerNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationInput` via:
//
//	ServerNetworkConfigurationArgs{...}
type ServerNetworkConfigurationInput interface {
	pulumi.Input

	ToServerNetworkConfigurationOutput() ServerNetworkConfigurationOutput
	ToServerNetworkConfigurationOutputWithContext(context.Context) ServerNetworkConfigurationOutput
}

type ServerNetworkConfigurationArgs struct {
	// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
	GatewayAddress              pulumi.StringPtrInput                                         `pulumi:"gatewayAddress"`
	IpBlocksConfiguration       ServerNetworkConfigurationIpBlocksConfigurationPtrInput       `pulumi:"ipBlocksConfiguration"`
	PrivateNetworkConfiguration ServerNetworkConfigurationPrivateNetworkConfigurationPtrInput `pulumi:"privateNetworkConfiguration"`
	PublicNetworkConfiguration  ServerNetworkConfigurationPublicNetworkConfigurationPtrInput  `pulumi:"publicNetworkConfiguration"`
}

func (ServerNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfiguration)(nil)).Elem()
}

func (i ServerNetworkConfigurationArgs) ToServerNetworkConfigurationOutput() ServerNetworkConfigurationOutput {
	return i.ToServerNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationArgs) ToServerNetworkConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationOutput)
}

func (i ServerNetworkConfigurationArgs) ToServerNetworkConfigurationPtrOutput() ServerNetworkConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationArgs) ToServerNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationOutput).ToServerNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServerNetworkConfigurationPtrInput is an input type that accepts ServerNetworkConfigurationArgs, ServerNetworkConfigurationPtr and ServerNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPtrInput` via:
//
//	        ServerNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServerNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPtrOutput() ServerNetworkConfigurationPtrOutput
	ToServerNetworkConfigurationPtrOutputWithContext(context.Context) ServerNetworkConfigurationPtrOutput
}

type serverNetworkConfigurationPtrType ServerNetworkConfigurationArgs

func ServerNetworkConfigurationPtr(v *ServerNetworkConfigurationArgs) ServerNetworkConfigurationPtrInput {
	return (*serverNetworkConfigurationPtrType)(v)
}

func (*serverNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfiguration)(nil)).Elem()
}

func (i *serverNetworkConfigurationPtrType) ToServerNetworkConfigurationPtrOutput() ServerNetworkConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serverNetworkConfigurationPtrType) ToServerNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPtrOutput)
}

type ServerNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationOutput) ToServerNetworkConfigurationOutput() ServerNetworkConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationOutput) ToServerNetworkConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationOutput) ToServerNetworkConfigurationPtrOutput() ServerNetworkConfigurationPtrOutput {
	return o.ToServerNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServerNetworkConfigurationOutput) ToServerNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetworkConfiguration) *ServerNetworkConfiguration {
		return &v
	}).(ServerNetworkConfigurationPtrOutput)
}

// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
func (o ServerNetworkConfigurationOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfiguration) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

func (o ServerNetworkConfigurationOutput) IpBlocksConfiguration() ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfiguration) *ServerNetworkConfigurationIpBlocksConfiguration {
		return v.IpBlocksConfiguration
	}).(ServerNetworkConfigurationIpBlocksConfigurationPtrOutput)
}

func (o ServerNetworkConfigurationOutput) PrivateNetworkConfiguration() ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfiguration) *ServerNetworkConfigurationPrivateNetworkConfiguration {
		return v.PrivateNetworkConfiguration
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput)
}

func (o ServerNetworkConfigurationOutput) PublicNetworkConfiguration() ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfiguration) *ServerNetworkConfigurationPublicNetworkConfiguration {
		return v.PublicNetworkConfiguration
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput)
}

type ServerNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationPtrOutput) ToServerNetworkConfigurationPtrOutput() ServerNetworkConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPtrOutput) ToServerNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPtrOutput) Elem() ServerNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServerNetworkConfiguration) ServerNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ServerNetworkConfiguration
		return ret
	}).(ServerNetworkConfigurationOutput)
}

// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
func (o ServerNetworkConfigurationPtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

func (o ServerNetworkConfigurationPtrOutput) IpBlocksConfiguration() ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfiguration) *ServerNetworkConfigurationIpBlocksConfiguration {
		if v == nil {
			return nil
		}
		return v.IpBlocksConfiguration
	}).(ServerNetworkConfigurationIpBlocksConfigurationPtrOutput)
}

func (o ServerNetworkConfigurationPtrOutput) PrivateNetworkConfiguration() ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfiguration) *ServerNetworkConfigurationPrivateNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.PrivateNetworkConfiguration
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput)
}

func (o ServerNetworkConfigurationPtrOutput) PublicNetworkConfiguration() ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfiguration) *ServerNetworkConfigurationPublicNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.PublicNetworkConfiguration
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput)
}

type ServerNetworkConfigurationIpBlocksConfiguration struct {
	// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
	ConfigurationType *string `pulumi:"configurationType"`
	// Used to specify the previously purchased IP blocks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configurationType. Must contain at most 1 item.
	//
	// The `ipBlocks` block has field `serverIpBlock`.
	// The `serverIpBlock` block has 2 fields:
	IpBlocks []ServerNetworkConfigurationIpBlocksConfigurationIpBlock `pulumi:"ipBlocks"`
}

// ServerNetworkConfigurationIpBlocksConfigurationInput is an input type that accepts ServerNetworkConfigurationIpBlocksConfigurationArgs and ServerNetworkConfigurationIpBlocksConfigurationOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationIpBlocksConfigurationInput` via:
//
//	ServerNetworkConfigurationIpBlocksConfigurationArgs{...}
type ServerNetworkConfigurationIpBlocksConfigurationInput interface {
	pulumi.Input

	ToServerNetworkConfigurationIpBlocksConfigurationOutput() ServerNetworkConfigurationIpBlocksConfigurationOutput
	ToServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(context.Context) ServerNetworkConfigurationIpBlocksConfigurationOutput
}

type ServerNetworkConfigurationIpBlocksConfigurationArgs struct {
	// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
	ConfigurationType pulumi.StringPtrInput `pulumi:"configurationType"`
	// Used to specify the previously purchased IP blocks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configurationType. Must contain at most 1 item.
	//
	// The `ipBlocks` block has field `serverIpBlock`.
	// The `serverIpBlock` block has 2 fields:
	IpBlocks ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput `pulumi:"ipBlocks"`
}

func (ServerNetworkConfigurationIpBlocksConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (i ServerNetworkConfigurationIpBlocksConfigurationArgs) ToServerNetworkConfigurationIpBlocksConfigurationOutput() ServerNetworkConfigurationIpBlocksConfigurationOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationIpBlocksConfigurationArgs) ToServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationOutput)
}

func (i ServerNetworkConfigurationIpBlocksConfigurationArgs) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationIpBlocksConfigurationArgs) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationOutput).ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(ctx)
}

// ServerNetworkConfigurationIpBlocksConfigurationPtrInput is an input type that accepts ServerNetworkConfigurationIpBlocksConfigurationArgs, ServerNetworkConfigurationIpBlocksConfigurationPtr and ServerNetworkConfigurationIpBlocksConfigurationPtrOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationIpBlocksConfigurationPtrInput` via:
//
//	        ServerNetworkConfigurationIpBlocksConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServerNetworkConfigurationIpBlocksConfigurationPtrInput interface {
	pulumi.Input

	ToServerNetworkConfigurationIpBlocksConfigurationPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationPtrOutput
	ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(context.Context) ServerNetworkConfigurationIpBlocksConfigurationPtrOutput
}

type serverNetworkConfigurationIpBlocksConfigurationPtrType ServerNetworkConfigurationIpBlocksConfigurationArgs

func ServerNetworkConfigurationIpBlocksConfigurationPtr(v *ServerNetworkConfigurationIpBlocksConfigurationArgs) ServerNetworkConfigurationIpBlocksConfigurationPtrInput {
	return (*serverNetworkConfigurationIpBlocksConfigurationPtrType)(v)
}

func (*serverNetworkConfigurationIpBlocksConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (i *serverNetworkConfigurationIpBlocksConfigurationPtrType) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(context.Background())
}

func (i *serverNetworkConfigurationIpBlocksConfigurationPtrType) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationPtrOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationIpBlocksConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationIpBlocksConfigurationOutput) ToServerNetworkConfigurationIpBlocksConfigurationOutput() ServerNetworkConfigurationIpBlocksConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationOutput) ToServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationOutput) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return o.ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(context.Background())
}

func (o ServerNetworkConfigurationIpBlocksConfigurationOutput) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetworkConfigurationIpBlocksConfiguration) *ServerNetworkConfigurationIpBlocksConfiguration {
		return &v
	}).(ServerNetworkConfigurationIpBlocksConfigurationPtrOutput)
}

// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
func (o ServerNetworkConfigurationIpBlocksConfigurationOutput) ConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationIpBlocksConfiguration) *string { return v.ConfigurationType }).(pulumi.StringPtrOutput)
}

// Used to specify the previously purchased IP blocks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configurationType. Must contain at most 1 item.
//
// The `ipBlocks` block has field `serverIpBlock`.
// The `serverIpBlock` block has 2 fields:
func (o ServerNetworkConfigurationIpBlocksConfigurationOutput) IpBlocks() ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationIpBlocksConfiguration) []ServerNetworkConfigurationIpBlocksConfigurationIpBlock {
		return v.IpBlocks
	}).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationIpBlocksConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationIpBlocksConfigurationPtrOutput) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationPtrOutput) ToServerNetworkConfigurationIpBlocksConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationPtrOutput) Elem() ServerNetworkConfigurationIpBlocksConfigurationOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationIpBlocksConfiguration) ServerNetworkConfigurationIpBlocksConfiguration {
		if v != nil {
			return *v
		}
		var ret ServerNetworkConfigurationIpBlocksConfiguration
		return ret
	}).(ServerNetworkConfigurationIpBlocksConfigurationOutput)
}

// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
func (o ServerNetworkConfigurationIpBlocksConfigurationPtrOutput) ConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationIpBlocksConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationType
	}).(pulumi.StringPtrOutput)
}

// Used to specify the previously purchased IP blocks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configurationType. Must contain at most 1 item.
//
// The `ipBlocks` block has field `serverIpBlock`.
// The `serverIpBlock` block has 2 fields:
func (o ServerNetworkConfigurationIpBlocksConfigurationPtrOutput) IpBlocks() ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationIpBlocksConfiguration) []ServerNetworkConfigurationIpBlocksConfigurationIpBlock {
		if v == nil {
			return nil
		}
		return v.IpBlocks
	}).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlock struct {
	ServerIpBlock *ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock `pulumi:"serverIpBlock"`
}

// ServerNetworkConfigurationIpBlocksConfigurationIpBlockInput is an input type that accepts ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs and ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationIpBlocksConfigurationIpBlockInput` via:
//
//	ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs{...}
type ServerNetworkConfigurationIpBlocksConfigurationIpBlockInput interface {
	pulumi.Input

	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput
	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs struct {
	ServerIpBlock ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrInput `pulumi:"serverIpBlock"`
}

func (ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput)
}

// ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput is an input type that accepts ServerNetworkConfigurationIpBlocksConfigurationIpBlockArray and ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput` via:
//
//	ServerNetworkConfigurationIpBlocksConfigurationIpBlockArray{ ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs{...} }
type ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput interface {
	pulumi.Input

	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput
	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockArray []ServerNetworkConfigurationIpBlocksConfigurationIpBlockInput

func (ServerNetworkConfigurationIpBlocksConfigurationIpBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockArray) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockArray) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) ServerIpBlock() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationIpBlocksConfigurationIpBlock) *ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock {
		return v.ServerIpBlock
	}).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) Index(i pulumi.IntInput) ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNetworkConfigurationIpBlocksConfigurationIpBlock {
		return vs[0].([]ServerNetworkConfigurationIpBlocksConfigurationIpBlock)[vs[1].(int)]
	}).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock struct {
	// The network identifier.
	Id string `pulumi:"id"`
	// The VLAN on which this IP block has been configured within the network switch.
	//
	// The `publicNetworkConfiguration` is the fourth field of the `networkConfiguration` block.
	// The `publicNetworkConfiguration` block has field `publicNetworks`:
	//
	// The `publicNetworks` block has field `serverPublicNetwork`.
	// The `serverPublicNetwork` block has 2 fields:
	VlanId *int `pulumi:"vlanId"`
}

// ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockInput is an input type that accepts ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs and ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockInput` via:
//
//	ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs{...}
type ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockInput interface {
	pulumi.Input

	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput
	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutputWithContext(context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs struct {
	// The network identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The VLAN on which this IP block has been configured within the network switch.
	//
	// The `publicNetworkConfiguration` is the fourth field of the `networkConfiguration` block.
	// The `publicNetworkConfiguration` block has field `publicNetworks`:
	//
	// The `publicNetworks` block has field `serverPublicNetwork`.
	// The `serverPublicNetwork` block has 2 fields:
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock)(nil)).Elem()
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput)
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput).ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(ctx)
}

// ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrInput is an input type that accepts ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs, ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtr and ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrInput` via:
//
//	        ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs{...}
//
//	or:
//
//	        nil
type ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrInput interface {
	pulumi.Input

	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput
	ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput
}

type serverNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrType ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs

func ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtr(v *ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrInput {
	return (*serverNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrType)(v)
}

func (*serverNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock)(nil)).Elem()
}

func (i *serverNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrType) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return i.ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(context.Background())
}

func (i *serverNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrType) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock)(nil)).Elem()
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return o.ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(context.Background())
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock) *ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock {
		return &v
	}).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput)
}

// The network identifier.
func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock) string { return v.Id }).(pulumi.StringOutput)
}

// The VLAN on which this IP block has been configured within the network switch.
//
// The `publicNetworkConfiguration` is the fourth field of the `networkConfiguration` block.
// The `publicNetworkConfiguration` block has field `publicNetworks`:
//
// The `publicNetworks` block has field `serverPublicNetwork`.
// The `serverPublicNetwork` block has 2 fields:
func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock)(nil)).Elem()
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput) ToServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput {
	return o
}

func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput) Elem() ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock) ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock {
		if v != nil {
			return *v
		}
		var ret ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock
		return ret
	}).(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput)
}

// The network identifier.
func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The VLAN on which this IP block has been configured within the network switch.
//
// The `publicNetworkConfiguration` is the fourth field of the `networkConfiguration` block.
// The `publicNetworkConfiguration` block has field `publicNetworks`:
//
// The `publicNetworks` block has field `serverPublicNetwork`.
// The `serverPublicNetwork` block has 2 fields:
func (o ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlock) *int {
		if v == nil {
			return nil
		}
		return v.VlanId
	}).(pulumi.IntPtrOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfiguration struct {
	// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
	ConfigurationType *string `pulumi:"configurationType"`
	// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
	GatewayAddress *string `pulumi:"gatewayAddress"`
	// The list of private networks this server is member of. When this field is part of request body, it'll be used to specify the private networks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configuration type.
	//
	// The `privateNetworks` block has field `serverPrivateNetwork`.
	// The `serverPrivateNetwork` block has 3 fields:
	PrivateNetworks []ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork `pulumi:"privateNetworks"`
}

// ServerNetworkConfigurationPrivateNetworkConfigurationInput is an input type that accepts ServerNetworkConfigurationPrivateNetworkConfigurationArgs and ServerNetworkConfigurationPrivateNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPrivateNetworkConfigurationInput` via:
//
//	ServerNetworkConfigurationPrivateNetworkConfigurationArgs{...}
type ServerNetworkConfigurationPrivateNetworkConfigurationInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPrivateNetworkConfigurationOutput() ServerNetworkConfigurationPrivateNetworkConfigurationOutput
	ToServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationOutput
}

type ServerNetworkConfigurationPrivateNetworkConfigurationArgs struct {
	// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
	ConfigurationType pulumi.StringPtrInput `pulumi:"configurationType"`
	// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
	GatewayAddress pulumi.StringPtrInput `pulumi:"gatewayAddress"`
	// The list of private networks this server is member of. When this field is part of request body, it'll be used to specify the private networks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configuration type.
	//
	// The `privateNetworks` block has field `serverPrivateNetwork`.
	// The `serverPrivateNetwork` block has 3 fields:
	PrivateNetworks ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput `pulumi:"privateNetworks"`
}

func (ServerNetworkConfigurationPrivateNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationOutput() ServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationOutput)
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationOutput).ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServerNetworkConfigurationPrivateNetworkConfigurationPtrInput is an input type that accepts ServerNetworkConfigurationPrivateNetworkConfigurationArgs, ServerNetworkConfigurationPrivateNetworkConfigurationPtr and ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPrivateNetworkConfigurationPtrInput` via:
//
//	        ServerNetworkConfigurationPrivateNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServerNetworkConfigurationPrivateNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput
	ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput
}

type serverNetworkConfigurationPrivateNetworkConfigurationPtrType ServerNetworkConfigurationPrivateNetworkConfigurationArgs

func ServerNetworkConfigurationPrivateNetworkConfigurationPtr(v *ServerNetworkConfigurationPrivateNetworkConfigurationArgs) ServerNetworkConfigurationPrivateNetworkConfigurationPtrInput {
	return (*serverNetworkConfigurationPrivateNetworkConfigurationPtrType)(v)
}

func (*serverNetworkConfigurationPrivateNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (i *serverNetworkConfigurationPrivateNetworkConfigurationPtrType) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serverNetworkConfigurationPrivateNetworkConfigurationPtrType) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPrivateNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationOutput() ServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return o.ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetworkConfigurationPrivateNetworkConfiguration) *ServerNetworkConfigurationPrivateNetworkConfiguration {
		return &v
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput)
}

// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
func (o ServerNetworkConfigurationPrivateNetworkConfigurationOutput) ConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfiguration) *string { return v.ConfigurationType }).(pulumi.StringPtrOutput)
}

// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
func (o ServerNetworkConfigurationPrivateNetworkConfigurationOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfiguration) *string { return v.GatewayAddress }).(pulumi.StringPtrOutput)
}

// The list of private networks this server is member of. When this field is part of request body, it'll be used to specify the private networks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configuration type.
//
// The `privateNetworks` block has field `serverPrivateNetwork`.
// The `serverPrivateNetwork` block has 3 fields:
func (o ServerNetworkConfigurationPrivateNetworkConfigurationOutput) PrivateNetworks() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfiguration) []ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork {
		return v.PrivateNetworks
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput) Elem() ServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfiguration) ServerNetworkConfigurationPrivateNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ServerNetworkConfigurationPrivateNetworkConfiguration
		return ret
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationOutput)
}

// Determines the approach for configuring IP blocks for the server being provisioned. If `PURCHASE_NEW` is selected, the smallest supported range, depending on the operating system, is allocated to the server. The following values are allowed: `PURCHASE_NEW`, `USER_DEFINED`, `NONE`. Default value is `PURCHASE_NEW`.
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput) ConfigurationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationType
	}).(pulumi.StringPtrOutput)
}

// The address of the gateway assigned / to assign to the server. When used as part of request body, it has to match one of the IP addresses used in the existing assigned private networks for the relevant location. Deprecated in favour of a common gateway address across all networks available under `networkConfiguration`.
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput) GatewayAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GatewayAddress
	}).(pulumi.StringPtrOutput)
}

// The list of private networks this server is member of. When this field is part of request body, it'll be used to specify the private networks to assign to this server upon provisioning. Used alongside the `USER_DEFINED` configuration type.
//
// The `privateNetworks` block has field `serverPrivateNetwork`.
// The `serverPrivateNetwork` block has 3 fields:
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput) PrivateNetworks() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfiguration) []ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork {
		if v == nil {
			return nil
		}
		return v.PrivateNetworks
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork struct {
	ServerPrivateNetwork *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork `pulumi:"serverPrivateNetwork"`
}

// ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput is an input type that accepts ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs and ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput` via:
//
//	ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{...}
type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput
	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs struct {
	ServerPrivateNetwork ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrInput `pulumi:"serverPrivateNetwork"`
}

func (ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput)
}

// ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput is an input type that accepts ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray and ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput` via:
//
//	ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray{ ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{...} }
type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput
	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray []ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput

func (ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) ServerPrivateNetwork() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork) *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork {
		return v.ServerPrivateNetwork
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) Index(i pulumi.IntInput) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork {
		return vs[0].([]ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)[vs[1].(int)]
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork struct {
	// Determines whether DHCP is enabled for this server. Should be false if ips is not an empty list. Not supported for proxmox OS. Default value is `false`.
	//
	// The `ipBlocksConfiguration` is the third field of the `networkConfiguration` block.
	// The `ipBlocksConfiguration` block has 2 fields:
	Dhcp *bool `pulumi:"dhcp"`
	// The network identifier.
	Id string `pulumi:"id"`
	// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
	//
	// The `storageConfiguration` block has field `rootPartition`.
	// The `rootPartition` block has two fields:
	Ips               []string `pulumi:"ips"`
	StatusDescription *string  `pulumi:"statusDescription"`
}

// ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkInput is an input type that accepts ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs and ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkInput` via:
//
//	ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs{...}
type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput
	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutputWithContext(context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs struct {
	// Determines whether DHCP is enabled for this server. Should be false if ips is not an empty list. Not supported for proxmox OS. Default value is `false`.
	//
	// The `ipBlocksConfiguration` is the third field of the `networkConfiguration` block.
	// The `ipBlocksConfiguration` block has 2 fields:
	Dhcp pulumi.BoolPtrInput `pulumi:"dhcp"`
	// The network identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
	//
	// The `storageConfiguration` block has field `rootPartition`.
	// The `rootPartition` block has two fields:
	Ips               pulumi.StringArrayInput `pulumi:"ips"`
	StatusDescription pulumi.StringPtrInput   `pulumi:"statusDescription"`
}

func (ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork)(nil)).Elem()
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput)
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput).ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(ctx)
}

// ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrInput is an input type that accepts ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs, ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtr and ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrInput` via:
//
//	        ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs{...}
//
//	or:
//
//	        nil
type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput
	ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput
}

type serverNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrType ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs

func ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtr(v *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrInput {
	return (*serverNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrType)(v)
}

func (*serverNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork)(nil)).Elem()
}

func (i *serverNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrType) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return i.ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(context.Background())
}

func (i *serverNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrType) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return o.ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(context.Background())
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork {
		return &v
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput)
}

// Determines whether DHCP is enabled for this server. Should be false if ips is not an empty list. Not supported for proxmox OS. Default value is `false`.
//
// The `ipBlocksConfiguration` is the third field of the `networkConfiguration` block.
// The `ipBlocksConfiguration` block has 2 fields:
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) *bool {
		return v.Dhcp
	}).(pulumi.BoolPtrOutput)
}

// The network identifier.
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
//
// The `storageConfiguration` block has field `rootPartition`.
// The `rootPartition` block has two fields:
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) []string {
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) *string {
		return v.StatusDescription
	}).(pulumi.StringPtrOutput)
}

type ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) ToServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) Elem() ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork {
		if v != nil {
			return *v
		}
		var ret ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork
		return ret
	}).(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput)
}

// Determines whether DHCP is enabled for this server. Should be false if ips is not an empty list. Not supported for proxmox OS. Default value is `false`.
//
// The `ipBlocksConfiguration` is the third field of the `networkConfiguration` block.
// The `ipBlocksConfiguration` block has 2 fields:
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) *bool {
		if v == nil {
			return nil
		}
		return v.Dhcp
	}).(pulumi.BoolPtrOutput)
}

// The network identifier.
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
//
// The `storageConfiguration` block has field `rootPartition`.
// The `rootPartition` block has two fields:
func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

func (o ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.StatusDescription
	}).(pulumi.StringPtrOutput)
}

type ServerNetworkConfigurationPublicNetworkConfiguration struct {
	PublicNetworks []ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork `pulumi:"publicNetworks"`
}

// ServerNetworkConfigurationPublicNetworkConfigurationInput is an input type that accepts ServerNetworkConfigurationPublicNetworkConfigurationArgs and ServerNetworkConfigurationPublicNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPublicNetworkConfigurationInput` via:
//
//	ServerNetworkConfigurationPublicNetworkConfigurationArgs{...}
type ServerNetworkConfigurationPublicNetworkConfigurationInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPublicNetworkConfigurationOutput() ServerNetworkConfigurationPublicNetworkConfigurationOutput
	ToServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(context.Context) ServerNetworkConfigurationPublicNetworkConfigurationOutput
}

type ServerNetworkConfigurationPublicNetworkConfigurationArgs struct {
	PublicNetworks ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput `pulumi:"publicNetworks"`
}

func (ServerNetworkConfigurationPublicNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationArgs) ToServerNetworkConfigurationPublicNetworkConfigurationOutput() ServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationArgs) ToServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationOutput)
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationOutput).ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServerNetworkConfigurationPublicNetworkConfigurationPtrInput is an input type that accepts ServerNetworkConfigurationPublicNetworkConfigurationArgs, ServerNetworkConfigurationPublicNetworkConfigurationPtr and ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPublicNetworkConfigurationPtrInput` via:
//
//	        ServerNetworkConfigurationPublicNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServerNetworkConfigurationPublicNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput
	ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput
}

type serverNetworkConfigurationPublicNetworkConfigurationPtrType ServerNetworkConfigurationPublicNetworkConfigurationArgs

func ServerNetworkConfigurationPublicNetworkConfigurationPtr(v *ServerNetworkConfigurationPublicNetworkConfigurationArgs) ServerNetworkConfigurationPublicNetworkConfigurationPtrInput {
	return (*serverNetworkConfigurationPublicNetworkConfigurationPtrType)(v)
}

func (*serverNetworkConfigurationPublicNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (i *serverNetworkConfigurationPublicNetworkConfigurationPtrType) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serverNetworkConfigurationPublicNetworkConfigurationPtrType) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPublicNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationOutput) ToServerNetworkConfigurationPublicNetworkConfigurationOutput() ServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationOutput) ToServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return o.ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetworkConfigurationPublicNetworkConfiguration) *ServerNetworkConfigurationPublicNetworkConfiguration {
		return &v
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput)
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationOutput) PublicNetworks() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPublicNetworkConfiguration) []ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork {
		return v.PublicNetworks
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput) Elem() ServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPublicNetworkConfiguration) ServerNetworkConfigurationPublicNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ServerNetworkConfigurationPublicNetworkConfiguration
		return ret
	}).(ServerNetworkConfigurationPublicNetworkConfigurationOutput)
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput) PublicNetworks() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPublicNetworkConfiguration) []ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork {
		if v == nil {
			return nil
		}
		return v.PublicNetworks
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork struct {
	ServerPublicNetwork *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork `pulumi:"serverPublicNetwork"`
}

// ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput is an input type that accepts ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs and ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput` via:
//
//	ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs{...}
type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput
	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs struct {
	ServerPublicNetwork ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrInput `pulumi:"serverPublicNetwork"`
}

func (ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput)
}

// ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput is an input type that accepts ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray and ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput` via:
//
//	ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray{ ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs{...} }
type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput
	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray []ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput

func (ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) ServerPublicNetwork() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork) *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork {
		return v.ServerPublicNetwork
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) Index(i pulumi.IntInput) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork {
		return vs[0].([]ServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)[vs[1].(int)]
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork struct {
	// The network identifier.
	Id string `pulumi:"id"`
	// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
	//
	// The `storageConfiguration` block has field `rootPartition`.
	// The `rootPartition` block has two fields:
	Ips               []string `pulumi:"ips"`
	StatusDescription *string  `pulumi:"statusDescription"`
}

// ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkInput is an input type that accepts ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs and ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkInput` via:
//
//	ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs{...}
type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput
	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutputWithContext(context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs struct {
	// The network identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
	//
	// The `storageConfiguration` block has field `rootPartition`.
	// The `rootPartition` block has two fields:
	Ips               pulumi.StringArrayInput `pulumi:"ips"`
	StatusDescription pulumi.StringPtrInput   `pulumi:"statusDescription"`
}

func (ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork)(nil)).Elem()
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput)
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(context.Background())
}

func (i ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput).ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(ctx)
}

// ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrInput is an input type that accepts ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs, ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtr and ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput values.
// You can construct a concrete instance of `ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrInput` via:
//
//	        ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs{...}
//
//	or:
//
//	        nil
type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrInput interface {
	pulumi.Input

	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput
	ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput
}

type serverNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrType ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs

func ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtr(v *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrInput {
	return (*serverNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrType)(v)
}

func (*serverNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork)(nil)).Elem()
}

func (i *serverNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrType) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return i.ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(context.Background())
}

func (i *serverNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrType) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return o.ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(context.Background())
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork {
		return &v
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput)
}

// The network identifier.
func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) string {
		return v.Id
	}).(pulumi.StringOutput)
}

// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
//
// The `storageConfiguration` block has field `rootPartition`.
// The `rootPartition` block has two fields:
func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) []string {
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) *string {
		return v.StatusDescription
	}).(pulumi.StringPtrOutput)
}

type ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput struct{ *pulumi.OutputState }

func (ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork)(nil)).Elem()
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput) ToServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutputWithContext(ctx context.Context) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput {
	return o
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput) Elem() ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork {
		if v != nil {
			return *v
		}
		var ret ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork
		return ret
	}).(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput)
}

// The network identifier.
func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// IPs to configure on the server. IPs must be within the network's range. Must contain at least 1 item.
//
// The `storageConfiguration` block has field `rootPartition`.
// The `rootPartition` block has two fields:
func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

func (o ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput) StatusDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetwork) *string {
		if v == nil {
			return nil
		}
		return v.StatusDescription
	}).(pulumi.StringPtrOutput)
}

type ServerStorageConfiguration struct {
	RootPartition *ServerStorageConfigurationRootPartition `pulumi:"rootPartition"`
}

// ServerStorageConfigurationInput is an input type that accepts ServerStorageConfigurationArgs and ServerStorageConfigurationOutput values.
// You can construct a concrete instance of `ServerStorageConfigurationInput` via:
//
//	ServerStorageConfigurationArgs{...}
type ServerStorageConfigurationInput interface {
	pulumi.Input

	ToServerStorageConfigurationOutput() ServerStorageConfigurationOutput
	ToServerStorageConfigurationOutputWithContext(context.Context) ServerStorageConfigurationOutput
}

type ServerStorageConfigurationArgs struct {
	RootPartition ServerStorageConfigurationRootPartitionPtrInput `pulumi:"rootPartition"`
}

func (ServerStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageConfiguration)(nil)).Elem()
}

func (i ServerStorageConfigurationArgs) ToServerStorageConfigurationOutput() ServerStorageConfigurationOutput {
	return i.ToServerStorageConfigurationOutputWithContext(context.Background())
}

func (i ServerStorageConfigurationArgs) ToServerStorageConfigurationOutputWithContext(ctx context.Context) ServerStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageConfigurationOutput)
}

func (i ServerStorageConfigurationArgs) ToServerStorageConfigurationPtrOutput() ServerStorageConfigurationPtrOutput {
	return i.ToServerStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i ServerStorageConfigurationArgs) ToServerStorageConfigurationPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageConfigurationOutput).ToServerStorageConfigurationPtrOutputWithContext(ctx)
}

// ServerStorageConfigurationPtrInput is an input type that accepts ServerStorageConfigurationArgs, ServerStorageConfigurationPtr and ServerStorageConfigurationPtrOutput values.
// You can construct a concrete instance of `ServerStorageConfigurationPtrInput` via:
//
//	        ServerStorageConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServerStorageConfigurationPtrInput interface {
	pulumi.Input

	ToServerStorageConfigurationPtrOutput() ServerStorageConfigurationPtrOutput
	ToServerStorageConfigurationPtrOutputWithContext(context.Context) ServerStorageConfigurationPtrOutput
}

type serverStorageConfigurationPtrType ServerStorageConfigurationArgs

func ServerStorageConfigurationPtr(v *ServerStorageConfigurationArgs) ServerStorageConfigurationPtrInput {
	return (*serverStorageConfigurationPtrType)(v)
}

func (*serverStorageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStorageConfiguration)(nil)).Elem()
}

func (i *serverStorageConfigurationPtrType) ToServerStorageConfigurationPtrOutput() ServerStorageConfigurationPtrOutput {
	return i.ToServerStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i *serverStorageConfigurationPtrType) ToServerStorageConfigurationPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageConfigurationPtrOutput)
}

type ServerStorageConfigurationOutput struct{ *pulumi.OutputState }

func (ServerStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageConfiguration)(nil)).Elem()
}

func (o ServerStorageConfigurationOutput) ToServerStorageConfigurationOutput() ServerStorageConfigurationOutput {
	return o
}

func (o ServerStorageConfigurationOutput) ToServerStorageConfigurationOutputWithContext(ctx context.Context) ServerStorageConfigurationOutput {
	return o
}

func (o ServerStorageConfigurationOutput) ToServerStorageConfigurationPtrOutput() ServerStorageConfigurationPtrOutput {
	return o.ToServerStorageConfigurationPtrOutputWithContext(context.Background())
}

func (o ServerStorageConfigurationOutput) ToServerStorageConfigurationPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerStorageConfiguration) *ServerStorageConfiguration {
		return &v
	}).(ServerStorageConfigurationPtrOutput)
}

func (o ServerStorageConfigurationOutput) RootPartition() ServerStorageConfigurationRootPartitionPtrOutput {
	return o.ApplyT(func(v ServerStorageConfiguration) *ServerStorageConfigurationRootPartition { return v.RootPartition }).(ServerStorageConfigurationRootPartitionPtrOutput)
}

type ServerStorageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServerStorageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStorageConfiguration)(nil)).Elem()
}

func (o ServerStorageConfigurationPtrOutput) ToServerStorageConfigurationPtrOutput() ServerStorageConfigurationPtrOutput {
	return o
}

func (o ServerStorageConfigurationPtrOutput) ToServerStorageConfigurationPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationPtrOutput {
	return o
}

func (o ServerStorageConfigurationPtrOutput) Elem() ServerStorageConfigurationOutput {
	return o.ApplyT(func(v *ServerStorageConfiguration) ServerStorageConfiguration {
		if v != nil {
			return *v
		}
		var ret ServerStorageConfiguration
		return ret
	}).(ServerStorageConfigurationOutput)
}

func (o ServerStorageConfigurationPtrOutput) RootPartition() ServerStorageConfigurationRootPartitionPtrOutput {
	return o.ApplyT(func(v *ServerStorageConfiguration) *ServerStorageConfigurationRootPartition {
		if v == nil {
			return nil
		}
		return v.RootPartition
	}).(ServerStorageConfigurationRootPartitionPtrOutput)
}

type ServerStorageConfigurationRootPartition struct {
	// Software RAID configuration. The following RAID options are available: `NO_RAID`, `RAID_0`, `RAID_1`.
	Raid *string `pulumi:"raid"`
	// The size of the root partition in GB. `-1` to use all available space.
	Size *int `pulumi:"size"`
}

// ServerStorageConfigurationRootPartitionInput is an input type that accepts ServerStorageConfigurationRootPartitionArgs and ServerStorageConfigurationRootPartitionOutput values.
// You can construct a concrete instance of `ServerStorageConfigurationRootPartitionInput` via:
//
//	ServerStorageConfigurationRootPartitionArgs{...}
type ServerStorageConfigurationRootPartitionInput interface {
	pulumi.Input

	ToServerStorageConfigurationRootPartitionOutput() ServerStorageConfigurationRootPartitionOutput
	ToServerStorageConfigurationRootPartitionOutputWithContext(context.Context) ServerStorageConfigurationRootPartitionOutput
}

type ServerStorageConfigurationRootPartitionArgs struct {
	// Software RAID configuration. The following RAID options are available: `NO_RAID`, `RAID_0`, `RAID_1`.
	Raid pulumi.StringPtrInput `pulumi:"raid"`
	// The size of the root partition in GB. `-1` to use all available space.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (ServerStorageConfigurationRootPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (i ServerStorageConfigurationRootPartitionArgs) ToServerStorageConfigurationRootPartitionOutput() ServerStorageConfigurationRootPartitionOutput {
	return i.ToServerStorageConfigurationRootPartitionOutputWithContext(context.Background())
}

func (i ServerStorageConfigurationRootPartitionArgs) ToServerStorageConfigurationRootPartitionOutputWithContext(ctx context.Context) ServerStorageConfigurationRootPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageConfigurationRootPartitionOutput)
}

func (i ServerStorageConfigurationRootPartitionArgs) ToServerStorageConfigurationRootPartitionPtrOutput() ServerStorageConfigurationRootPartitionPtrOutput {
	return i.ToServerStorageConfigurationRootPartitionPtrOutputWithContext(context.Background())
}

func (i ServerStorageConfigurationRootPartitionArgs) ToServerStorageConfigurationRootPartitionPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationRootPartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageConfigurationRootPartitionOutput).ToServerStorageConfigurationRootPartitionPtrOutputWithContext(ctx)
}

// ServerStorageConfigurationRootPartitionPtrInput is an input type that accepts ServerStorageConfigurationRootPartitionArgs, ServerStorageConfigurationRootPartitionPtr and ServerStorageConfigurationRootPartitionPtrOutput values.
// You can construct a concrete instance of `ServerStorageConfigurationRootPartitionPtrInput` via:
//
//	        ServerStorageConfigurationRootPartitionArgs{...}
//
//	or:
//
//	        nil
type ServerStorageConfigurationRootPartitionPtrInput interface {
	pulumi.Input

	ToServerStorageConfigurationRootPartitionPtrOutput() ServerStorageConfigurationRootPartitionPtrOutput
	ToServerStorageConfigurationRootPartitionPtrOutputWithContext(context.Context) ServerStorageConfigurationRootPartitionPtrOutput
}

type serverStorageConfigurationRootPartitionPtrType ServerStorageConfigurationRootPartitionArgs

func ServerStorageConfigurationRootPartitionPtr(v *ServerStorageConfigurationRootPartitionArgs) ServerStorageConfigurationRootPartitionPtrInput {
	return (*serverStorageConfigurationRootPartitionPtrType)(v)
}

func (*serverStorageConfigurationRootPartitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (i *serverStorageConfigurationRootPartitionPtrType) ToServerStorageConfigurationRootPartitionPtrOutput() ServerStorageConfigurationRootPartitionPtrOutput {
	return i.ToServerStorageConfigurationRootPartitionPtrOutputWithContext(context.Background())
}

func (i *serverStorageConfigurationRootPartitionPtrType) ToServerStorageConfigurationRootPartitionPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationRootPartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageConfigurationRootPartitionPtrOutput)
}

type ServerStorageConfigurationRootPartitionOutput struct{ *pulumi.OutputState }

func (ServerStorageConfigurationRootPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (o ServerStorageConfigurationRootPartitionOutput) ToServerStorageConfigurationRootPartitionOutput() ServerStorageConfigurationRootPartitionOutput {
	return o
}

func (o ServerStorageConfigurationRootPartitionOutput) ToServerStorageConfigurationRootPartitionOutputWithContext(ctx context.Context) ServerStorageConfigurationRootPartitionOutput {
	return o
}

func (o ServerStorageConfigurationRootPartitionOutput) ToServerStorageConfigurationRootPartitionPtrOutput() ServerStorageConfigurationRootPartitionPtrOutput {
	return o.ToServerStorageConfigurationRootPartitionPtrOutputWithContext(context.Background())
}

func (o ServerStorageConfigurationRootPartitionOutput) ToServerStorageConfigurationRootPartitionPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationRootPartitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerStorageConfigurationRootPartition) *ServerStorageConfigurationRootPartition {
		return &v
	}).(ServerStorageConfigurationRootPartitionPtrOutput)
}

// Software RAID configuration. The following RAID options are available: `NO_RAID`, `RAID_0`, `RAID_1`.
func (o ServerStorageConfigurationRootPartitionOutput) Raid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerStorageConfigurationRootPartition) *string { return v.Raid }).(pulumi.StringPtrOutput)
}

// The size of the root partition in GB. `-1` to use all available space.
func (o ServerStorageConfigurationRootPartitionOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerStorageConfigurationRootPartition) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ServerStorageConfigurationRootPartitionPtrOutput struct{ *pulumi.OutputState }

func (ServerStorageConfigurationRootPartitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (o ServerStorageConfigurationRootPartitionPtrOutput) ToServerStorageConfigurationRootPartitionPtrOutput() ServerStorageConfigurationRootPartitionPtrOutput {
	return o
}

func (o ServerStorageConfigurationRootPartitionPtrOutput) ToServerStorageConfigurationRootPartitionPtrOutputWithContext(ctx context.Context) ServerStorageConfigurationRootPartitionPtrOutput {
	return o
}

func (o ServerStorageConfigurationRootPartitionPtrOutput) Elem() ServerStorageConfigurationRootPartitionOutput {
	return o.ApplyT(func(v *ServerStorageConfigurationRootPartition) ServerStorageConfigurationRootPartition {
		if v != nil {
			return *v
		}
		var ret ServerStorageConfigurationRootPartition
		return ret
	}).(ServerStorageConfigurationRootPartitionOutput)
}

// Software RAID configuration. The following RAID options are available: `NO_RAID`, `RAID_0`, `RAID_1`.
func (o ServerStorageConfigurationRootPartitionPtrOutput) Raid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerStorageConfigurationRootPartition) *string {
		if v == nil {
			return nil
		}
		return v.Raid
	}).(pulumi.StringPtrOutput)
}

// The size of the root partition in GB. `-1` to use all available space.
func (o ServerStorageConfigurationRootPartitionPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerStorageConfigurationRootPartition) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type ServerTag struct {
	TagAssignment *ServerTagTagAssignment `pulumi:"tagAssignment"`
}

// ServerTagInput is an input type that accepts ServerTagArgs and ServerTagOutput values.
// You can construct a concrete instance of `ServerTagInput` via:
//
//	ServerTagArgs{...}
type ServerTagInput interface {
	pulumi.Input

	ToServerTagOutput() ServerTagOutput
	ToServerTagOutputWithContext(context.Context) ServerTagOutput
}

type ServerTagArgs struct {
	TagAssignment ServerTagTagAssignmentPtrInput `pulumi:"tagAssignment"`
}

func (ServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (i ServerTagArgs) ToServerTagOutput() ServerTagOutput {
	return i.ToServerTagOutputWithContext(context.Background())
}

func (i ServerTagArgs) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagOutput)
}

// ServerTagArrayInput is an input type that accepts ServerTagArray and ServerTagArrayOutput values.
// You can construct a concrete instance of `ServerTagArrayInput` via:
//
//	ServerTagArray{ ServerTagArgs{...} }
type ServerTagArrayInput interface {
	pulumi.Input

	ToServerTagArrayOutput() ServerTagArrayOutput
	ToServerTagArrayOutputWithContext(context.Context) ServerTagArrayOutput
}

type ServerTagArray []ServerTagInput

func (ServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (i ServerTagArray) ToServerTagArrayOutput() ServerTagArrayOutput {
	return i.ToServerTagArrayOutputWithContext(context.Background())
}

func (i ServerTagArray) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagArrayOutput)
}

type ServerTagOutput struct{ *pulumi.OutputState }

func (ServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTag)(nil)).Elem()
}

func (o ServerTagOutput) ToServerTagOutput() ServerTagOutput {
	return o
}

func (o ServerTagOutput) ToServerTagOutputWithContext(ctx context.Context) ServerTagOutput {
	return o
}

func (o ServerTagOutput) TagAssignment() ServerTagTagAssignmentPtrOutput {
	return o.ApplyT(func(v ServerTag) *ServerTagTagAssignment { return v.TagAssignment }).(ServerTagTagAssignmentPtrOutput)
}

type ServerTagArrayOutput struct{ *pulumi.OutputState }

func (ServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerTag)(nil)).Elem()
}

func (o ServerTagArrayOutput) ToServerTagArrayOutput() ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) ToServerTagArrayOutputWithContext(ctx context.Context) ServerTagArrayOutput {
	return o
}

func (o ServerTagArrayOutput) Index(i pulumi.IntInput) ServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerTag {
		return vs[0].([]ServerTag)[vs[1].(int)]
	}).(ServerTagOutput)
}

type ServerTagTagAssignment struct {
	// Who the tag was created by.
	CreatedBy *string `pulumi:"createdBy"`
	// The network identifier.
	Id *string `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag *bool `pulumi:"isBillingTag"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// The value of the tag assigned to the IP Block.
	//
	// The `networkConfiguration` block has 4 fields: `gatewayAddress`, `privateNetworkConfiguration`, `ipBlocksConfiguration` and `publicNetworkConfiguration`.
	Value *string `pulumi:"value"`
}

// ServerTagTagAssignmentInput is an input type that accepts ServerTagTagAssignmentArgs and ServerTagTagAssignmentOutput values.
// You can construct a concrete instance of `ServerTagTagAssignmentInput` via:
//
//	ServerTagTagAssignmentArgs{...}
type ServerTagTagAssignmentInput interface {
	pulumi.Input

	ToServerTagTagAssignmentOutput() ServerTagTagAssignmentOutput
	ToServerTagTagAssignmentOutputWithContext(context.Context) ServerTagTagAssignmentOutput
}

type ServerTagTagAssignmentArgs struct {
	// Who the tag was created by.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The network identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag pulumi.BoolPtrInput `pulumi:"isBillingTag"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the tag assigned to the IP Block.
	//
	// The `networkConfiguration` block has 4 fields: `gatewayAddress`, `privateNetworkConfiguration`, `ipBlocksConfiguration` and `publicNetworkConfiguration`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServerTagTagAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTagTagAssignment)(nil)).Elem()
}

func (i ServerTagTagAssignmentArgs) ToServerTagTagAssignmentOutput() ServerTagTagAssignmentOutput {
	return i.ToServerTagTagAssignmentOutputWithContext(context.Background())
}

func (i ServerTagTagAssignmentArgs) ToServerTagTagAssignmentOutputWithContext(ctx context.Context) ServerTagTagAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagTagAssignmentOutput)
}

func (i ServerTagTagAssignmentArgs) ToServerTagTagAssignmentPtrOutput() ServerTagTagAssignmentPtrOutput {
	return i.ToServerTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (i ServerTagTagAssignmentArgs) ToServerTagTagAssignmentPtrOutputWithContext(ctx context.Context) ServerTagTagAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagTagAssignmentOutput).ToServerTagTagAssignmentPtrOutputWithContext(ctx)
}

// ServerTagTagAssignmentPtrInput is an input type that accepts ServerTagTagAssignmentArgs, ServerTagTagAssignmentPtr and ServerTagTagAssignmentPtrOutput values.
// You can construct a concrete instance of `ServerTagTagAssignmentPtrInput` via:
//
//	        ServerTagTagAssignmentArgs{...}
//
//	or:
//
//	        nil
type ServerTagTagAssignmentPtrInput interface {
	pulumi.Input

	ToServerTagTagAssignmentPtrOutput() ServerTagTagAssignmentPtrOutput
	ToServerTagTagAssignmentPtrOutputWithContext(context.Context) ServerTagTagAssignmentPtrOutput
}

type serverTagTagAssignmentPtrType ServerTagTagAssignmentArgs

func ServerTagTagAssignmentPtr(v *ServerTagTagAssignmentArgs) ServerTagTagAssignmentPtrInput {
	return (*serverTagTagAssignmentPtrType)(v)
}

func (*serverTagTagAssignmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTagTagAssignment)(nil)).Elem()
}

func (i *serverTagTagAssignmentPtrType) ToServerTagTagAssignmentPtrOutput() ServerTagTagAssignmentPtrOutput {
	return i.ToServerTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (i *serverTagTagAssignmentPtrType) ToServerTagTagAssignmentPtrOutputWithContext(ctx context.Context) ServerTagTagAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerTagTagAssignmentPtrOutput)
}

type ServerTagTagAssignmentOutput struct{ *pulumi.OutputState }

func (ServerTagTagAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerTagTagAssignment)(nil)).Elem()
}

func (o ServerTagTagAssignmentOutput) ToServerTagTagAssignmentOutput() ServerTagTagAssignmentOutput {
	return o
}

func (o ServerTagTagAssignmentOutput) ToServerTagTagAssignmentOutputWithContext(ctx context.Context) ServerTagTagAssignmentOutput {
	return o
}

func (o ServerTagTagAssignmentOutput) ToServerTagTagAssignmentPtrOutput() ServerTagTagAssignmentPtrOutput {
	return o.ToServerTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (o ServerTagTagAssignmentOutput) ToServerTagTagAssignmentPtrOutputWithContext(ctx context.Context) ServerTagTagAssignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerTagTagAssignment) *ServerTagTagAssignment {
		return &v
	}).(ServerTagTagAssignmentPtrOutput)
}

// Who the tag was created by.
func (o ServerTagTagAssignmentOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTagTagAssignment) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The network identifier.
func (o ServerTagTagAssignmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTagTagAssignment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o ServerTagTagAssignmentOutput) IsBillingTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerTagTagAssignment) *bool { return v.IsBillingTag }).(pulumi.BoolPtrOutput)
}

// The name of the tag.
func (o ServerTagTagAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServerTagTagAssignment) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the tag assigned to the IP Block.
//
// The `networkConfiguration` block has 4 fields: `gatewayAddress`, `privateNetworkConfiguration`, `ipBlocksConfiguration` and `publicNetworkConfiguration`.
func (o ServerTagTagAssignmentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerTagTagAssignment) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServerTagTagAssignmentPtrOutput struct{ *pulumi.OutputState }

func (ServerTagTagAssignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerTagTagAssignment)(nil)).Elem()
}

func (o ServerTagTagAssignmentPtrOutput) ToServerTagTagAssignmentPtrOutput() ServerTagTagAssignmentPtrOutput {
	return o
}

func (o ServerTagTagAssignmentPtrOutput) ToServerTagTagAssignmentPtrOutputWithContext(ctx context.Context) ServerTagTagAssignmentPtrOutput {
	return o
}

func (o ServerTagTagAssignmentPtrOutput) Elem() ServerTagTagAssignmentOutput {
	return o.ApplyT(func(v *ServerTagTagAssignment) ServerTagTagAssignment {
		if v != nil {
			return *v
		}
		var ret ServerTagTagAssignment
		return ret
	}).(ServerTagTagAssignmentOutput)
}

// Who the tag was created by.
func (o ServerTagTagAssignmentPtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The network identifier.
func (o ServerTagTagAssignmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o ServerTagTagAssignmentPtrOutput) IsBillingTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerTagTagAssignment) *bool {
		if v == nil {
			return nil
		}
		return v.IsBillingTag
	}).(pulumi.BoolPtrOutput)
}

// The name of the tag.
func (o ServerTagTagAssignmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The value of the tag assigned to the IP Block.
//
// The `networkConfiguration` block has 4 fields: `gatewayAddress`, `privateNetworkConfiguration`, `ipBlocksConfiguration` and `publicNetworkConfiguration`.
func (o ServerTagTagAssignmentPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type StorageNetworkVolume struct {
	// Volume to be created alongside storage.
	Volume StorageNetworkVolumeVolume `pulumi:"volume"`
}

// StorageNetworkVolumeInput is an input type that accepts StorageNetworkVolumeArgs and StorageNetworkVolumeOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeInput` via:
//
//	StorageNetworkVolumeArgs{...}
type StorageNetworkVolumeInput interface {
	pulumi.Input

	ToStorageNetworkVolumeOutput() StorageNetworkVolumeOutput
	ToStorageNetworkVolumeOutputWithContext(context.Context) StorageNetworkVolumeOutput
}

type StorageNetworkVolumeArgs struct {
	// Volume to be created alongside storage.
	Volume StorageNetworkVolumeVolumeInput `pulumi:"volume"`
}

func (StorageNetworkVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolume)(nil)).Elem()
}

func (i StorageNetworkVolumeArgs) ToStorageNetworkVolumeOutput() StorageNetworkVolumeOutput {
	return i.ToStorageNetworkVolumeOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeArgs) ToStorageNetworkVolumeOutputWithContext(ctx context.Context) StorageNetworkVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeOutput)
}

// StorageNetworkVolumeArrayInput is an input type that accepts StorageNetworkVolumeArray and StorageNetworkVolumeArrayOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeArrayInput` via:
//
//	StorageNetworkVolumeArray{ StorageNetworkVolumeArgs{...} }
type StorageNetworkVolumeArrayInput interface {
	pulumi.Input

	ToStorageNetworkVolumeArrayOutput() StorageNetworkVolumeArrayOutput
	ToStorageNetworkVolumeArrayOutputWithContext(context.Context) StorageNetworkVolumeArrayOutput
}

type StorageNetworkVolumeArray []StorageNetworkVolumeInput

func (StorageNetworkVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolume)(nil)).Elem()
}

func (i StorageNetworkVolumeArray) ToStorageNetworkVolumeArrayOutput() StorageNetworkVolumeArrayOutput {
	return i.ToStorageNetworkVolumeArrayOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeArray) ToStorageNetworkVolumeArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeArrayOutput)
}

type StorageNetworkVolumeOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolume)(nil)).Elem()
}

func (o StorageNetworkVolumeOutput) ToStorageNetworkVolumeOutput() StorageNetworkVolumeOutput {
	return o
}

func (o StorageNetworkVolumeOutput) ToStorageNetworkVolumeOutputWithContext(ctx context.Context) StorageNetworkVolumeOutput {
	return o
}

// Volume to be created alongside storage.
func (o StorageNetworkVolumeOutput) Volume() StorageNetworkVolumeVolumeOutput {
	return o.ApplyT(func(v StorageNetworkVolume) StorageNetworkVolumeVolume { return v.Volume }).(StorageNetworkVolumeVolumeOutput)
}

type StorageNetworkVolumeArrayOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolume)(nil)).Elem()
}

func (o StorageNetworkVolumeArrayOutput) ToStorageNetworkVolumeArrayOutput() StorageNetworkVolumeArrayOutput {
	return o
}

func (o StorageNetworkVolumeArrayOutput) ToStorageNetworkVolumeArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeArrayOutput {
	return o
}

func (o StorageNetworkVolumeArrayOutput) Index(i pulumi.IntInput) StorageNetworkVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNetworkVolume {
		return vs[0].([]StorageNetworkVolume)[vs[1].(int)]
	}).(StorageNetworkVolumeOutput)
}

type StorageNetworkVolumeVolume struct {
	// Capacity of volume in GB. Currently only whole numbers and multiples of 1000 GB are supported.
	CapacityInGb int `pulumi:"capacityInGb"`
	// Date and time when this volume was created.
	CreatedOn *string `pulumi:"createdOn"`
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn *string `pulumi:"deleteRequestedOn"`
	// Volume description.
	Description *string `pulumi:"description"`
	// The unique id of the tag.
	Id *string `pulumi:"id"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// Volume's full path. It is in form of `/{volumeId}/pathSuffix`.
	Path *string `pulumi:"path"`
	// Last part of volume's path.
	PathSuffix *string `pulumi:"pathSuffix"`
	// Permissions for the volume.
	Permissions []StorageNetworkVolumeVolumePermission `pulumi:"permissions"`
	// File system protocol.
	Protocol *string `pulumi:"protocol"`
	// Volume's status.
	Status *string `pulumi:"status"`
	// Tags to set to the volume.
	Tags []StorageNetworkVolumeVolumeTag `pulumi:"tags"`
	// Used capacity in GB, updated periodically.
	UsedCapacityInGb *int `pulumi:"usedCapacityInGb"`
}

// StorageNetworkVolumeVolumeInput is an input type that accepts StorageNetworkVolumeVolumeArgs and StorageNetworkVolumeVolumeOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumeInput` via:
//
//	StorageNetworkVolumeVolumeArgs{...}
type StorageNetworkVolumeVolumeInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumeOutput() StorageNetworkVolumeVolumeOutput
	ToStorageNetworkVolumeVolumeOutputWithContext(context.Context) StorageNetworkVolumeVolumeOutput
}

type StorageNetworkVolumeVolumeArgs struct {
	// Capacity of volume in GB. Currently only whole numbers and multiples of 1000 GB are supported.
	CapacityInGb pulumi.IntInput `pulumi:"capacityInGb"`
	// Date and time when this volume was created.
	CreatedOn pulumi.StringPtrInput `pulumi:"createdOn"`
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn pulumi.StringPtrInput `pulumi:"deleteRequestedOn"`
	// Volume description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The unique id of the tag.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// Volume's full path. It is in form of `/{volumeId}/pathSuffix`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Last part of volume's path.
	PathSuffix pulumi.StringPtrInput `pulumi:"pathSuffix"`
	// Permissions for the volume.
	Permissions StorageNetworkVolumeVolumePermissionArrayInput `pulumi:"permissions"`
	// File system protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Volume's status.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Tags to set to the volume.
	Tags StorageNetworkVolumeVolumeTagArrayInput `pulumi:"tags"`
	// Used capacity in GB, updated periodically.
	UsedCapacityInGb pulumi.IntPtrInput `pulumi:"usedCapacityInGb"`
}

func (StorageNetworkVolumeVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolume)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumeArgs) ToStorageNetworkVolumeVolumeOutput() StorageNetworkVolumeVolumeOutput {
	return i.ToStorageNetworkVolumeVolumeOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumeArgs) ToStorageNetworkVolumeVolumeOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumeOutput)
}

type StorageNetworkVolumeVolumeOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolume)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumeOutput) ToStorageNetworkVolumeVolumeOutput() StorageNetworkVolumeVolumeOutput {
	return o
}

func (o StorageNetworkVolumeVolumeOutput) ToStorageNetworkVolumeVolumeOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeOutput {
	return o
}

// Capacity of volume in GB. Currently only whole numbers and multiples of 1000 GB are supported.
func (o StorageNetworkVolumeVolumeOutput) CapacityInGb() pulumi.IntOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) int { return v.CapacityInGb }).(pulumi.IntOutput)
}

// Date and time when this volume was created.
func (o StorageNetworkVolumeVolumeOutput) CreatedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.CreatedOn }).(pulumi.StringPtrOutput)
}

// Date and time of the initial request for volume deletion.
func (o StorageNetworkVolumeVolumeOutput) DeleteRequestedOn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.DeleteRequestedOn }).(pulumi.StringPtrOutput)
}

// Volume description.
func (o StorageNetworkVolumeVolumeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique id of the tag.
func (o StorageNetworkVolumeVolumeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the tag.
func (o StorageNetworkVolumeVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Volume's full path. It is in form of `/{volumeId}/pathSuffix`.
func (o StorageNetworkVolumeVolumeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Last part of volume's path.
func (o StorageNetworkVolumeVolumeOutput) PathSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.PathSuffix }).(pulumi.StringPtrOutput)
}

// Permissions for the volume.
func (o StorageNetworkVolumeVolumeOutput) Permissions() StorageNetworkVolumeVolumePermissionArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) []StorageNetworkVolumeVolumePermission { return v.Permissions }).(StorageNetworkVolumeVolumePermissionArrayOutput)
}

// File system protocol.
func (o StorageNetworkVolumeVolumeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Volume's status.
func (o StorageNetworkVolumeVolumeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Tags to set to the volume.
func (o StorageNetworkVolumeVolumeOutput) Tags() StorageNetworkVolumeVolumeTagArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) []StorageNetworkVolumeVolumeTag { return v.Tags }).(StorageNetworkVolumeVolumeTagArrayOutput)
}

// Used capacity in GB, updated periodically.
func (o StorageNetworkVolumeVolumeOutput) UsedCapacityInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolume) *int { return v.UsedCapacityInGb }).(pulumi.IntPtrOutput)
}

type StorageNetworkVolumeVolumePermission struct {
	// NFS specific permissions on the volume.
	Nfs []StorageNetworkVolumeVolumePermissionNf `pulumi:"nfs"`
}

// StorageNetworkVolumeVolumePermissionInput is an input type that accepts StorageNetworkVolumeVolumePermissionArgs and StorageNetworkVolumeVolumePermissionOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumePermissionInput` via:
//
//	StorageNetworkVolumeVolumePermissionArgs{...}
type StorageNetworkVolumeVolumePermissionInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumePermissionOutput() StorageNetworkVolumeVolumePermissionOutput
	ToStorageNetworkVolumeVolumePermissionOutputWithContext(context.Context) StorageNetworkVolumeVolumePermissionOutput
}

type StorageNetworkVolumeVolumePermissionArgs struct {
	// NFS specific permissions on the volume.
	Nfs StorageNetworkVolumeVolumePermissionNfArrayInput `pulumi:"nfs"`
}

func (StorageNetworkVolumeVolumePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumePermission)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumePermissionArgs) ToStorageNetworkVolumeVolumePermissionOutput() StorageNetworkVolumeVolumePermissionOutput {
	return i.ToStorageNetworkVolumeVolumePermissionOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumePermissionArgs) ToStorageNetworkVolumeVolumePermissionOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumePermissionOutput)
}

// StorageNetworkVolumeVolumePermissionArrayInput is an input type that accepts StorageNetworkVolumeVolumePermissionArray and StorageNetworkVolumeVolumePermissionArrayOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumePermissionArrayInput` via:
//
//	StorageNetworkVolumeVolumePermissionArray{ StorageNetworkVolumeVolumePermissionArgs{...} }
type StorageNetworkVolumeVolumePermissionArrayInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumePermissionArrayOutput() StorageNetworkVolumeVolumePermissionArrayOutput
	ToStorageNetworkVolumeVolumePermissionArrayOutputWithContext(context.Context) StorageNetworkVolumeVolumePermissionArrayOutput
}

type StorageNetworkVolumeVolumePermissionArray []StorageNetworkVolumeVolumePermissionInput

func (StorageNetworkVolumeVolumePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolumeVolumePermission)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumePermissionArray) ToStorageNetworkVolumeVolumePermissionArrayOutput() StorageNetworkVolumeVolumePermissionArrayOutput {
	return i.ToStorageNetworkVolumeVolumePermissionArrayOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumePermissionArray) ToStorageNetworkVolumeVolumePermissionArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumePermissionArrayOutput)
}

type StorageNetworkVolumeVolumePermissionOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumePermission)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumePermissionOutput) ToStorageNetworkVolumeVolumePermissionOutput() StorageNetworkVolumeVolumePermissionOutput {
	return o
}

func (o StorageNetworkVolumeVolumePermissionOutput) ToStorageNetworkVolumeVolumePermissionOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionOutput {
	return o
}

// NFS specific permissions on the volume.
func (o StorageNetworkVolumeVolumePermissionOutput) Nfs() StorageNetworkVolumeVolumePermissionNfArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumePermission) []StorageNetworkVolumeVolumePermissionNf { return v.Nfs }).(StorageNetworkVolumeVolumePermissionNfArrayOutput)
}

type StorageNetworkVolumeVolumePermissionArrayOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolumeVolumePermission)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumePermissionArrayOutput) ToStorageNetworkVolumeVolumePermissionArrayOutput() StorageNetworkVolumeVolumePermissionArrayOutput {
	return o
}

func (o StorageNetworkVolumeVolumePermissionArrayOutput) ToStorageNetworkVolumeVolumePermissionArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionArrayOutput {
	return o
}

func (o StorageNetworkVolumeVolumePermissionArrayOutput) Index(i pulumi.IntInput) StorageNetworkVolumeVolumePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNetworkVolumeVolumePermission {
		return vs[0].([]StorageNetworkVolumeVolumePermission)[vs[1].(int)]
	}).(StorageNetworkVolumeVolumePermissionOutput)
}

type StorageNetworkVolumeVolumePermissionNf struct {
	// All squash permission.
	AllSquashes []string `pulumi:"allSquashes"`
	// No squash permission.
	NoSquashes []string `pulumi:"noSquashes"`
	// Read only access.
	ReadOnlies []string `pulumi:"readOnlies"`
	// Read/Write access.
	ReadWrites []string `pulumi:"readWrites"`
	// Root squash permission.
	RootSquashes []string `pulumi:"rootSquashes"`
}

// StorageNetworkVolumeVolumePermissionNfInput is an input type that accepts StorageNetworkVolumeVolumePermissionNfArgs and StorageNetworkVolumeVolumePermissionNfOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumePermissionNfInput` via:
//
//	StorageNetworkVolumeVolumePermissionNfArgs{...}
type StorageNetworkVolumeVolumePermissionNfInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumePermissionNfOutput() StorageNetworkVolumeVolumePermissionNfOutput
	ToStorageNetworkVolumeVolumePermissionNfOutputWithContext(context.Context) StorageNetworkVolumeVolumePermissionNfOutput
}

type StorageNetworkVolumeVolumePermissionNfArgs struct {
	// All squash permission.
	AllSquashes pulumi.StringArrayInput `pulumi:"allSquashes"`
	// No squash permission.
	NoSquashes pulumi.StringArrayInput `pulumi:"noSquashes"`
	// Read only access.
	ReadOnlies pulumi.StringArrayInput `pulumi:"readOnlies"`
	// Read/Write access.
	ReadWrites pulumi.StringArrayInput `pulumi:"readWrites"`
	// Root squash permission.
	RootSquashes pulumi.StringArrayInput `pulumi:"rootSquashes"`
}

func (StorageNetworkVolumeVolumePermissionNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumePermissionNf)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumePermissionNfArgs) ToStorageNetworkVolumeVolumePermissionNfOutput() StorageNetworkVolumeVolumePermissionNfOutput {
	return i.ToStorageNetworkVolumeVolumePermissionNfOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumePermissionNfArgs) ToStorageNetworkVolumeVolumePermissionNfOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumePermissionNfOutput)
}

// StorageNetworkVolumeVolumePermissionNfArrayInput is an input type that accepts StorageNetworkVolumeVolumePermissionNfArray and StorageNetworkVolumeVolumePermissionNfArrayOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumePermissionNfArrayInput` via:
//
//	StorageNetworkVolumeVolumePermissionNfArray{ StorageNetworkVolumeVolumePermissionNfArgs{...} }
type StorageNetworkVolumeVolumePermissionNfArrayInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumePermissionNfArrayOutput() StorageNetworkVolumeVolumePermissionNfArrayOutput
	ToStorageNetworkVolumeVolumePermissionNfArrayOutputWithContext(context.Context) StorageNetworkVolumeVolumePermissionNfArrayOutput
}

type StorageNetworkVolumeVolumePermissionNfArray []StorageNetworkVolumeVolumePermissionNfInput

func (StorageNetworkVolumeVolumePermissionNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolumeVolumePermissionNf)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumePermissionNfArray) ToStorageNetworkVolumeVolumePermissionNfArrayOutput() StorageNetworkVolumeVolumePermissionNfArrayOutput {
	return i.ToStorageNetworkVolumeVolumePermissionNfArrayOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumePermissionNfArray) ToStorageNetworkVolumeVolumePermissionNfArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumePermissionNfArrayOutput)
}

type StorageNetworkVolumeVolumePermissionNfOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumePermissionNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumePermissionNf)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumePermissionNfOutput) ToStorageNetworkVolumeVolumePermissionNfOutput() StorageNetworkVolumeVolumePermissionNfOutput {
	return o
}

func (o StorageNetworkVolumeVolumePermissionNfOutput) ToStorageNetworkVolumeVolumePermissionNfOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionNfOutput {
	return o
}

// All squash permission.
func (o StorageNetworkVolumeVolumePermissionNfOutput) AllSquashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumePermissionNf) []string { return v.AllSquashes }).(pulumi.StringArrayOutput)
}

// No squash permission.
func (o StorageNetworkVolumeVolumePermissionNfOutput) NoSquashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumePermissionNf) []string { return v.NoSquashes }).(pulumi.StringArrayOutput)
}

// Read only access.
func (o StorageNetworkVolumeVolumePermissionNfOutput) ReadOnlies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumePermissionNf) []string { return v.ReadOnlies }).(pulumi.StringArrayOutput)
}

// Read/Write access.
func (o StorageNetworkVolumeVolumePermissionNfOutput) ReadWrites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumePermissionNf) []string { return v.ReadWrites }).(pulumi.StringArrayOutput)
}

// Root squash permission.
func (o StorageNetworkVolumeVolumePermissionNfOutput) RootSquashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumePermissionNf) []string { return v.RootSquashes }).(pulumi.StringArrayOutput)
}

type StorageNetworkVolumeVolumePermissionNfArrayOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumePermissionNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolumeVolumePermissionNf)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumePermissionNfArrayOutput) ToStorageNetworkVolumeVolumePermissionNfArrayOutput() StorageNetworkVolumeVolumePermissionNfArrayOutput {
	return o
}

func (o StorageNetworkVolumeVolumePermissionNfArrayOutput) ToStorageNetworkVolumeVolumePermissionNfArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumePermissionNfArrayOutput {
	return o
}

func (o StorageNetworkVolumeVolumePermissionNfArrayOutput) Index(i pulumi.IntInput) StorageNetworkVolumeVolumePermissionNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNetworkVolumeVolumePermissionNf {
		return vs[0].([]StorageNetworkVolumeVolumePermissionNf)[vs[1].(int)]
	}).(StorageNetworkVolumeVolumePermissionNfOutput)
}

type StorageNetworkVolumeVolumeTag struct {
	// Tag to set to the volume.
	TagAssignment *StorageNetworkVolumeVolumeTagTagAssignment `pulumi:"tagAssignment"`
}

// StorageNetworkVolumeVolumeTagInput is an input type that accepts StorageNetworkVolumeVolumeTagArgs and StorageNetworkVolumeVolumeTagOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumeTagInput` via:
//
//	StorageNetworkVolumeVolumeTagArgs{...}
type StorageNetworkVolumeVolumeTagInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumeTagOutput() StorageNetworkVolumeVolumeTagOutput
	ToStorageNetworkVolumeVolumeTagOutputWithContext(context.Context) StorageNetworkVolumeVolumeTagOutput
}

type StorageNetworkVolumeVolumeTagArgs struct {
	// Tag to set to the volume.
	TagAssignment StorageNetworkVolumeVolumeTagTagAssignmentPtrInput `pulumi:"tagAssignment"`
}

func (StorageNetworkVolumeVolumeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumeTag)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumeTagArgs) ToStorageNetworkVolumeVolumeTagOutput() StorageNetworkVolumeVolumeTagOutput {
	return i.ToStorageNetworkVolumeVolumeTagOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumeTagArgs) ToStorageNetworkVolumeVolumeTagOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumeTagOutput)
}

// StorageNetworkVolumeVolumeTagArrayInput is an input type that accepts StorageNetworkVolumeVolumeTagArray and StorageNetworkVolumeVolumeTagArrayOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumeTagArrayInput` via:
//
//	StorageNetworkVolumeVolumeTagArray{ StorageNetworkVolumeVolumeTagArgs{...} }
type StorageNetworkVolumeVolumeTagArrayInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumeTagArrayOutput() StorageNetworkVolumeVolumeTagArrayOutput
	ToStorageNetworkVolumeVolumeTagArrayOutputWithContext(context.Context) StorageNetworkVolumeVolumeTagArrayOutput
}

type StorageNetworkVolumeVolumeTagArray []StorageNetworkVolumeVolumeTagInput

func (StorageNetworkVolumeVolumeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolumeVolumeTag)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumeTagArray) ToStorageNetworkVolumeVolumeTagArrayOutput() StorageNetworkVolumeVolumeTagArrayOutput {
	return i.ToStorageNetworkVolumeVolumeTagArrayOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumeTagArray) ToStorageNetworkVolumeVolumeTagArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumeTagArrayOutput)
}

type StorageNetworkVolumeVolumeTagOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumeTag)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumeTagOutput) ToStorageNetworkVolumeVolumeTagOutput() StorageNetworkVolumeVolumeTagOutput {
	return o
}

func (o StorageNetworkVolumeVolumeTagOutput) ToStorageNetworkVolumeVolumeTagOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagOutput {
	return o
}

// Tag to set to the volume.
func (o StorageNetworkVolumeVolumeTagOutput) TagAssignment() StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumeTag) *StorageNetworkVolumeVolumeTagTagAssignment {
		return v.TagAssignment
	}).(StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput)
}

type StorageNetworkVolumeVolumeTagArrayOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageNetworkVolumeVolumeTag)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumeTagArrayOutput) ToStorageNetworkVolumeVolumeTagArrayOutput() StorageNetworkVolumeVolumeTagArrayOutput {
	return o
}

func (o StorageNetworkVolumeVolumeTagArrayOutput) ToStorageNetworkVolumeVolumeTagArrayOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagArrayOutput {
	return o
}

func (o StorageNetworkVolumeVolumeTagArrayOutput) Index(i pulumi.IntInput) StorageNetworkVolumeVolumeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageNetworkVolumeVolumeTag {
		return vs[0].([]StorageNetworkVolumeVolumeTag)[vs[1].(int)]
	}).(StorageNetworkVolumeVolumeTagOutput)
}

type StorageNetworkVolumeVolumeTagTagAssignment struct {
	// Who the tag was created by.
	CreatedBy *string `pulumi:"createdBy"`
	// The unique id of the tag.
	Id *string `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag *bool `pulumi:"isBillingTag"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// The value of the tag assigned to the volume.
	Value *string `pulumi:"value"`
}

// StorageNetworkVolumeVolumeTagTagAssignmentInput is an input type that accepts StorageNetworkVolumeVolumeTagTagAssignmentArgs and StorageNetworkVolumeVolumeTagTagAssignmentOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumeTagTagAssignmentInput` via:
//
//	StorageNetworkVolumeVolumeTagTagAssignmentArgs{...}
type StorageNetworkVolumeVolumeTagTagAssignmentInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumeTagTagAssignmentOutput() StorageNetworkVolumeVolumeTagTagAssignmentOutput
	ToStorageNetworkVolumeVolumeTagTagAssignmentOutputWithContext(context.Context) StorageNetworkVolumeVolumeTagTagAssignmentOutput
}

type StorageNetworkVolumeVolumeTagTagAssignmentArgs struct {
	// Who the tag was created by.
	CreatedBy pulumi.StringPtrInput `pulumi:"createdBy"`
	// The unique id of the tag.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag pulumi.BoolPtrInput `pulumi:"isBillingTag"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the tag assigned to the volume.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (StorageNetworkVolumeVolumeTagTagAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumeTagTagAssignment)(nil)).Elem()
}

func (i StorageNetworkVolumeVolumeTagTagAssignmentArgs) ToStorageNetworkVolumeVolumeTagTagAssignmentOutput() StorageNetworkVolumeVolumeTagTagAssignmentOutput {
	return i.ToStorageNetworkVolumeVolumeTagTagAssignmentOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumeTagTagAssignmentArgs) ToStorageNetworkVolumeVolumeTagTagAssignmentOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagTagAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumeTagTagAssignmentOutput)
}

func (i StorageNetworkVolumeVolumeTagTagAssignmentArgs) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutput() StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return i.ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (i StorageNetworkVolumeVolumeTagTagAssignmentArgs) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumeTagTagAssignmentOutput).ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(ctx)
}

// StorageNetworkVolumeVolumeTagTagAssignmentPtrInput is an input type that accepts StorageNetworkVolumeVolumeTagTagAssignmentArgs, StorageNetworkVolumeVolumeTagTagAssignmentPtr and StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput values.
// You can construct a concrete instance of `StorageNetworkVolumeVolumeTagTagAssignmentPtrInput` via:
//
//	        StorageNetworkVolumeVolumeTagTagAssignmentArgs{...}
//
//	or:
//
//	        nil
type StorageNetworkVolumeVolumeTagTagAssignmentPtrInput interface {
	pulumi.Input

	ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutput() StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput
	ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(context.Context) StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput
}

type storageNetworkVolumeVolumeTagTagAssignmentPtrType StorageNetworkVolumeVolumeTagTagAssignmentArgs

func StorageNetworkVolumeVolumeTagTagAssignmentPtr(v *StorageNetworkVolumeVolumeTagTagAssignmentArgs) StorageNetworkVolumeVolumeTagTagAssignmentPtrInput {
	return (*storageNetworkVolumeVolumeTagTagAssignmentPtrType)(v)
}

func (*storageNetworkVolumeVolumeTagTagAssignmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNetworkVolumeVolumeTagTagAssignment)(nil)).Elem()
}

func (i *storageNetworkVolumeVolumeTagTagAssignmentPtrType) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutput() StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return i.ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (i *storageNetworkVolumeVolumeTagTagAssignmentPtrType) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput)
}

type StorageNetworkVolumeVolumeTagTagAssignmentOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumeTagTagAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageNetworkVolumeVolumeTagTagAssignment)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) ToStorageNetworkVolumeVolumeTagTagAssignmentOutput() StorageNetworkVolumeVolumeTagTagAssignmentOutput {
	return o
}

func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) ToStorageNetworkVolumeVolumeTagTagAssignmentOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagTagAssignmentOutput {
	return o
}

func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutput() StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return o.ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(context.Background())
}

func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StorageNetworkVolumeVolumeTagTagAssignment) *StorageNetworkVolumeVolumeTagTagAssignment {
		return &v
	}).(StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput)
}

// Who the tag was created by.
func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumeTagTagAssignment) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The unique id of the tag.
func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumeTagTagAssignment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) IsBillingTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumeTagTagAssignment) *bool { return v.IsBillingTag }).(pulumi.BoolPtrOutput)
}

// The name of the tag.
func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumeTagTagAssignment) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the tag assigned to the volume.
func (o StorageNetworkVolumeVolumeTagTagAssignmentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StorageNetworkVolumeVolumeTagTagAssignment) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput struct{ *pulumi.OutputState }

func (StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageNetworkVolumeVolumeTagTagAssignment)(nil)).Elem()
}

func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutput() StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return o
}

func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) ToStorageNetworkVolumeVolumeTagTagAssignmentPtrOutputWithContext(ctx context.Context) StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput {
	return o
}

func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) Elem() StorageNetworkVolumeVolumeTagTagAssignmentOutput {
	return o.ApplyT(func(v *StorageNetworkVolumeVolumeTagTagAssignment) StorageNetworkVolumeVolumeTagTagAssignment {
		if v != nil {
			return *v
		}
		var ret StorageNetworkVolumeVolumeTagTagAssignment
		return ret
	}).(StorageNetworkVolumeVolumeTagTagAssignmentOutput)
}

// Who the tag was created by.
func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNetworkVolumeVolumeTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.CreatedBy
	}).(pulumi.StringPtrOutput)
}

// The unique id of the tag.
func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNetworkVolumeVolumeTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) IsBillingTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageNetworkVolumeVolumeTagTagAssignment) *bool {
		if v == nil {
			return nil
		}
		return v.IsBillingTag
	}).(pulumi.BoolPtrOutput)
}

// The name of the tag.
func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNetworkVolumeVolumeTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The value of the tag assigned to the volume.
func (o StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageNetworkVolumeVolumeTagTagAssignment) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type TagResourceAssignment struct {
	// The resource name.
	ResourceName *string `pulumi:"resourceName"`
	// The value of the tag assigned to the resource.
	// * ` createdBy  ` - The tag's creator.
	Value *string `pulumi:"value"`
}

// TagResourceAssignmentInput is an input type that accepts TagResourceAssignmentArgs and TagResourceAssignmentOutput values.
// You can construct a concrete instance of `TagResourceAssignmentInput` via:
//
//	TagResourceAssignmentArgs{...}
type TagResourceAssignmentInput interface {
	pulumi.Input

	ToTagResourceAssignmentOutput() TagResourceAssignmentOutput
	ToTagResourceAssignmentOutputWithContext(context.Context) TagResourceAssignmentOutput
}

type TagResourceAssignmentArgs struct {
	// The resource name.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// The value of the tag assigned to the resource.
	// * ` createdBy  ` - The tag's creator.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TagResourceAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TagResourceAssignment)(nil)).Elem()
}

func (i TagResourceAssignmentArgs) ToTagResourceAssignmentOutput() TagResourceAssignmentOutput {
	return i.ToTagResourceAssignmentOutputWithContext(context.Background())
}

func (i TagResourceAssignmentArgs) ToTagResourceAssignmentOutputWithContext(ctx context.Context) TagResourceAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagResourceAssignmentOutput)
}

// TagResourceAssignmentArrayInput is an input type that accepts TagResourceAssignmentArray and TagResourceAssignmentArrayOutput values.
// You can construct a concrete instance of `TagResourceAssignmentArrayInput` via:
//
//	TagResourceAssignmentArray{ TagResourceAssignmentArgs{...} }
type TagResourceAssignmentArrayInput interface {
	pulumi.Input

	ToTagResourceAssignmentArrayOutput() TagResourceAssignmentArrayOutput
	ToTagResourceAssignmentArrayOutputWithContext(context.Context) TagResourceAssignmentArrayOutput
}

type TagResourceAssignmentArray []TagResourceAssignmentInput

func (TagResourceAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagResourceAssignment)(nil)).Elem()
}

func (i TagResourceAssignmentArray) ToTagResourceAssignmentArrayOutput() TagResourceAssignmentArrayOutput {
	return i.ToTagResourceAssignmentArrayOutputWithContext(context.Background())
}

func (i TagResourceAssignmentArray) ToTagResourceAssignmentArrayOutputWithContext(ctx context.Context) TagResourceAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagResourceAssignmentArrayOutput)
}

type TagResourceAssignmentOutput struct{ *pulumi.OutputState }

func (TagResourceAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TagResourceAssignment)(nil)).Elem()
}

func (o TagResourceAssignmentOutput) ToTagResourceAssignmentOutput() TagResourceAssignmentOutput {
	return o
}

func (o TagResourceAssignmentOutput) ToTagResourceAssignmentOutputWithContext(ctx context.Context) TagResourceAssignmentOutput {
	return o
}

// The resource name.
func (o TagResourceAssignmentOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagResourceAssignment) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The value of the tag assigned to the resource.
// * ` createdBy  ` - The tag's creator.
func (o TagResourceAssignmentOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TagResourceAssignment) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TagResourceAssignmentArrayOutput struct{ *pulumi.OutputState }

func (TagResourceAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TagResourceAssignment)(nil)).Elem()
}

func (o TagResourceAssignmentArrayOutput) ToTagResourceAssignmentArrayOutput() TagResourceAssignmentArrayOutput {
	return o
}

func (o TagResourceAssignmentArrayOutput) ToTagResourceAssignmentArrayOutputWithContext(ctx context.Context) TagResourceAssignmentArrayOutput {
	return o
}

func (o TagResourceAssignmentArrayOutput) Index(i pulumi.IntInput) TagResourceAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TagResourceAssignment {
		return vs[0].([]TagResourceAssignment)[vs[1].(int)]
	}).(TagResourceAssignmentOutput)
}

type GetEventsEvent struct {
	// Event name.
	Name string `pulumi:"name"`
	// The UTC time the event initiated.
	Timestamp string `pulumi:"timestamp"`
	// Details related to the user / application.
	UserInfos []GetEventsEventUserInfo `pulumi:"userInfos"`
}

// GetEventsEventInput is an input type that accepts GetEventsEventArgs and GetEventsEventOutput values.
// You can construct a concrete instance of `GetEventsEventInput` via:
//
//	GetEventsEventArgs{...}
type GetEventsEventInput interface {
	pulumi.Input

	ToGetEventsEventOutput() GetEventsEventOutput
	ToGetEventsEventOutputWithContext(context.Context) GetEventsEventOutput
}

type GetEventsEventArgs struct {
	// Event name.
	Name pulumi.StringInput `pulumi:"name"`
	// The UTC time the event initiated.
	Timestamp pulumi.StringInput `pulumi:"timestamp"`
	// Details related to the user / application.
	UserInfos GetEventsEventUserInfoArrayInput `pulumi:"userInfos"`
}

func (GetEventsEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsEvent)(nil)).Elem()
}

func (i GetEventsEventArgs) ToGetEventsEventOutput() GetEventsEventOutput {
	return i.ToGetEventsEventOutputWithContext(context.Background())
}

func (i GetEventsEventArgs) ToGetEventsEventOutputWithContext(ctx context.Context) GetEventsEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsEventOutput)
}

// GetEventsEventArrayInput is an input type that accepts GetEventsEventArray and GetEventsEventArrayOutput values.
// You can construct a concrete instance of `GetEventsEventArrayInput` via:
//
//	GetEventsEventArray{ GetEventsEventArgs{...} }
type GetEventsEventArrayInput interface {
	pulumi.Input

	ToGetEventsEventArrayOutput() GetEventsEventArrayOutput
	ToGetEventsEventArrayOutputWithContext(context.Context) GetEventsEventArrayOutput
}

type GetEventsEventArray []GetEventsEventInput

func (GetEventsEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsEvent)(nil)).Elem()
}

func (i GetEventsEventArray) ToGetEventsEventArrayOutput() GetEventsEventArrayOutput {
	return i.ToGetEventsEventArrayOutputWithContext(context.Background())
}

func (i GetEventsEventArray) ToGetEventsEventArrayOutputWithContext(ctx context.Context) GetEventsEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsEventArrayOutput)
}

type GetEventsEventOutput struct{ *pulumi.OutputState }

func (GetEventsEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsEvent)(nil)).Elem()
}

func (o GetEventsEventOutput) ToGetEventsEventOutput() GetEventsEventOutput {
	return o
}

func (o GetEventsEventOutput) ToGetEventsEventOutputWithContext(ctx context.Context) GetEventsEventOutput {
	return o
}

// Event name.
func (o GetEventsEventOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsEvent) string { return v.Name }).(pulumi.StringOutput)
}

// The UTC time the event initiated.
func (o GetEventsEventOutput) Timestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsEvent) string { return v.Timestamp }).(pulumi.StringOutput)
}

// Details related to the user / application.
func (o GetEventsEventOutput) UserInfos() GetEventsEventUserInfoArrayOutput {
	return o.ApplyT(func(v GetEventsEvent) []GetEventsEventUserInfo { return v.UserInfos }).(GetEventsEventUserInfoArrayOutput)
}

type GetEventsEventArrayOutput struct{ *pulumi.OutputState }

func (GetEventsEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsEvent)(nil)).Elem()
}

func (o GetEventsEventArrayOutput) ToGetEventsEventArrayOutput() GetEventsEventArrayOutput {
	return o
}

func (o GetEventsEventArrayOutput) ToGetEventsEventArrayOutputWithContext(ctx context.Context) GetEventsEventArrayOutput {
	return o
}

func (o GetEventsEventArrayOutput) Index(i pulumi.IntInput) GetEventsEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventsEvent {
		return vs[0].([]GetEventsEvent)[vs[1].(int)]
	}).(GetEventsEventOutput)
}

type GetEventsEventUserInfo struct {
	// The BMC account ID.
	AccountId string `pulumi:"accountId"`
	// The client ID of the application.
	ClientId string `pulumi:"clientId"`
	// The logged in user or owner of the client application.
	Username string `pulumi:"username"`
}

// GetEventsEventUserInfoInput is an input type that accepts GetEventsEventUserInfoArgs and GetEventsEventUserInfoOutput values.
// You can construct a concrete instance of `GetEventsEventUserInfoInput` via:
//
//	GetEventsEventUserInfoArgs{...}
type GetEventsEventUserInfoInput interface {
	pulumi.Input

	ToGetEventsEventUserInfoOutput() GetEventsEventUserInfoOutput
	ToGetEventsEventUserInfoOutputWithContext(context.Context) GetEventsEventUserInfoOutput
}

type GetEventsEventUserInfoArgs struct {
	// The BMC account ID.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The client ID of the application.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The logged in user or owner of the client application.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetEventsEventUserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsEventUserInfo)(nil)).Elem()
}

func (i GetEventsEventUserInfoArgs) ToGetEventsEventUserInfoOutput() GetEventsEventUserInfoOutput {
	return i.ToGetEventsEventUserInfoOutputWithContext(context.Background())
}

func (i GetEventsEventUserInfoArgs) ToGetEventsEventUserInfoOutputWithContext(ctx context.Context) GetEventsEventUserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsEventUserInfoOutput)
}

// GetEventsEventUserInfoArrayInput is an input type that accepts GetEventsEventUserInfoArray and GetEventsEventUserInfoArrayOutput values.
// You can construct a concrete instance of `GetEventsEventUserInfoArrayInput` via:
//
//	GetEventsEventUserInfoArray{ GetEventsEventUserInfoArgs{...} }
type GetEventsEventUserInfoArrayInput interface {
	pulumi.Input

	ToGetEventsEventUserInfoArrayOutput() GetEventsEventUserInfoArrayOutput
	ToGetEventsEventUserInfoArrayOutputWithContext(context.Context) GetEventsEventUserInfoArrayOutput
}

type GetEventsEventUserInfoArray []GetEventsEventUserInfoInput

func (GetEventsEventUserInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsEventUserInfo)(nil)).Elem()
}

func (i GetEventsEventUserInfoArray) ToGetEventsEventUserInfoArrayOutput() GetEventsEventUserInfoArrayOutput {
	return i.ToGetEventsEventUserInfoArrayOutputWithContext(context.Background())
}

func (i GetEventsEventUserInfoArray) ToGetEventsEventUserInfoArrayOutputWithContext(ctx context.Context) GetEventsEventUserInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEventsEventUserInfoArrayOutput)
}

type GetEventsEventUserInfoOutput struct{ *pulumi.OutputState }

func (GetEventsEventUserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventsEventUserInfo)(nil)).Elem()
}

func (o GetEventsEventUserInfoOutput) ToGetEventsEventUserInfoOutput() GetEventsEventUserInfoOutput {
	return o
}

func (o GetEventsEventUserInfoOutput) ToGetEventsEventUserInfoOutputWithContext(ctx context.Context) GetEventsEventUserInfoOutput {
	return o
}

// The BMC account ID.
func (o GetEventsEventUserInfoOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsEventUserInfo) string { return v.AccountId }).(pulumi.StringOutput)
}

// The client ID of the application.
func (o GetEventsEventUserInfoOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsEventUserInfo) string { return v.ClientId }).(pulumi.StringOutput)
}

// The logged in user or owner of the client application.
func (o GetEventsEventUserInfoOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventsEventUserInfo) string { return v.Username }).(pulumi.StringOutput)
}

type GetEventsEventUserInfoArrayOutput struct{ *pulumi.OutputState }

func (GetEventsEventUserInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEventsEventUserInfo)(nil)).Elem()
}

func (o GetEventsEventUserInfoArrayOutput) ToGetEventsEventUserInfoArrayOutput() GetEventsEventUserInfoArrayOutput {
	return o
}

func (o GetEventsEventUserInfoArrayOutput) ToGetEventsEventUserInfoArrayOutputWithContext(ctx context.Context) GetEventsEventUserInfoArrayOutput {
	return o
}

func (o GetEventsEventUserInfoArrayOutput) Index(i pulumi.IntInput) GetEventsEventUserInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEventsEventUserInfo {
		return vs[0].([]GetEventsEventUserInfo)[vs[1].(int)]
	}).(GetEventsEventUserInfoOutput)
}

type GetInvoicesPaginatedInvoice struct {
	// The limit of the number of results returned. The number of records returned may be smaller than the limit.
	Limit int `pulumi:"limit"`
	// The number of items to skip in the results.
	Offset int `pulumi:"offset"`
	// The list of invoices.
	Results []GetInvoicesPaginatedInvoiceResult `pulumi:"results"`
	Total   int                                 `pulumi:"total"`
}

// GetInvoicesPaginatedInvoiceInput is an input type that accepts GetInvoicesPaginatedInvoiceArgs and GetInvoicesPaginatedInvoiceOutput values.
// You can construct a concrete instance of `GetInvoicesPaginatedInvoiceInput` via:
//
//	GetInvoicesPaginatedInvoiceArgs{...}
type GetInvoicesPaginatedInvoiceInput interface {
	pulumi.Input

	ToGetInvoicesPaginatedInvoiceOutput() GetInvoicesPaginatedInvoiceOutput
	ToGetInvoicesPaginatedInvoiceOutputWithContext(context.Context) GetInvoicesPaginatedInvoiceOutput
}

type GetInvoicesPaginatedInvoiceArgs struct {
	// The limit of the number of results returned. The number of records returned may be smaller than the limit.
	Limit pulumi.IntInput `pulumi:"limit"`
	// The number of items to skip in the results.
	Offset pulumi.IntInput `pulumi:"offset"`
	// The list of invoices.
	Results GetInvoicesPaginatedInvoiceResultArrayInput `pulumi:"results"`
	Total   pulumi.IntInput                             `pulumi:"total"`
}

func (GetInvoicesPaginatedInvoiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvoicesPaginatedInvoice)(nil)).Elem()
}

func (i GetInvoicesPaginatedInvoiceArgs) ToGetInvoicesPaginatedInvoiceOutput() GetInvoicesPaginatedInvoiceOutput {
	return i.ToGetInvoicesPaginatedInvoiceOutputWithContext(context.Background())
}

func (i GetInvoicesPaginatedInvoiceArgs) ToGetInvoicesPaginatedInvoiceOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvoicesPaginatedInvoiceOutput)
}

// GetInvoicesPaginatedInvoiceArrayInput is an input type that accepts GetInvoicesPaginatedInvoiceArray and GetInvoicesPaginatedInvoiceArrayOutput values.
// You can construct a concrete instance of `GetInvoicesPaginatedInvoiceArrayInput` via:
//
//	GetInvoicesPaginatedInvoiceArray{ GetInvoicesPaginatedInvoiceArgs{...} }
type GetInvoicesPaginatedInvoiceArrayInput interface {
	pulumi.Input

	ToGetInvoicesPaginatedInvoiceArrayOutput() GetInvoicesPaginatedInvoiceArrayOutput
	ToGetInvoicesPaginatedInvoiceArrayOutputWithContext(context.Context) GetInvoicesPaginatedInvoiceArrayOutput
}

type GetInvoicesPaginatedInvoiceArray []GetInvoicesPaginatedInvoiceInput

func (GetInvoicesPaginatedInvoiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvoicesPaginatedInvoice)(nil)).Elem()
}

func (i GetInvoicesPaginatedInvoiceArray) ToGetInvoicesPaginatedInvoiceArrayOutput() GetInvoicesPaginatedInvoiceArrayOutput {
	return i.ToGetInvoicesPaginatedInvoiceArrayOutputWithContext(context.Background())
}

func (i GetInvoicesPaginatedInvoiceArray) ToGetInvoicesPaginatedInvoiceArrayOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvoicesPaginatedInvoiceArrayOutput)
}

type GetInvoicesPaginatedInvoiceOutput struct{ *pulumi.OutputState }

func (GetInvoicesPaginatedInvoiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvoicesPaginatedInvoice)(nil)).Elem()
}

func (o GetInvoicesPaginatedInvoiceOutput) ToGetInvoicesPaginatedInvoiceOutput() GetInvoicesPaginatedInvoiceOutput {
	return o
}

func (o GetInvoicesPaginatedInvoiceOutput) ToGetInvoicesPaginatedInvoiceOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceOutput {
	return o
}

// The limit of the number of results returned. The number of records returned may be smaller than the limit.
func (o GetInvoicesPaginatedInvoiceOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoice) int { return v.Limit }).(pulumi.IntOutput)
}

// The number of items to skip in the results.
func (o GetInvoicesPaginatedInvoiceOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoice) int { return v.Offset }).(pulumi.IntOutput)
}

// The list of invoices.
func (o GetInvoicesPaginatedInvoiceOutput) Results() GetInvoicesPaginatedInvoiceResultArrayOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoice) []GetInvoicesPaginatedInvoiceResult { return v.Results }).(GetInvoicesPaginatedInvoiceResultArrayOutput)
}

func (o GetInvoicesPaginatedInvoiceOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoice) int { return v.Total }).(pulumi.IntOutput)
}

type GetInvoicesPaginatedInvoiceArrayOutput struct{ *pulumi.OutputState }

func (GetInvoicesPaginatedInvoiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvoicesPaginatedInvoice)(nil)).Elem()
}

func (o GetInvoicesPaginatedInvoiceArrayOutput) ToGetInvoicesPaginatedInvoiceArrayOutput() GetInvoicesPaginatedInvoiceArrayOutput {
	return o
}

func (o GetInvoicesPaginatedInvoiceArrayOutput) ToGetInvoicesPaginatedInvoiceArrayOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceArrayOutput {
	return o
}

func (o GetInvoicesPaginatedInvoiceArrayOutput) Index(i pulumi.IntInput) GetInvoicesPaginatedInvoiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvoicesPaginatedInvoice {
		return vs[0].([]GetInvoicesPaginatedInvoice)[vs[1].(int)]
	}).(GetInvoicesPaginatedInvoiceOutput)
}

type GetInvoicesPaginatedInvoiceResult struct {
	// The invoice amount.
	Amount float64 `pulumi:"amount"`
	// The currency of the invoice.
	Currency string `pulumi:"currency"`
	// Date and time when the invoice payment is due.
	DueDate string `pulumi:"dueDate"`
	// The unique resource identifier of the invoice.
	Id string `pulumi:"id"`
	// A user-friendly reference number assigned to the invoice.
	Number string `pulumi:"number"`
	// The invoice outstanding amount.
	OutstandingAmount float64 `pulumi:"outstandingAmount"`
	// Date and time when the invoice was sent.
	SentOn string `pulumi:"sentOn"`
	// Payment status of the invoice. The following values are allowed: `PAID`, `UNPAID`, `OVERDUE`, `PAYMENT_PROCESSING`
	Status string `pulumi:"status"`
}

// GetInvoicesPaginatedInvoiceResultInput is an input type that accepts GetInvoicesPaginatedInvoiceResultArgs and GetInvoicesPaginatedInvoiceResultOutput values.
// You can construct a concrete instance of `GetInvoicesPaginatedInvoiceResultInput` via:
//
//	GetInvoicesPaginatedInvoiceResultArgs{...}
type GetInvoicesPaginatedInvoiceResultInput interface {
	pulumi.Input

	ToGetInvoicesPaginatedInvoiceResultOutput() GetInvoicesPaginatedInvoiceResultOutput
	ToGetInvoicesPaginatedInvoiceResultOutputWithContext(context.Context) GetInvoicesPaginatedInvoiceResultOutput
}

type GetInvoicesPaginatedInvoiceResultArgs struct {
	// The invoice amount.
	Amount pulumi.Float64Input `pulumi:"amount"`
	// The currency of the invoice.
	Currency pulumi.StringInput `pulumi:"currency"`
	// Date and time when the invoice payment is due.
	DueDate pulumi.StringInput `pulumi:"dueDate"`
	// The unique resource identifier of the invoice.
	Id pulumi.StringInput `pulumi:"id"`
	// A user-friendly reference number assigned to the invoice.
	Number pulumi.StringInput `pulumi:"number"`
	// The invoice outstanding amount.
	OutstandingAmount pulumi.Float64Input `pulumi:"outstandingAmount"`
	// Date and time when the invoice was sent.
	SentOn pulumi.StringInput `pulumi:"sentOn"`
	// Payment status of the invoice. The following values are allowed: `PAID`, `UNPAID`, `OVERDUE`, `PAYMENT_PROCESSING`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetInvoicesPaginatedInvoiceResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvoicesPaginatedInvoiceResult)(nil)).Elem()
}

func (i GetInvoicesPaginatedInvoiceResultArgs) ToGetInvoicesPaginatedInvoiceResultOutput() GetInvoicesPaginatedInvoiceResultOutput {
	return i.ToGetInvoicesPaginatedInvoiceResultOutputWithContext(context.Background())
}

func (i GetInvoicesPaginatedInvoiceResultArgs) ToGetInvoicesPaginatedInvoiceResultOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvoicesPaginatedInvoiceResultOutput)
}

// GetInvoicesPaginatedInvoiceResultArrayInput is an input type that accepts GetInvoicesPaginatedInvoiceResultArray and GetInvoicesPaginatedInvoiceResultArrayOutput values.
// You can construct a concrete instance of `GetInvoicesPaginatedInvoiceResultArrayInput` via:
//
//	GetInvoicesPaginatedInvoiceResultArray{ GetInvoicesPaginatedInvoiceResultArgs{...} }
type GetInvoicesPaginatedInvoiceResultArrayInput interface {
	pulumi.Input

	ToGetInvoicesPaginatedInvoiceResultArrayOutput() GetInvoicesPaginatedInvoiceResultArrayOutput
	ToGetInvoicesPaginatedInvoiceResultArrayOutputWithContext(context.Context) GetInvoicesPaginatedInvoiceResultArrayOutput
}

type GetInvoicesPaginatedInvoiceResultArray []GetInvoicesPaginatedInvoiceResultInput

func (GetInvoicesPaginatedInvoiceResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvoicesPaginatedInvoiceResult)(nil)).Elem()
}

func (i GetInvoicesPaginatedInvoiceResultArray) ToGetInvoicesPaginatedInvoiceResultArrayOutput() GetInvoicesPaginatedInvoiceResultArrayOutput {
	return i.ToGetInvoicesPaginatedInvoiceResultArrayOutputWithContext(context.Background())
}

func (i GetInvoicesPaginatedInvoiceResultArray) ToGetInvoicesPaginatedInvoiceResultArrayOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInvoicesPaginatedInvoiceResultArrayOutput)
}

type GetInvoicesPaginatedInvoiceResultOutput struct{ *pulumi.OutputState }

func (GetInvoicesPaginatedInvoiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInvoicesPaginatedInvoiceResult)(nil)).Elem()
}

func (o GetInvoicesPaginatedInvoiceResultOutput) ToGetInvoicesPaginatedInvoiceResultOutput() GetInvoicesPaginatedInvoiceResultOutput {
	return o
}

func (o GetInvoicesPaginatedInvoiceResultOutput) ToGetInvoicesPaginatedInvoiceResultOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceResultOutput {
	return o
}

// The invoice amount.
func (o GetInvoicesPaginatedInvoiceResultOutput) Amount() pulumi.Float64Output {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) float64 { return v.Amount }).(pulumi.Float64Output)
}

// The currency of the invoice.
func (o GetInvoicesPaginatedInvoiceResultOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) string { return v.Currency }).(pulumi.StringOutput)
}

// Date and time when the invoice payment is due.
func (o GetInvoicesPaginatedInvoiceResultOutput) DueDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) string { return v.DueDate }).(pulumi.StringOutput)
}

// The unique resource identifier of the invoice.
func (o GetInvoicesPaginatedInvoiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// A user-friendly reference number assigned to the invoice.
func (o GetInvoicesPaginatedInvoiceResultOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) string { return v.Number }).(pulumi.StringOutput)
}

// The invoice outstanding amount.
func (o GetInvoicesPaginatedInvoiceResultOutput) OutstandingAmount() pulumi.Float64Output {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) float64 { return v.OutstandingAmount }).(pulumi.Float64Output)
}

// Date and time when the invoice was sent.
func (o GetInvoicesPaginatedInvoiceResultOutput) SentOn() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) string { return v.SentOn }).(pulumi.StringOutput)
}

// Payment status of the invoice. The following values are allowed: `PAID`, `UNPAID`, `OVERDUE`, `PAYMENT_PROCESSING`
func (o GetInvoicesPaginatedInvoiceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInvoicesPaginatedInvoiceResult) string { return v.Status }).(pulumi.StringOutput)
}

type GetInvoicesPaginatedInvoiceResultArrayOutput struct{ *pulumi.OutputState }

func (GetInvoicesPaginatedInvoiceResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInvoicesPaginatedInvoiceResult)(nil)).Elem()
}

func (o GetInvoicesPaginatedInvoiceResultArrayOutput) ToGetInvoicesPaginatedInvoiceResultArrayOutput() GetInvoicesPaginatedInvoiceResultArrayOutput {
	return o
}

func (o GetInvoicesPaginatedInvoiceResultArrayOutput) ToGetInvoicesPaginatedInvoiceResultArrayOutputWithContext(ctx context.Context) GetInvoicesPaginatedInvoiceResultArrayOutput {
	return o
}

func (o GetInvoicesPaginatedInvoiceResultArrayOutput) Index(i pulumi.IntInput) GetInvoicesPaginatedInvoiceResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInvoicesPaginatedInvoiceResult {
		return vs[0].([]GetInvoicesPaginatedInvoiceResult)[vs[1].(int)]
	}).(GetInvoicesPaginatedInvoiceResultOutput)
}

type GetIpBlockTag struct {
	// Who the tag was created by.
	CreatedBy string `pulumi:"createdBy"`
	// The IP Block identifier.
	Id string `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag bool `pulumi:"isBillingTag"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// The value of the tag assigned to the IP Block.
	Value string `pulumi:"value"`
}

// GetIpBlockTagInput is an input type that accepts GetIpBlockTagArgs and GetIpBlockTagOutput values.
// You can construct a concrete instance of `GetIpBlockTagInput` via:
//
//	GetIpBlockTagArgs{...}
type GetIpBlockTagInput interface {
	pulumi.Input

	ToGetIpBlockTagOutput() GetIpBlockTagOutput
	ToGetIpBlockTagOutputWithContext(context.Context) GetIpBlockTagOutput
}

type GetIpBlockTagArgs struct {
	// Who the tag was created by.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The IP Block identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag pulumi.BoolInput `pulumi:"isBillingTag"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the tag assigned to the IP Block.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetIpBlockTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpBlockTag)(nil)).Elem()
}

func (i GetIpBlockTagArgs) ToGetIpBlockTagOutput() GetIpBlockTagOutput {
	return i.ToGetIpBlockTagOutputWithContext(context.Background())
}

func (i GetIpBlockTagArgs) ToGetIpBlockTagOutputWithContext(ctx context.Context) GetIpBlockTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpBlockTagOutput)
}

// GetIpBlockTagArrayInput is an input type that accepts GetIpBlockTagArray and GetIpBlockTagArrayOutput values.
// You can construct a concrete instance of `GetIpBlockTagArrayInput` via:
//
//	GetIpBlockTagArray{ GetIpBlockTagArgs{...} }
type GetIpBlockTagArrayInput interface {
	pulumi.Input

	ToGetIpBlockTagArrayOutput() GetIpBlockTagArrayOutput
	ToGetIpBlockTagArrayOutputWithContext(context.Context) GetIpBlockTagArrayOutput
}

type GetIpBlockTagArray []GetIpBlockTagInput

func (GetIpBlockTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpBlockTag)(nil)).Elem()
}

func (i GetIpBlockTagArray) ToGetIpBlockTagArrayOutput() GetIpBlockTagArrayOutput {
	return i.ToGetIpBlockTagArrayOutputWithContext(context.Background())
}

func (i GetIpBlockTagArray) ToGetIpBlockTagArrayOutputWithContext(ctx context.Context) GetIpBlockTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpBlockTagArrayOutput)
}

type GetIpBlockTagOutput struct{ *pulumi.OutputState }

func (GetIpBlockTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpBlockTag)(nil)).Elem()
}

func (o GetIpBlockTagOutput) ToGetIpBlockTagOutput() GetIpBlockTagOutput {
	return o
}

func (o GetIpBlockTagOutput) ToGetIpBlockTagOutputWithContext(ctx context.Context) GetIpBlockTagOutput {
	return o
}

// Who the tag was created by.
func (o GetIpBlockTagOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpBlockTag) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The IP Block identifier.
func (o GetIpBlockTagOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpBlockTag) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o GetIpBlockTagOutput) IsBillingTag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpBlockTag) bool { return v.IsBillingTag }).(pulumi.BoolOutput)
}

// The name of the tag.
func (o GetIpBlockTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpBlockTag) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the tag assigned to the IP Block.
func (o GetIpBlockTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpBlockTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetIpBlockTagArrayOutput struct{ *pulumi.OutputState }

func (GetIpBlockTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpBlockTag)(nil)).Elem()
}

func (o GetIpBlockTagArrayOutput) ToGetIpBlockTagArrayOutput() GetIpBlockTagArrayOutput {
	return o
}

func (o GetIpBlockTagArrayOutput) ToGetIpBlockTagArrayOutputWithContext(ctx context.Context) GetIpBlockTagArrayOutput {
	return o
}

func (o GetIpBlockTagArrayOutput) Index(i pulumi.IntInput) GetIpBlockTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpBlockTag {
		return vs[0].([]GetIpBlockTag)[vs[1].(int)]
	}).(GetIpBlockTagOutput)
}

type GetLocationsLocation struct {
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
	Location string `pulumi:"location"`
	// Description of the location.
	LocationDescription string `pulumi:"locationDescription"`
	// The list of product categories.
	ProductCategories []GetLocationsLocationProductCategory `pulumi:"productCategories"`
}

// GetLocationsLocationInput is an input type that accepts GetLocationsLocationArgs and GetLocationsLocationOutput values.
// You can construct a concrete instance of `GetLocationsLocationInput` via:
//
//	GetLocationsLocationArgs{...}
type GetLocationsLocationInput interface {
	pulumi.Input

	ToGetLocationsLocationOutput() GetLocationsLocationOutput
	ToGetLocationsLocationOutputWithContext(context.Context) GetLocationsLocationOutput
}

type GetLocationsLocationArgs struct {
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
	Location pulumi.StringInput `pulumi:"location"`
	// Description of the location.
	LocationDescription pulumi.StringInput `pulumi:"locationDescription"`
	// The list of product categories.
	ProductCategories GetLocationsLocationProductCategoryArrayInput `pulumi:"productCategories"`
}

func (GetLocationsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return i.ToGetLocationsLocationOutputWithContext(context.Background())
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationOutput)
}

// GetLocationsLocationArrayInput is an input type that accepts GetLocationsLocationArray and GetLocationsLocationArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationArrayInput` via:
//
//	GetLocationsLocationArray{ GetLocationsLocationArgs{...} }
type GetLocationsLocationArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput
	ToGetLocationsLocationArrayOutputWithContext(context.Context) GetLocationsLocationArrayOutput
}

type GetLocationsLocationArray []GetLocationsLocationInput

func (GetLocationsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return i.ToGetLocationsLocationArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationArrayOutput)
}

type GetLocationsLocationOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return o
}

// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
func (o GetLocationsLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Location }).(pulumi.StringOutput)
}

// Description of the location.
func (o GetLocationsLocationOutput) LocationDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.LocationDescription }).(pulumi.StringOutput)
}

// The list of product categories.
func (o GetLocationsLocationOutput) ProductCategories() GetLocationsLocationProductCategoryArrayOutput {
	return o.ApplyT(func(v GetLocationsLocation) []GetLocationsLocationProductCategory { return v.ProductCategories }).(GetLocationsLocationProductCategoryArrayOutput)
}

type GetLocationsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocation {
		return vs[0].([]GetLocationsLocation)[vs[1].(int)]
	}).(GetLocationsLocationOutput)
}

type GetLocationsLocationProductCategory struct {
	// The product category. Currently the following values are allowed: `SERVER`, `BANDWIDTH`, `OPERATING_SYSTEM`, `PUBLIC_IP` and `STORAGE`.
	ProductCategory string `pulumi:"productCategory"`
	// Description of the product category.
	ProductCategoryDescription string `pulumi:"productCategoryDescription"`
}

// GetLocationsLocationProductCategoryInput is an input type that accepts GetLocationsLocationProductCategoryArgs and GetLocationsLocationProductCategoryOutput values.
// You can construct a concrete instance of `GetLocationsLocationProductCategoryInput` via:
//
//	GetLocationsLocationProductCategoryArgs{...}
type GetLocationsLocationProductCategoryInput interface {
	pulumi.Input

	ToGetLocationsLocationProductCategoryOutput() GetLocationsLocationProductCategoryOutput
	ToGetLocationsLocationProductCategoryOutputWithContext(context.Context) GetLocationsLocationProductCategoryOutput
}

type GetLocationsLocationProductCategoryArgs struct {
	// The product category. Currently the following values are allowed: `SERVER`, `BANDWIDTH`, `OPERATING_SYSTEM`, `PUBLIC_IP` and `STORAGE`.
	ProductCategory pulumi.StringInput `pulumi:"productCategory"`
	// Description of the product category.
	ProductCategoryDescription pulumi.StringInput `pulumi:"productCategoryDescription"`
}

func (GetLocationsLocationProductCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocationProductCategory)(nil)).Elem()
}

func (i GetLocationsLocationProductCategoryArgs) ToGetLocationsLocationProductCategoryOutput() GetLocationsLocationProductCategoryOutput {
	return i.ToGetLocationsLocationProductCategoryOutputWithContext(context.Background())
}

func (i GetLocationsLocationProductCategoryArgs) ToGetLocationsLocationProductCategoryOutputWithContext(ctx context.Context) GetLocationsLocationProductCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationProductCategoryOutput)
}

// GetLocationsLocationProductCategoryArrayInput is an input type that accepts GetLocationsLocationProductCategoryArray and GetLocationsLocationProductCategoryArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationProductCategoryArrayInput` via:
//
//	GetLocationsLocationProductCategoryArray{ GetLocationsLocationProductCategoryArgs{...} }
type GetLocationsLocationProductCategoryArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationProductCategoryArrayOutput() GetLocationsLocationProductCategoryArrayOutput
	ToGetLocationsLocationProductCategoryArrayOutputWithContext(context.Context) GetLocationsLocationProductCategoryArrayOutput
}

type GetLocationsLocationProductCategoryArray []GetLocationsLocationProductCategoryInput

func (GetLocationsLocationProductCategoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocationProductCategory)(nil)).Elem()
}

func (i GetLocationsLocationProductCategoryArray) ToGetLocationsLocationProductCategoryArrayOutput() GetLocationsLocationProductCategoryArrayOutput {
	return i.ToGetLocationsLocationProductCategoryArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationProductCategoryArray) ToGetLocationsLocationProductCategoryArrayOutputWithContext(ctx context.Context) GetLocationsLocationProductCategoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationProductCategoryArrayOutput)
}

type GetLocationsLocationProductCategoryOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationProductCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocationProductCategory)(nil)).Elem()
}

func (o GetLocationsLocationProductCategoryOutput) ToGetLocationsLocationProductCategoryOutput() GetLocationsLocationProductCategoryOutput {
	return o
}

func (o GetLocationsLocationProductCategoryOutput) ToGetLocationsLocationProductCategoryOutputWithContext(ctx context.Context) GetLocationsLocationProductCategoryOutput {
	return o
}

// The product category. Currently the following values are allowed: `SERVER`, `BANDWIDTH`, `OPERATING_SYSTEM`, `PUBLIC_IP` and `STORAGE`.
func (o GetLocationsLocationProductCategoryOutput) ProductCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocationProductCategory) string { return v.ProductCategory }).(pulumi.StringOutput)
}

// Description of the product category.
func (o GetLocationsLocationProductCategoryOutput) ProductCategoryDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocationProductCategory) string { return v.ProductCategoryDescription }).(pulumi.StringOutput)
}

type GetLocationsLocationProductCategoryArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationProductCategoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocationProductCategory)(nil)).Elem()
}

func (o GetLocationsLocationProductCategoryArrayOutput) ToGetLocationsLocationProductCategoryArrayOutput() GetLocationsLocationProductCategoryArrayOutput {
	return o
}

func (o GetLocationsLocationProductCategoryArrayOutput) ToGetLocationsLocationProductCategoryArrayOutputWithContext(ctx context.Context) GetLocationsLocationProductCategoryArrayOutput {
	return o
}

func (o GetLocationsLocationProductCategoryArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationProductCategoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocationProductCategory {
		return vs[0].([]GetLocationsLocationProductCategory)[vs[1].(int)]
	}).(GetLocationsLocationProductCategoryOutput)
}

type GetPrivateNetworkMembership struct {
	// List of public IPs associated to the resource.
	Ips []string `pulumi:"ips"`
	// The resource identifier.
	ResourceId string `pulumi:"resourceId"`
	// The resource's type.
	ResourceType string `pulumi:"resourceType"`
}

// GetPrivateNetworkMembershipInput is an input type that accepts GetPrivateNetworkMembershipArgs and GetPrivateNetworkMembershipOutput values.
// You can construct a concrete instance of `GetPrivateNetworkMembershipInput` via:
//
//	GetPrivateNetworkMembershipArgs{...}
type GetPrivateNetworkMembershipInput interface {
	pulumi.Input

	ToGetPrivateNetworkMembershipOutput() GetPrivateNetworkMembershipOutput
	ToGetPrivateNetworkMembershipOutputWithContext(context.Context) GetPrivateNetworkMembershipOutput
}

type GetPrivateNetworkMembershipArgs struct {
	// List of public IPs associated to the resource.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The resource identifier.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The resource's type.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetPrivateNetworkMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkMembership)(nil)).Elem()
}

func (i GetPrivateNetworkMembershipArgs) ToGetPrivateNetworkMembershipOutput() GetPrivateNetworkMembershipOutput {
	return i.ToGetPrivateNetworkMembershipOutputWithContext(context.Background())
}

func (i GetPrivateNetworkMembershipArgs) ToGetPrivateNetworkMembershipOutputWithContext(ctx context.Context) GetPrivateNetworkMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkMembershipOutput)
}

// GetPrivateNetworkMembershipArrayInput is an input type that accepts GetPrivateNetworkMembershipArray and GetPrivateNetworkMembershipArrayOutput values.
// You can construct a concrete instance of `GetPrivateNetworkMembershipArrayInput` via:
//
//	GetPrivateNetworkMembershipArray{ GetPrivateNetworkMembershipArgs{...} }
type GetPrivateNetworkMembershipArrayInput interface {
	pulumi.Input

	ToGetPrivateNetworkMembershipArrayOutput() GetPrivateNetworkMembershipArrayOutput
	ToGetPrivateNetworkMembershipArrayOutputWithContext(context.Context) GetPrivateNetworkMembershipArrayOutput
}

type GetPrivateNetworkMembershipArray []GetPrivateNetworkMembershipInput

func (GetPrivateNetworkMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkMembership)(nil)).Elem()
}

func (i GetPrivateNetworkMembershipArray) ToGetPrivateNetworkMembershipArrayOutput() GetPrivateNetworkMembershipArrayOutput {
	return i.ToGetPrivateNetworkMembershipArrayOutputWithContext(context.Background())
}

func (i GetPrivateNetworkMembershipArray) ToGetPrivateNetworkMembershipArrayOutputWithContext(ctx context.Context) GetPrivateNetworkMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkMembershipArrayOutput)
}

type GetPrivateNetworkMembershipOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkMembership)(nil)).Elem()
}

func (o GetPrivateNetworkMembershipOutput) ToGetPrivateNetworkMembershipOutput() GetPrivateNetworkMembershipOutput {
	return o
}

func (o GetPrivateNetworkMembershipOutput) ToGetPrivateNetworkMembershipOutputWithContext(ctx context.Context) GetPrivateNetworkMembershipOutput {
	return o
}

// List of public IPs associated to the resource.
func (o GetPrivateNetworkMembershipOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivateNetworkMembership) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The resource identifier.
func (o GetPrivateNetworkMembershipOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkMembership) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The resource's type.
func (o GetPrivateNetworkMembershipOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkMembership) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetPrivateNetworkMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkMembership)(nil)).Elem()
}

func (o GetPrivateNetworkMembershipArrayOutput) ToGetPrivateNetworkMembershipArrayOutput() GetPrivateNetworkMembershipArrayOutput {
	return o
}

func (o GetPrivateNetworkMembershipArrayOutput) ToGetPrivateNetworkMembershipArrayOutputWithContext(ctx context.Context) GetPrivateNetworkMembershipArrayOutput {
	return o
}

func (o GetPrivateNetworkMembershipArrayOutput) Index(i pulumi.IntInput) GetPrivateNetworkMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateNetworkMembership {
		return vs[0].([]GetPrivateNetworkMembership)[vs[1].(int)]
	}).(GetPrivateNetworkMembershipOutput)
}

type GetPrivateNetworkServer struct {
	// The private network identifier.
	Id string `pulumi:"id"`
	// List of public IPs associated to the resource.
	Ips []string `pulumi:"ips"`
}

// GetPrivateNetworkServerInput is an input type that accepts GetPrivateNetworkServerArgs and GetPrivateNetworkServerOutput values.
// You can construct a concrete instance of `GetPrivateNetworkServerInput` via:
//
//	GetPrivateNetworkServerArgs{...}
type GetPrivateNetworkServerInput interface {
	pulumi.Input

	ToGetPrivateNetworkServerOutput() GetPrivateNetworkServerOutput
	ToGetPrivateNetworkServerOutputWithContext(context.Context) GetPrivateNetworkServerOutput
}

type GetPrivateNetworkServerArgs struct {
	// The private network identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// List of public IPs associated to the resource.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
}

func (GetPrivateNetworkServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkServer)(nil)).Elem()
}

func (i GetPrivateNetworkServerArgs) ToGetPrivateNetworkServerOutput() GetPrivateNetworkServerOutput {
	return i.ToGetPrivateNetworkServerOutputWithContext(context.Background())
}

func (i GetPrivateNetworkServerArgs) ToGetPrivateNetworkServerOutputWithContext(ctx context.Context) GetPrivateNetworkServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkServerOutput)
}

// GetPrivateNetworkServerArrayInput is an input type that accepts GetPrivateNetworkServerArray and GetPrivateNetworkServerArrayOutput values.
// You can construct a concrete instance of `GetPrivateNetworkServerArrayInput` via:
//
//	GetPrivateNetworkServerArray{ GetPrivateNetworkServerArgs{...} }
type GetPrivateNetworkServerArrayInput interface {
	pulumi.Input

	ToGetPrivateNetworkServerArrayOutput() GetPrivateNetworkServerArrayOutput
	ToGetPrivateNetworkServerArrayOutputWithContext(context.Context) GetPrivateNetworkServerArrayOutput
}

type GetPrivateNetworkServerArray []GetPrivateNetworkServerInput

func (GetPrivateNetworkServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkServer)(nil)).Elem()
}

func (i GetPrivateNetworkServerArray) ToGetPrivateNetworkServerArrayOutput() GetPrivateNetworkServerArrayOutput {
	return i.ToGetPrivateNetworkServerArrayOutputWithContext(context.Background())
}

func (i GetPrivateNetworkServerArray) ToGetPrivateNetworkServerArrayOutputWithContext(ctx context.Context) GetPrivateNetworkServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateNetworkServerArrayOutput)
}

type GetPrivateNetworkServerOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateNetworkServer)(nil)).Elem()
}

func (o GetPrivateNetworkServerOutput) ToGetPrivateNetworkServerOutput() GetPrivateNetworkServerOutput {
	return o
}

func (o GetPrivateNetworkServerOutput) ToGetPrivateNetworkServerOutputWithContext(ctx context.Context) GetPrivateNetworkServerOutput {
	return o
}

// The private network identifier.
func (o GetPrivateNetworkServerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrivateNetworkServer) string { return v.Id }).(pulumi.StringOutput)
}

// List of public IPs associated to the resource.
func (o GetPrivateNetworkServerOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrivateNetworkServer) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

type GetPrivateNetworkServerArrayOutput struct{ *pulumi.OutputState }

func (GetPrivateNetworkServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateNetworkServer)(nil)).Elem()
}

func (o GetPrivateNetworkServerArrayOutput) ToGetPrivateNetworkServerArrayOutput() GetPrivateNetworkServerArrayOutput {
	return o
}

func (o GetPrivateNetworkServerArrayOutput) ToGetPrivateNetworkServerArrayOutputWithContext(ctx context.Context) GetPrivateNetworkServerArrayOutput {
	return o
}

func (o GetPrivateNetworkServerArrayOutput) Index(i pulumi.IntInput) GetPrivateNetworkServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrivateNetworkServer {
		return vs[0].([]GetPrivateNetworkServer)[vs[1].(int)]
	}).(GetPrivateNetworkServerOutput)
}

type GetProductAvailabilityProductAvailability struct {
	// Infos about location, solutions and availability for a product.
	LocationAvailabilityDetails []GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail `pulumi:"locationAvailabilityDetails"`
	// Product category. Currently only `SERVER` category is supported.
	ProductCategory string `pulumi:"productCategory"`
	// The code identifying the product. This code has significance across all locations.
	ProductCode string `pulumi:"productCode"`
}

// GetProductAvailabilityProductAvailabilityInput is an input type that accepts GetProductAvailabilityProductAvailabilityArgs and GetProductAvailabilityProductAvailabilityOutput values.
// You can construct a concrete instance of `GetProductAvailabilityProductAvailabilityInput` via:
//
//	GetProductAvailabilityProductAvailabilityArgs{...}
type GetProductAvailabilityProductAvailabilityInput interface {
	pulumi.Input

	ToGetProductAvailabilityProductAvailabilityOutput() GetProductAvailabilityProductAvailabilityOutput
	ToGetProductAvailabilityProductAvailabilityOutputWithContext(context.Context) GetProductAvailabilityProductAvailabilityOutput
}

type GetProductAvailabilityProductAvailabilityArgs struct {
	// Infos about location, solutions and availability for a product.
	LocationAvailabilityDetails GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayInput `pulumi:"locationAvailabilityDetails"`
	// Product category. Currently only `SERVER` category is supported.
	ProductCategory pulumi.StringInput `pulumi:"productCategory"`
	// The code identifying the product. This code has significance across all locations.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
}

func (GetProductAvailabilityProductAvailabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductAvailabilityProductAvailability)(nil)).Elem()
}

func (i GetProductAvailabilityProductAvailabilityArgs) ToGetProductAvailabilityProductAvailabilityOutput() GetProductAvailabilityProductAvailabilityOutput {
	return i.ToGetProductAvailabilityProductAvailabilityOutputWithContext(context.Background())
}

func (i GetProductAvailabilityProductAvailabilityArgs) ToGetProductAvailabilityProductAvailabilityOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductAvailabilityProductAvailabilityOutput)
}

// GetProductAvailabilityProductAvailabilityArrayInput is an input type that accepts GetProductAvailabilityProductAvailabilityArray and GetProductAvailabilityProductAvailabilityArrayOutput values.
// You can construct a concrete instance of `GetProductAvailabilityProductAvailabilityArrayInput` via:
//
//	GetProductAvailabilityProductAvailabilityArray{ GetProductAvailabilityProductAvailabilityArgs{...} }
type GetProductAvailabilityProductAvailabilityArrayInput interface {
	pulumi.Input

	ToGetProductAvailabilityProductAvailabilityArrayOutput() GetProductAvailabilityProductAvailabilityArrayOutput
	ToGetProductAvailabilityProductAvailabilityArrayOutputWithContext(context.Context) GetProductAvailabilityProductAvailabilityArrayOutput
}

type GetProductAvailabilityProductAvailabilityArray []GetProductAvailabilityProductAvailabilityInput

func (GetProductAvailabilityProductAvailabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductAvailabilityProductAvailability)(nil)).Elem()
}

func (i GetProductAvailabilityProductAvailabilityArray) ToGetProductAvailabilityProductAvailabilityArrayOutput() GetProductAvailabilityProductAvailabilityArrayOutput {
	return i.ToGetProductAvailabilityProductAvailabilityArrayOutputWithContext(context.Background())
}

func (i GetProductAvailabilityProductAvailabilityArray) ToGetProductAvailabilityProductAvailabilityArrayOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductAvailabilityProductAvailabilityArrayOutput)
}

type GetProductAvailabilityProductAvailabilityOutput struct{ *pulumi.OutputState }

func (GetProductAvailabilityProductAvailabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductAvailabilityProductAvailability)(nil)).Elem()
}

func (o GetProductAvailabilityProductAvailabilityOutput) ToGetProductAvailabilityProductAvailabilityOutput() GetProductAvailabilityProductAvailabilityOutput {
	return o
}

func (o GetProductAvailabilityProductAvailabilityOutput) ToGetProductAvailabilityProductAvailabilityOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityOutput {
	return o
}

// Infos about location, solutions and availability for a product.
func (o GetProductAvailabilityProductAvailabilityOutput) LocationAvailabilityDetails() GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailability) []GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail {
		return v.LocationAvailabilityDetails
	}).(GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput)
}

// Product category. Currently only `SERVER` category is supported.
func (o GetProductAvailabilityProductAvailabilityOutput) ProductCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailability) string { return v.ProductCategory }).(pulumi.StringOutput)
}

// The code identifying the product. This code has significance across all locations.
func (o GetProductAvailabilityProductAvailabilityOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailability) string { return v.ProductCode }).(pulumi.StringOutput)
}

type GetProductAvailabilityProductAvailabilityArrayOutput struct{ *pulumi.OutputState }

func (GetProductAvailabilityProductAvailabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductAvailabilityProductAvailability)(nil)).Elem()
}

func (o GetProductAvailabilityProductAvailabilityArrayOutput) ToGetProductAvailabilityProductAvailabilityArrayOutput() GetProductAvailabilityProductAvailabilityArrayOutput {
	return o
}

func (o GetProductAvailabilityProductAvailabilityArrayOutput) ToGetProductAvailabilityProductAvailabilityArrayOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityArrayOutput {
	return o
}

func (o GetProductAvailabilityProductAvailabilityArrayOutput) Index(i pulumi.IntInput) GetProductAvailabilityProductAvailabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductAvailabilityProductAvailability {
		return vs[0].([]GetProductAvailabilityProductAvailability)[vs[1].(int)]
	}).(GetProductAvailabilityProductAvailabilityOutput)
}

type GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail struct {
	// Total available quantity of product in specific location. Max value is 10.
	AvailableQuantity int `pulumi:"availableQuantity"`
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
	Location string `pulumi:"location"`
	// Is product available in specific location for requested quantity.
	MinQuantityAvailable bool `pulumi:"minQuantityAvailable"`
	// Requested quantity.
	MinQuantityRequested int `pulumi:"minQuantityRequested"`
	// Solutions supported in specific location for a product.
	Solutions []string `pulumi:"solutions"`
}

// GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailInput is an input type that accepts GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs and GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput values.
// You can construct a concrete instance of `GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailInput` via:
//
//	GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs{...}
type GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailInput interface {
	pulumi.Input

	ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput() GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput
	ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutputWithContext(context.Context) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput
}

type GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs struct {
	// Total available quantity of product in specific location. Max value is 10.
	AvailableQuantity pulumi.IntInput `pulumi:"availableQuantity"`
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
	Location pulumi.StringInput `pulumi:"location"`
	// Is product available in specific location for requested quantity.
	MinQuantityAvailable pulumi.BoolInput `pulumi:"minQuantityAvailable"`
	// Requested quantity.
	MinQuantityRequested pulumi.IntInput `pulumi:"minQuantityRequested"`
	// Solutions supported in specific location for a product.
	Solutions pulumi.StringArrayInput `pulumi:"solutions"`
}

func (GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail)(nil)).Elem()
}

func (i GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput() GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput {
	return i.ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutputWithContext(context.Background())
}

func (i GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput)
}

// GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayInput is an input type that accepts GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArray and GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput values.
// You can construct a concrete instance of `GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayInput` via:
//
//	GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArray{ GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs{...} }
type GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayInput interface {
	pulumi.Input

	ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput() GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput
	ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutputWithContext(context.Context) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput
}

type GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArray []GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailInput

func (GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail)(nil)).Elem()
}

func (i GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArray) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput() GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput {
	return i.ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutputWithContext(context.Background())
}

func (i GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArray) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput)
}

type GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput struct{ *pulumi.OutputState }

func (GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail)(nil)).Elem()
}

func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput() GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput {
	return o
}

func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput {
	return o
}

// Total available quantity of product in specific location. Max value is 10.
func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) AvailableQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail) int {
		return v.AvailableQuantity
	}).(pulumi.IntOutput)
}

// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA` and `AUS`.
func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail) string { return v.Location }).(pulumi.StringOutput)
}

// Is product available in specific location for requested quantity.
func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) MinQuantityAvailable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail) bool {
		return v.MinQuantityAvailable
	}).(pulumi.BoolOutput)
}

// Requested quantity.
func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) MinQuantityRequested() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail) int {
		return v.MinQuantityRequested
	}).(pulumi.IntOutput)
}

// Solutions supported in specific location for a product.
func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput) Solutions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail) []string {
		return v.Solutions
	}).(pulumi.StringArrayOutput)
}

type GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput struct{ *pulumi.OutputState }

func (GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail)(nil)).Elem()
}

func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput() GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput {
	return o
}

func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput) ToGetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutputWithContext(ctx context.Context) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput {
	return o
}

func (o GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput) Index(i pulumi.IntInput) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail {
		return vs[0].([]GetProductAvailabilityProductAvailabilityLocationAvailabilityDetail)[vs[1].(int)]
	}).(GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput)
}

type GetProductsProduct struct {
	// Details of the server product.
	Metadatas []GetProductsProductMetadata `pulumi:"metadatas"`
	// The pricing plans available for this product.
	Plans []GetProductsProductPlan `pulumi:"plans"`
	// The product category.
	ProductCategory string `pulumi:"productCategory"`
	// The code identifying the product. This code has significance across all locations.
	ProductCode string `pulumi:"productCode"`
}

// GetProductsProductInput is an input type that accepts GetProductsProductArgs and GetProductsProductOutput values.
// You can construct a concrete instance of `GetProductsProductInput` via:
//
//	GetProductsProductArgs{...}
type GetProductsProductInput interface {
	pulumi.Input

	ToGetProductsProductOutput() GetProductsProductOutput
	ToGetProductsProductOutputWithContext(context.Context) GetProductsProductOutput
}

type GetProductsProductArgs struct {
	// Details of the server product.
	Metadatas GetProductsProductMetadataArrayInput `pulumi:"metadatas"`
	// The pricing plans available for this product.
	Plans GetProductsProductPlanArrayInput `pulumi:"plans"`
	// The product category.
	ProductCategory pulumi.StringInput `pulumi:"productCategory"`
	// The code identifying the product. This code has significance across all locations.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
}

func (GetProductsProductArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProduct)(nil)).Elem()
}

func (i GetProductsProductArgs) ToGetProductsProductOutput() GetProductsProductOutput {
	return i.ToGetProductsProductOutputWithContext(context.Background())
}

func (i GetProductsProductArgs) ToGetProductsProductOutputWithContext(ctx context.Context) GetProductsProductOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductOutput)
}

// GetProductsProductArrayInput is an input type that accepts GetProductsProductArray and GetProductsProductArrayOutput values.
// You can construct a concrete instance of `GetProductsProductArrayInput` via:
//
//	GetProductsProductArray{ GetProductsProductArgs{...} }
type GetProductsProductArrayInput interface {
	pulumi.Input

	ToGetProductsProductArrayOutput() GetProductsProductArrayOutput
	ToGetProductsProductArrayOutputWithContext(context.Context) GetProductsProductArrayOutput
}

type GetProductsProductArray []GetProductsProductInput

func (GetProductsProductArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProduct)(nil)).Elem()
}

func (i GetProductsProductArray) ToGetProductsProductArrayOutput() GetProductsProductArrayOutput {
	return i.ToGetProductsProductArrayOutputWithContext(context.Background())
}

func (i GetProductsProductArray) ToGetProductsProductArrayOutputWithContext(ctx context.Context) GetProductsProductArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductArrayOutput)
}

type GetProductsProductOutput struct{ *pulumi.OutputState }

func (GetProductsProductOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProduct)(nil)).Elem()
}

func (o GetProductsProductOutput) ToGetProductsProductOutput() GetProductsProductOutput {
	return o
}

func (o GetProductsProductOutput) ToGetProductsProductOutputWithContext(ctx context.Context) GetProductsProductOutput {
	return o
}

// Details of the server product.
func (o GetProductsProductOutput) Metadatas() GetProductsProductMetadataArrayOutput {
	return o.ApplyT(func(v GetProductsProduct) []GetProductsProductMetadata { return v.Metadatas }).(GetProductsProductMetadataArrayOutput)
}

// The pricing plans available for this product.
func (o GetProductsProductOutput) Plans() GetProductsProductPlanArrayOutput {
	return o.ApplyT(func(v GetProductsProduct) []GetProductsProductPlan { return v.Plans }).(GetProductsProductPlanArrayOutput)
}

// The product category.
func (o GetProductsProductOutput) ProductCategory() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.ProductCategory }).(pulumi.StringOutput)
}

// The code identifying the product. This code has significance across all locations.
func (o GetProductsProductOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProduct) string { return v.ProductCode }).(pulumi.StringOutput)
}

type GetProductsProductArrayOutput struct{ *pulumi.OutputState }

func (GetProductsProductArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProduct)(nil)).Elem()
}

func (o GetProductsProductArrayOutput) ToGetProductsProductArrayOutput() GetProductsProductArrayOutput {
	return o
}

func (o GetProductsProductArrayOutput) ToGetProductsProductArrayOutputWithContext(ctx context.Context) GetProductsProductArrayOutput {
	return o
}

func (o GetProductsProductArrayOutput) Index(i pulumi.IntInput) GetProductsProductOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductsProduct {
		return vs[0].([]GetProductsProduct)[vs[1].(int)]
	}).(GetProductsProductOutput)
}

type GetProductsProductMetadata struct {
	// The number of physical cores present on each CPU.
	CoresPerCpu int `pulumi:"coresPerCpu"`
	// CPU name.
	Cpu string `pulumi:"cpu"`
	// Number of CPUs.
	CpuCount int `pulumi:"cpuCount"`
	// CPU frequency in GHz.
	CpuFrequency float64 `pulumi:"cpuFrequency"`
	// Server network.
	Network string `pulumi:"network"`
	// RAM in GB.
	RamInGb int `pulumi:"ramInGb"`
	// Server storage.
	Storage string `pulumi:"storage"`
}

// GetProductsProductMetadataInput is an input type that accepts GetProductsProductMetadataArgs and GetProductsProductMetadataOutput values.
// You can construct a concrete instance of `GetProductsProductMetadataInput` via:
//
//	GetProductsProductMetadataArgs{...}
type GetProductsProductMetadataInput interface {
	pulumi.Input

	ToGetProductsProductMetadataOutput() GetProductsProductMetadataOutput
	ToGetProductsProductMetadataOutputWithContext(context.Context) GetProductsProductMetadataOutput
}

type GetProductsProductMetadataArgs struct {
	// The number of physical cores present on each CPU.
	CoresPerCpu pulumi.IntInput `pulumi:"coresPerCpu"`
	// CPU name.
	Cpu pulumi.StringInput `pulumi:"cpu"`
	// Number of CPUs.
	CpuCount pulumi.IntInput `pulumi:"cpuCount"`
	// CPU frequency in GHz.
	CpuFrequency pulumi.Float64Input `pulumi:"cpuFrequency"`
	// Server network.
	Network pulumi.StringInput `pulumi:"network"`
	// RAM in GB.
	RamInGb pulumi.IntInput `pulumi:"ramInGb"`
	// Server storage.
	Storage pulumi.StringInput `pulumi:"storage"`
}

func (GetProductsProductMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProductMetadata)(nil)).Elem()
}

func (i GetProductsProductMetadataArgs) ToGetProductsProductMetadataOutput() GetProductsProductMetadataOutput {
	return i.ToGetProductsProductMetadataOutputWithContext(context.Background())
}

func (i GetProductsProductMetadataArgs) ToGetProductsProductMetadataOutputWithContext(ctx context.Context) GetProductsProductMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductMetadataOutput)
}

// GetProductsProductMetadataArrayInput is an input type that accepts GetProductsProductMetadataArray and GetProductsProductMetadataArrayOutput values.
// You can construct a concrete instance of `GetProductsProductMetadataArrayInput` via:
//
//	GetProductsProductMetadataArray{ GetProductsProductMetadataArgs{...} }
type GetProductsProductMetadataArrayInput interface {
	pulumi.Input

	ToGetProductsProductMetadataArrayOutput() GetProductsProductMetadataArrayOutput
	ToGetProductsProductMetadataArrayOutputWithContext(context.Context) GetProductsProductMetadataArrayOutput
}

type GetProductsProductMetadataArray []GetProductsProductMetadataInput

func (GetProductsProductMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProductMetadata)(nil)).Elem()
}

func (i GetProductsProductMetadataArray) ToGetProductsProductMetadataArrayOutput() GetProductsProductMetadataArrayOutput {
	return i.ToGetProductsProductMetadataArrayOutputWithContext(context.Background())
}

func (i GetProductsProductMetadataArray) ToGetProductsProductMetadataArrayOutputWithContext(ctx context.Context) GetProductsProductMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductMetadataArrayOutput)
}

type GetProductsProductMetadataOutput struct{ *pulumi.OutputState }

func (GetProductsProductMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProductMetadata)(nil)).Elem()
}

func (o GetProductsProductMetadataOutput) ToGetProductsProductMetadataOutput() GetProductsProductMetadataOutput {
	return o
}

func (o GetProductsProductMetadataOutput) ToGetProductsProductMetadataOutputWithContext(ctx context.Context) GetProductsProductMetadataOutput {
	return o
}

// The number of physical cores present on each CPU.
func (o GetProductsProductMetadataOutput) CoresPerCpu() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductsProductMetadata) int { return v.CoresPerCpu }).(pulumi.IntOutput)
}

// CPU name.
func (o GetProductsProductMetadataOutput) Cpu() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductMetadata) string { return v.Cpu }).(pulumi.StringOutput)
}

// Number of CPUs.
func (o GetProductsProductMetadataOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductsProductMetadata) int { return v.CpuCount }).(pulumi.IntOutput)
}

// CPU frequency in GHz.
func (o GetProductsProductMetadataOutput) CpuFrequency() pulumi.Float64Output {
	return o.ApplyT(func(v GetProductsProductMetadata) float64 { return v.CpuFrequency }).(pulumi.Float64Output)
}

// Server network.
func (o GetProductsProductMetadataOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductMetadata) string { return v.Network }).(pulumi.StringOutput)
}

// RAM in GB.
func (o GetProductsProductMetadataOutput) RamInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductsProductMetadata) int { return v.RamInGb }).(pulumi.IntOutput)
}

// Server storage.
func (o GetProductsProductMetadataOutput) Storage() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductMetadata) string { return v.Storage }).(pulumi.StringOutput)
}

type GetProductsProductMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetProductsProductMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProductMetadata)(nil)).Elem()
}

func (o GetProductsProductMetadataArrayOutput) ToGetProductsProductMetadataArrayOutput() GetProductsProductMetadataArrayOutput {
	return o
}

func (o GetProductsProductMetadataArrayOutput) ToGetProductsProductMetadataArrayOutputWithContext(ctx context.Context) GetProductsProductMetadataArrayOutput {
	return o
}

func (o GetProductsProductMetadataArrayOutput) Index(i pulumi.IntInput) GetProductsProductMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductsProductMetadata {
		return vs[0].([]GetProductsProductMetadata)[vs[1].(int)]
	}).(GetProductsProductMetadataOutput)
}

type GetProductsProductPlan struct {
	// Product code of the correlated product.
	CorrelatedProductCode string `pulumi:"correlatedProductCode"`
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA`, `AUS` and `GLOBAL`.
	Location string `pulumi:"location"`
	// Package size per month.
	PackageQuantity int `pulumi:"packageQuantity"`
	// Package size unit.
	PackageUnit string `pulumi:"packageUnit"`
	// Price per unit.
	Price float64 `pulumi:"price"`
	// The unit to which the price applies.
	PriceUnit string `pulumi:"priceUnit"`
	// The pricing model.
	PricingModel string `pulumi:"pricingModel"`
	// The SKU identifying the pricing plan.
	Sku string `pulumi:"sku"`
	// Description of the pricing plan.
	SkuDescription string `pulumi:"skuDescription"`
}

// GetProductsProductPlanInput is an input type that accepts GetProductsProductPlanArgs and GetProductsProductPlanOutput values.
// You can construct a concrete instance of `GetProductsProductPlanInput` via:
//
//	GetProductsProductPlanArgs{...}
type GetProductsProductPlanInput interface {
	pulumi.Input

	ToGetProductsProductPlanOutput() GetProductsProductPlanOutput
	ToGetProductsProductPlanOutputWithContext(context.Context) GetProductsProductPlanOutput
}

type GetProductsProductPlanArgs struct {
	// Product code of the correlated product.
	CorrelatedProductCode pulumi.StringInput `pulumi:"correlatedProductCode"`
	// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA`, `AUS` and `GLOBAL`.
	Location pulumi.StringInput `pulumi:"location"`
	// Package size per month.
	PackageQuantity pulumi.IntInput `pulumi:"packageQuantity"`
	// Package size unit.
	PackageUnit pulumi.StringInput `pulumi:"packageUnit"`
	// Price per unit.
	Price pulumi.Float64Input `pulumi:"price"`
	// The unit to which the price applies.
	PriceUnit pulumi.StringInput `pulumi:"priceUnit"`
	// The pricing model.
	PricingModel pulumi.StringInput `pulumi:"pricingModel"`
	// The SKU identifying the pricing plan.
	Sku pulumi.StringInput `pulumi:"sku"`
	// Description of the pricing plan.
	SkuDescription pulumi.StringInput `pulumi:"skuDescription"`
}

func (GetProductsProductPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProductPlan)(nil)).Elem()
}

func (i GetProductsProductPlanArgs) ToGetProductsProductPlanOutput() GetProductsProductPlanOutput {
	return i.ToGetProductsProductPlanOutputWithContext(context.Background())
}

func (i GetProductsProductPlanArgs) ToGetProductsProductPlanOutputWithContext(ctx context.Context) GetProductsProductPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductPlanOutput)
}

// GetProductsProductPlanArrayInput is an input type that accepts GetProductsProductPlanArray and GetProductsProductPlanArrayOutput values.
// You can construct a concrete instance of `GetProductsProductPlanArrayInput` via:
//
//	GetProductsProductPlanArray{ GetProductsProductPlanArgs{...} }
type GetProductsProductPlanArrayInput interface {
	pulumi.Input

	ToGetProductsProductPlanArrayOutput() GetProductsProductPlanArrayOutput
	ToGetProductsProductPlanArrayOutputWithContext(context.Context) GetProductsProductPlanArrayOutput
}

type GetProductsProductPlanArray []GetProductsProductPlanInput

func (GetProductsProductPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProductPlan)(nil)).Elem()
}

func (i GetProductsProductPlanArray) ToGetProductsProductPlanArrayOutput() GetProductsProductPlanArrayOutput {
	return i.ToGetProductsProductPlanArrayOutputWithContext(context.Background())
}

func (i GetProductsProductPlanArray) ToGetProductsProductPlanArrayOutputWithContext(ctx context.Context) GetProductsProductPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProductsProductPlanArrayOutput)
}

type GetProductsProductPlanOutput struct{ *pulumi.OutputState }

func (GetProductsProductPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductsProductPlan)(nil)).Elem()
}

func (o GetProductsProductPlanOutput) ToGetProductsProductPlanOutput() GetProductsProductPlanOutput {
	return o
}

func (o GetProductsProductPlanOutput) ToGetProductsProductPlanOutputWithContext(ctx context.Context) GetProductsProductPlanOutput {
	return o
}

// Product code of the correlated product.
func (o GetProductsProductPlanOutput) CorrelatedProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.CorrelatedProductCode }).(pulumi.StringOutput)
}

// The location code. Currently the following values are allowed: `PHX`, `ASH`, `NLD`, `SGP`, `CHI`, `SEA`, `AUS` and `GLOBAL`.
func (o GetProductsProductPlanOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.Location }).(pulumi.StringOutput)
}

// Package size per month.
func (o GetProductsProductPlanOutput) PackageQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetProductsProductPlan) int { return v.PackageQuantity }).(pulumi.IntOutput)
}

// Package size unit.
func (o GetProductsProductPlanOutput) PackageUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.PackageUnit }).(pulumi.StringOutput)
}

// Price per unit.
func (o GetProductsProductPlanOutput) Price() pulumi.Float64Output {
	return o.ApplyT(func(v GetProductsProductPlan) float64 { return v.Price }).(pulumi.Float64Output)
}

// The unit to which the price applies.
func (o GetProductsProductPlanOutput) PriceUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.PriceUnit }).(pulumi.StringOutput)
}

// The pricing model.
func (o GetProductsProductPlanOutput) PricingModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.PricingModel }).(pulumi.StringOutput)
}

// The SKU identifying the pricing plan.
func (o GetProductsProductPlanOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.Sku }).(pulumi.StringOutput)
}

// Description of the pricing plan.
func (o GetProductsProductPlanOutput) SkuDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductsProductPlan) string { return v.SkuDescription }).(pulumi.StringOutput)
}

type GetProductsProductPlanArrayOutput struct{ *pulumi.OutputState }

func (GetProductsProductPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProductsProductPlan)(nil)).Elem()
}

func (o GetProductsProductPlanArrayOutput) ToGetProductsProductPlanArrayOutput() GetProductsProductPlanArrayOutput {
	return o
}

func (o GetProductsProductPlanArrayOutput) ToGetProductsProductPlanArrayOutputWithContext(ctx context.Context) GetProductsProductPlanArrayOutput {
	return o
}

func (o GetProductsProductPlanArrayOutput) Index(i pulumi.IntInput) GetProductsProductPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProductsProductPlan {
		return vs[0].([]GetProductsProductPlan)[vs[1].(int)]
	}).(GetProductsProductPlanOutput)
}

type GetPublicNetworkIpBlock struct {
	// The public network identifier.
	Id string `pulumi:"id"`
}

// GetPublicNetworkIpBlockInput is an input type that accepts GetPublicNetworkIpBlockArgs and GetPublicNetworkIpBlockOutput values.
// You can construct a concrete instance of `GetPublicNetworkIpBlockInput` via:
//
//	GetPublicNetworkIpBlockArgs{...}
type GetPublicNetworkIpBlockInput interface {
	pulumi.Input

	ToGetPublicNetworkIpBlockOutput() GetPublicNetworkIpBlockOutput
	ToGetPublicNetworkIpBlockOutputWithContext(context.Context) GetPublicNetworkIpBlockOutput
}

type GetPublicNetworkIpBlockArgs struct {
	// The public network identifier.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPublicNetworkIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicNetworkIpBlock)(nil)).Elem()
}

func (i GetPublicNetworkIpBlockArgs) ToGetPublicNetworkIpBlockOutput() GetPublicNetworkIpBlockOutput {
	return i.ToGetPublicNetworkIpBlockOutputWithContext(context.Background())
}

func (i GetPublicNetworkIpBlockArgs) ToGetPublicNetworkIpBlockOutputWithContext(ctx context.Context) GetPublicNetworkIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicNetworkIpBlockOutput)
}

// GetPublicNetworkIpBlockArrayInput is an input type that accepts GetPublicNetworkIpBlockArray and GetPublicNetworkIpBlockArrayOutput values.
// You can construct a concrete instance of `GetPublicNetworkIpBlockArrayInput` via:
//
//	GetPublicNetworkIpBlockArray{ GetPublicNetworkIpBlockArgs{...} }
type GetPublicNetworkIpBlockArrayInput interface {
	pulumi.Input

	ToGetPublicNetworkIpBlockArrayOutput() GetPublicNetworkIpBlockArrayOutput
	ToGetPublicNetworkIpBlockArrayOutputWithContext(context.Context) GetPublicNetworkIpBlockArrayOutput
}

type GetPublicNetworkIpBlockArray []GetPublicNetworkIpBlockInput

func (GetPublicNetworkIpBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicNetworkIpBlock)(nil)).Elem()
}

func (i GetPublicNetworkIpBlockArray) ToGetPublicNetworkIpBlockArrayOutput() GetPublicNetworkIpBlockArrayOutput {
	return i.ToGetPublicNetworkIpBlockArrayOutputWithContext(context.Background())
}

func (i GetPublicNetworkIpBlockArray) ToGetPublicNetworkIpBlockArrayOutputWithContext(ctx context.Context) GetPublicNetworkIpBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicNetworkIpBlockArrayOutput)
}

type GetPublicNetworkIpBlockOutput struct{ *pulumi.OutputState }

func (GetPublicNetworkIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicNetworkIpBlock)(nil)).Elem()
}

func (o GetPublicNetworkIpBlockOutput) ToGetPublicNetworkIpBlockOutput() GetPublicNetworkIpBlockOutput {
	return o
}

func (o GetPublicNetworkIpBlockOutput) ToGetPublicNetworkIpBlockOutputWithContext(ctx context.Context) GetPublicNetworkIpBlockOutput {
	return o
}

// The public network identifier.
func (o GetPublicNetworkIpBlockOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicNetworkIpBlock) string { return v.Id }).(pulumi.StringOutput)
}

type GetPublicNetworkIpBlockArrayOutput struct{ *pulumi.OutputState }

func (GetPublicNetworkIpBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicNetworkIpBlock)(nil)).Elem()
}

func (o GetPublicNetworkIpBlockArrayOutput) ToGetPublicNetworkIpBlockArrayOutput() GetPublicNetworkIpBlockArrayOutput {
	return o
}

func (o GetPublicNetworkIpBlockArrayOutput) ToGetPublicNetworkIpBlockArrayOutputWithContext(ctx context.Context) GetPublicNetworkIpBlockArrayOutput {
	return o
}

func (o GetPublicNetworkIpBlockArrayOutput) Index(i pulumi.IntInput) GetPublicNetworkIpBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicNetworkIpBlock {
		return vs[0].([]GetPublicNetworkIpBlock)[vs[1].(int)]
	}).(GetPublicNetworkIpBlockOutput)
}

type GetPublicNetworkMembership struct {
	// List of public IPs associated to the resource.
	Ips []string `pulumi:"ips"`
	// The resource identifier.
	ResourceId string `pulumi:"resourceId"`
	// The resource's type.
	ResourceType string `pulumi:"resourceType"`
}

// GetPublicNetworkMembershipInput is an input type that accepts GetPublicNetworkMembershipArgs and GetPublicNetworkMembershipOutput values.
// You can construct a concrete instance of `GetPublicNetworkMembershipInput` via:
//
//	GetPublicNetworkMembershipArgs{...}
type GetPublicNetworkMembershipInput interface {
	pulumi.Input

	ToGetPublicNetworkMembershipOutput() GetPublicNetworkMembershipOutput
	ToGetPublicNetworkMembershipOutputWithContext(context.Context) GetPublicNetworkMembershipOutput
}

type GetPublicNetworkMembershipArgs struct {
	// List of public IPs associated to the resource.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The resource identifier.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// The resource's type.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
}

func (GetPublicNetworkMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicNetworkMembership)(nil)).Elem()
}

func (i GetPublicNetworkMembershipArgs) ToGetPublicNetworkMembershipOutput() GetPublicNetworkMembershipOutput {
	return i.ToGetPublicNetworkMembershipOutputWithContext(context.Background())
}

func (i GetPublicNetworkMembershipArgs) ToGetPublicNetworkMembershipOutputWithContext(ctx context.Context) GetPublicNetworkMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicNetworkMembershipOutput)
}

// GetPublicNetworkMembershipArrayInput is an input type that accepts GetPublicNetworkMembershipArray and GetPublicNetworkMembershipArrayOutput values.
// You can construct a concrete instance of `GetPublicNetworkMembershipArrayInput` via:
//
//	GetPublicNetworkMembershipArray{ GetPublicNetworkMembershipArgs{...} }
type GetPublicNetworkMembershipArrayInput interface {
	pulumi.Input

	ToGetPublicNetworkMembershipArrayOutput() GetPublicNetworkMembershipArrayOutput
	ToGetPublicNetworkMembershipArrayOutputWithContext(context.Context) GetPublicNetworkMembershipArrayOutput
}

type GetPublicNetworkMembershipArray []GetPublicNetworkMembershipInput

func (GetPublicNetworkMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicNetworkMembership)(nil)).Elem()
}

func (i GetPublicNetworkMembershipArray) ToGetPublicNetworkMembershipArrayOutput() GetPublicNetworkMembershipArrayOutput {
	return i.ToGetPublicNetworkMembershipArrayOutputWithContext(context.Background())
}

func (i GetPublicNetworkMembershipArray) ToGetPublicNetworkMembershipArrayOutputWithContext(ctx context.Context) GetPublicNetworkMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPublicNetworkMembershipArrayOutput)
}

type GetPublicNetworkMembershipOutput struct{ *pulumi.OutputState }

func (GetPublicNetworkMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPublicNetworkMembership)(nil)).Elem()
}

func (o GetPublicNetworkMembershipOutput) ToGetPublicNetworkMembershipOutput() GetPublicNetworkMembershipOutput {
	return o
}

func (o GetPublicNetworkMembershipOutput) ToGetPublicNetworkMembershipOutputWithContext(ctx context.Context) GetPublicNetworkMembershipOutput {
	return o
}

// List of public IPs associated to the resource.
func (o GetPublicNetworkMembershipOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPublicNetworkMembership) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The resource identifier.
func (o GetPublicNetworkMembershipOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicNetworkMembership) string { return v.ResourceId }).(pulumi.StringOutput)
}

// The resource's type.
func (o GetPublicNetworkMembershipOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPublicNetworkMembership) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetPublicNetworkMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetPublicNetworkMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPublicNetworkMembership)(nil)).Elem()
}

func (o GetPublicNetworkMembershipArrayOutput) ToGetPublicNetworkMembershipArrayOutput() GetPublicNetworkMembershipArrayOutput {
	return o
}

func (o GetPublicNetworkMembershipArrayOutput) ToGetPublicNetworkMembershipArrayOutputWithContext(ctx context.Context) GetPublicNetworkMembershipArrayOutput {
	return o
}

func (o GetPublicNetworkMembershipArrayOutput) Index(i pulumi.IntInput) GetPublicNetworkMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPublicNetworkMembership {
		return vs[0].([]GetPublicNetworkMembership)[vs[1].(int)]
	}).(GetPublicNetworkMembershipOutput)
}

type GetQuotaQuotaEditLimitRequestDetail struct {
	// The new limit that is requested.
	Limit int `pulumi:"limit"`
	// The reason for changing the limit.
	Reason string `pulumi:"reason"`
	// The point in time the request was submitted.
	RequestedOn string `pulumi:"requestedOn"`
}

// GetQuotaQuotaEditLimitRequestDetailInput is an input type that accepts GetQuotaQuotaEditLimitRequestDetailArgs and GetQuotaQuotaEditLimitRequestDetailOutput values.
// You can construct a concrete instance of `GetQuotaQuotaEditLimitRequestDetailInput` via:
//
//	GetQuotaQuotaEditLimitRequestDetailArgs{...}
type GetQuotaQuotaEditLimitRequestDetailInput interface {
	pulumi.Input

	ToGetQuotaQuotaEditLimitRequestDetailOutput() GetQuotaQuotaEditLimitRequestDetailOutput
	ToGetQuotaQuotaEditLimitRequestDetailOutputWithContext(context.Context) GetQuotaQuotaEditLimitRequestDetailOutput
}

type GetQuotaQuotaEditLimitRequestDetailArgs struct {
	// The new limit that is requested.
	Limit pulumi.IntInput `pulumi:"limit"`
	// The reason for changing the limit.
	Reason pulumi.StringInput `pulumi:"reason"`
	// The point in time the request was submitted.
	RequestedOn pulumi.StringInput `pulumi:"requestedOn"`
}

func (GetQuotaQuotaEditLimitRequestDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotaQuotaEditLimitRequestDetail)(nil)).Elem()
}

func (i GetQuotaQuotaEditLimitRequestDetailArgs) ToGetQuotaQuotaEditLimitRequestDetailOutput() GetQuotaQuotaEditLimitRequestDetailOutput {
	return i.ToGetQuotaQuotaEditLimitRequestDetailOutputWithContext(context.Background())
}

func (i GetQuotaQuotaEditLimitRequestDetailArgs) ToGetQuotaQuotaEditLimitRequestDetailOutputWithContext(ctx context.Context) GetQuotaQuotaEditLimitRequestDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotaQuotaEditLimitRequestDetailOutput)
}

// GetQuotaQuotaEditLimitRequestDetailArrayInput is an input type that accepts GetQuotaQuotaEditLimitRequestDetailArray and GetQuotaQuotaEditLimitRequestDetailArrayOutput values.
// You can construct a concrete instance of `GetQuotaQuotaEditLimitRequestDetailArrayInput` via:
//
//	GetQuotaQuotaEditLimitRequestDetailArray{ GetQuotaQuotaEditLimitRequestDetailArgs{...} }
type GetQuotaQuotaEditLimitRequestDetailArrayInput interface {
	pulumi.Input

	ToGetQuotaQuotaEditLimitRequestDetailArrayOutput() GetQuotaQuotaEditLimitRequestDetailArrayOutput
	ToGetQuotaQuotaEditLimitRequestDetailArrayOutputWithContext(context.Context) GetQuotaQuotaEditLimitRequestDetailArrayOutput
}

type GetQuotaQuotaEditLimitRequestDetailArray []GetQuotaQuotaEditLimitRequestDetailInput

func (GetQuotaQuotaEditLimitRequestDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotaQuotaEditLimitRequestDetail)(nil)).Elem()
}

func (i GetQuotaQuotaEditLimitRequestDetailArray) ToGetQuotaQuotaEditLimitRequestDetailArrayOutput() GetQuotaQuotaEditLimitRequestDetailArrayOutput {
	return i.ToGetQuotaQuotaEditLimitRequestDetailArrayOutputWithContext(context.Background())
}

func (i GetQuotaQuotaEditLimitRequestDetailArray) ToGetQuotaQuotaEditLimitRequestDetailArrayOutputWithContext(ctx context.Context) GetQuotaQuotaEditLimitRequestDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotaQuotaEditLimitRequestDetailArrayOutput)
}

type GetQuotaQuotaEditLimitRequestDetailOutput struct{ *pulumi.OutputState }

func (GetQuotaQuotaEditLimitRequestDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotaQuotaEditLimitRequestDetail)(nil)).Elem()
}

func (o GetQuotaQuotaEditLimitRequestDetailOutput) ToGetQuotaQuotaEditLimitRequestDetailOutput() GetQuotaQuotaEditLimitRequestDetailOutput {
	return o
}

func (o GetQuotaQuotaEditLimitRequestDetailOutput) ToGetQuotaQuotaEditLimitRequestDetailOutputWithContext(ctx context.Context) GetQuotaQuotaEditLimitRequestDetailOutput {
	return o
}

// The new limit that is requested.
func (o GetQuotaQuotaEditLimitRequestDetailOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetQuotaQuotaEditLimitRequestDetail) int { return v.Limit }).(pulumi.IntOutput)
}

// The reason for changing the limit.
func (o GetQuotaQuotaEditLimitRequestDetailOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaQuotaEditLimitRequestDetail) string { return v.Reason }).(pulumi.StringOutput)
}

// The point in time the request was submitted.
func (o GetQuotaQuotaEditLimitRequestDetailOutput) RequestedOn() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotaQuotaEditLimitRequestDetail) string { return v.RequestedOn }).(pulumi.StringOutput)
}

type GetQuotaQuotaEditLimitRequestDetailArrayOutput struct{ *pulumi.OutputState }

func (GetQuotaQuotaEditLimitRequestDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotaQuotaEditLimitRequestDetail)(nil)).Elem()
}

func (o GetQuotaQuotaEditLimitRequestDetailArrayOutput) ToGetQuotaQuotaEditLimitRequestDetailArrayOutput() GetQuotaQuotaEditLimitRequestDetailArrayOutput {
	return o
}

func (o GetQuotaQuotaEditLimitRequestDetailArrayOutput) ToGetQuotaQuotaEditLimitRequestDetailArrayOutputWithContext(ctx context.Context) GetQuotaQuotaEditLimitRequestDetailArrayOutput {
	return o
}

func (o GetQuotaQuotaEditLimitRequestDetailArrayOutput) Index(i pulumi.IntInput) GetQuotaQuotaEditLimitRequestDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotaQuotaEditLimitRequestDetail {
		return vs[0].([]GetQuotaQuotaEditLimitRequestDetail)[vs[1].(int)]
	}).(GetQuotaQuotaEditLimitRequestDetailOutput)
}

type GetRancherClusterMetadata struct {
	// The Rancher Server URL.
	Url string `pulumi:"url"`
}

// GetRancherClusterMetadataInput is an input type that accepts GetRancherClusterMetadataArgs and GetRancherClusterMetadataOutput values.
// You can construct a concrete instance of `GetRancherClusterMetadataInput` via:
//
//	GetRancherClusterMetadataArgs{...}
type GetRancherClusterMetadataInput interface {
	pulumi.Input

	ToGetRancherClusterMetadataOutput() GetRancherClusterMetadataOutput
	ToGetRancherClusterMetadataOutputWithContext(context.Context) GetRancherClusterMetadataOutput
}

type GetRancherClusterMetadataArgs struct {
	// The Rancher Server URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetRancherClusterMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRancherClusterMetadata)(nil)).Elem()
}

func (i GetRancherClusterMetadataArgs) ToGetRancherClusterMetadataOutput() GetRancherClusterMetadataOutput {
	return i.ToGetRancherClusterMetadataOutputWithContext(context.Background())
}

func (i GetRancherClusterMetadataArgs) ToGetRancherClusterMetadataOutputWithContext(ctx context.Context) GetRancherClusterMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRancherClusterMetadataOutput)
}

// GetRancherClusterMetadataArrayInput is an input type that accepts GetRancherClusterMetadataArray and GetRancherClusterMetadataArrayOutput values.
// You can construct a concrete instance of `GetRancherClusterMetadataArrayInput` via:
//
//	GetRancherClusterMetadataArray{ GetRancherClusterMetadataArgs{...} }
type GetRancherClusterMetadataArrayInput interface {
	pulumi.Input

	ToGetRancherClusterMetadataArrayOutput() GetRancherClusterMetadataArrayOutput
	ToGetRancherClusterMetadataArrayOutputWithContext(context.Context) GetRancherClusterMetadataArrayOutput
}

type GetRancherClusterMetadataArray []GetRancherClusterMetadataInput

func (GetRancherClusterMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRancherClusterMetadata)(nil)).Elem()
}

func (i GetRancherClusterMetadataArray) ToGetRancherClusterMetadataArrayOutput() GetRancherClusterMetadataArrayOutput {
	return i.ToGetRancherClusterMetadataArrayOutputWithContext(context.Background())
}

func (i GetRancherClusterMetadataArray) ToGetRancherClusterMetadataArrayOutputWithContext(ctx context.Context) GetRancherClusterMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRancherClusterMetadataArrayOutput)
}

type GetRancherClusterMetadataOutput struct{ *pulumi.OutputState }

func (GetRancherClusterMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRancherClusterMetadata)(nil)).Elem()
}

func (o GetRancherClusterMetadataOutput) ToGetRancherClusterMetadataOutput() GetRancherClusterMetadataOutput {
	return o
}

func (o GetRancherClusterMetadataOutput) ToGetRancherClusterMetadataOutputWithContext(ctx context.Context) GetRancherClusterMetadataOutput {
	return o
}

// The Rancher Server URL.
func (o GetRancherClusterMetadataOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetRancherClusterMetadata) string { return v.Url }).(pulumi.StringOutput)
}

type GetRancherClusterMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetRancherClusterMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRancherClusterMetadata)(nil)).Elem()
}

func (o GetRancherClusterMetadataArrayOutput) ToGetRancherClusterMetadataArrayOutput() GetRancherClusterMetadataArrayOutput {
	return o
}

func (o GetRancherClusterMetadataArrayOutput) ToGetRancherClusterMetadataArrayOutputWithContext(ctx context.Context) GetRancherClusterMetadataArrayOutput {
	return o
}

func (o GetRancherClusterMetadataArrayOutput) Index(i pulumi.IntInput) GetRancherClusterMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRancherClusterMetadata {
		return vs[0].([]GetRancherClusterMetadata)[vs[1].(int)]
	}).(GetRancherClusterMetadataOutput)
}

type GetRancherClusterNodePool struct {
	// Cluster name.
	Name string `pulumi:"name"`
	// Number of configured nodes.
	NodeCount int `pulumi:"nodeCount"`
	// The nodes associated with this node pool.
	Nodes []GetRancherClusterNodePoolNode `pulumi:"nodes"`
	// Node server type.
	ServerType string `pulumi:"serverType"`
}

// GetRancherClusterNodePoolInput is an input type that accepts GetRancherClusterNodePoolArgs and GetRancherClusterNodePoolOutput values.
// You can construct a concrete instance of `GetRancherClusterNodePoolInput` via:
//
//	GetRancherClusterNodePoolArgs{...}
type GetRancherClusterNodePoolInput interface {
	pulumi.Input

	ToGetRancherClusterNodePoolOutput() GetRancherClusterNodePoolOutput
	ToGetRancherClusterNodePoolOutputWithContext(context.Context) GetRancherClusterNodePoolOutput
}

type GetRancherClusterNodePoolArgs struct {
	// Cluster name.
	Name pulumi.StringInput `pulumi:"name"`
	// Number of configured nodes.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// The nodes associated with this node pool.
	Nodes GetRancherClusterNodePoolNodeArrayInput `pulumi:"nodes"`
	// Node server type.
	ServerType pulumi.StringInput `pulumi:"serverType"`
}

func (GetRancherClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRancherClusterNodePool)(nil)).Elem()
}

func (i GetRancherClusterNodePoolArgs) ToGetRancherClusterNodePoolOutput() GetRancherClusterNodePoolOutput {
	return i.ToGetRancherClusterNodePoolOutputWithContext(context.Background())
}

func (i GetRancherClusterNodePoolArgs) ToGetRancherClusterNodePoolOutputWithContext(ctx context.Context) GetRancherClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRancherClusterNodePoolOutput)
}

// GetRancherClusterNodePoolArrayInput is an input type that accepts GetRancherClusterNodePoolArray and GetRancherClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `GetRancherClusterNodePoolArrayInput` via:
//
//	GetRancherClusterNodePoolArray{ GetRancherClusterNodePoolArgs{...} }
type GetRancherClusterNodePoolArrayInput interface {
	pulumi.Input

	ToGetRancherClusterNodePoolArrayOutput() GetRancherClusterNodePoolArrayOutput
	ToGetRancherClusterNodePoolArrayOutputWithContext(context.Context) GetRancherClusterNodePoolArrayOutput
}

type GetRancherClusterNodePoolArray []GetRancherClusterNodePoolInput

func (GetRancherClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRancherClusterNodePool)(nil)).Elem()
}

func (i GetRancherClusterNodePoolArray) ToGetRancherClusterNodePoolArrayOutput() GetRancherClusterNodePoolArrayOutput {
	return i.ToGetRancherClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i GetRancherClusterNodePoolArray) ToGetRancherClusterNodePoolArrayOutputWithContext(ctx context.Context) GetRancherClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRancherClusterNodePoolArrayOutput)
}

type GetRancherClusterNodePoolOutput struct{ *pulumi.OutputState }

func (GetRancherClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRancherClusterNodePool)(nil)).Elem()
}

func (o GetRancherClusterNodePoolOutput) ToGetRancherClusterNodePoolOutput() GetRancherClusterNodePoolOutput {
	return o
}

func (o GetRancherClusterNodePoolOutput) ToGetRancherClusterNodePoolOutputWithContext(ctx context.Context) GetRancherClusterNodePoolOutput {
	return o
}

// Cluster name.
func (o GetRancherClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRancherClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// Number of configured nodes.
func (o GetRancherClusterNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRancherClusterNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

// The nodes associated with this node pool.
func (o GetRancherClusterNodePoolOutput) Nodes() GetRancherClusterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v GetRancherClusterNodePool) []GetRancherClusterNodePoolNode { return v.Nodes }).(GetRancherClusterNodePoolNodeArrayOutput)
}

// Node server type.
func (o GetRancherClusterNodePoolOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRancherClusterNodePool) string { return v.ServerType }).(pulumi.StringOutput)
}

type GetRancherClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetRancherClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRancherClusterNodePool)(nil)).Elem()
}

func (o GetRancherClusterNodePoolArrayOutput) ToGetRancherClusterNodePoolArrayOutput() GetRancherClusterNodePoolArrayOutput {
	return o
}

func (o GetRancherClusterNodePoolArrayOutput) ToGetRancherClusterNodePoolArrayOutputWithContext(ctx context.Context) GetRancherClusterNodePoolArrayOutput {
	return o
}

func (o GetRancherClusterNodePoolArrayOutput) Index(i pulumi.IntInput) GetRancherClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRancherClusterNodePool {
		return vs[0].([]GetRancherClusterNodePool)[vs[1].(int)]
	}).(GetRancherClusterNodePoolOutput)
}

type GetRancherClusterNodePoolNode struct {
	// The server identifier.
	ServerId string `pulumi:"serverId"`
}

// GetRancherClusterNodePoolNodeInput is an input type that accepts GetRancherClusterNodePoolNodeArgs and GetRancherClusterNodePoolNodeOutput values.
// You can construct a concrete instance of `GetRancherClusterNodePoolNodeInput` via:
//
//	GetRancherClusterNodePoolNodeArgs{...}
type GetRancherClusterNodePoolNodeInput interface {
	pulumi.Input

	ToGetRancherClusterNodePoolNodeOutput() GetRancherClusterNodePoolNodeOutput
	ToGetRancherClusterNodePoolNodeOutputWithContext(context.Context) GetRancherClusterNodePoolNodeOutput
}

type GetRancherClusterNodePoolNodeArgs struct {
	// The server identifier.
	ServerId pulumi.StringInput `pulumi:"serverId"`
}

func (GetRancherClusterNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRancherClusterNodePoolNode)(nil)).Elem()
}

func (i GetRancherClusterNodePoolNodeArgs) ToGetRancherClusterNodePoolNodeOutput() GetRancherClusterNodePoolNodeOutput {
	return i.ToGetRancherClusterNodePoolNodeOutputWithContext(context.Background())
}

func (i GetRancherClusterNodePoolNodeArgs) ToGetRancherClusterNodePoolNodeOutputWithContext(ctx context.Context) GetRancherClusterNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRancherClusterNodePoolNodeOutput)
}

// GetRancherClusterNodePoolNodeArrayInput is an input type that accepts GetRancherClusterNodePoolNodeArray and GetRancherClusterNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `GetRancherClusterNodePoolNodeArrayInput` via:
//
//	GetRancherClusterNodePoolNodeArray{ GetRancherClusterNodePoolNodeArgs{...} }
type GetRancherClusterNodePoolNodeArrayInput interface {
	pulumi.Input

	ToGetRancherClusterNodePoolNodeArrayOutput() GetRancherClusterNodePoolNodeArrayOutput
	ToGetRancherClusterNodePoolNodeArrayOutputWithContext(context.Context) GetRancherClusterNodePoolNodeArrayOutput
}

type GetRancherClusterNodePoolNodeArray []GetRancherClusterNodePoolNodeInput

func (GetRancherClusterNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRancherClusterNodePoolNode)(nil)).Elem()
}

func (i GetRancherClusterNodePoolNodeArray) ToGetRancherClusterNodePoolNodeArrayOutput() GetRancherClusterNodePoolNodeArrayOutput {
	return i.ToGetRancherClusterNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i GetRancherClusterNodePoolNodeArray) ToGetRancherClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) GetRancherClusterNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRancherClusterNodePoolNodeArrayOutput)
}

type GetRancherClusterNodePoolNodeOutput struct{ *pulumi.OutputState }

func (GetRancherClusterNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRancherClusterNodePoolNode)(nil)).Elem()
}

func (o GetRancherClusterNodePoolNodeOutput) ToGetRancherClusterNodePoolNodeOutput() GetRancherClusterNodePoolNodeOutput {
	return o
}

func (o GetRancherClusterNodePoolNodeOutput) ToGetRancherClusterNodePoolNodeOutputWithContext(ctx context.Context) GetRancherClusterNodePoolNodeOutput {
	return o
}

// The server identifier.
func (o GetRancherClusterNodePoolNodeOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRancherClusterNodePoolNode) string { return v.ServerId }).(pulumi.StringOutput)
}

type GetRancherClusterNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetRancherClusterNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRancherClusterNodePoolNode)(nil)).Elem()
}

func (o GetRancherClusterNodePoolNodeArrayOutput) ToGetRancherClusterNodePoolNodeArrayOutput() GetRancherClusterNodePoolNodeArrayOutput {
	return o
}

func (o GetRancherClusterNodePoolNodeArrayOutput) ToGetRancherClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) GetRancherClusterNodePoolNodeArrayOutput {
	return o
}

func (o GetRancherClusterNodePoolNodeArrayOutput) Index(i pulumi.IntInput) GetRancherClusterNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRancherClusterNodePoolNode {
		return vs[0].([]GetRancherClusterNodePoolNode)[vs[1].(int)]
	}).(GetRancherClusterNodePoolNodeOutput)
}

type GetServerNetrisController struct {
	// Host OS on which the Netris Softgate is installed.
	HostOs string `pulumi:"hostOs"`
}

// GetServerNetrisControllerInput is an input type that accepts GetServerNetrisControllerArgs and GetServerNetrisControllerOutput values.
// You can construct a concrete instance of `GetServerNetrisControllerInput` via:
//
//	GetServerNetrisControllerArgs{...}
type GetServerNetrisControllerInput interface {
	pulumi.Input

	ToGetServerNetrisControllerOutput() GetServerNetrisControllerOutput
	ToGetServerNetrisControllerOutputWithContext(context.Context) GetServerNetrisControllerOutput
}

type GetServerNetrisControllerArgs struct {
	// Host OS on which the Netris Softgate is installed.
	HostOs pulumi.StringInput `pulumi:"hostOs"`
}

func (GetServerNetrisControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetrisController)(nil)).Elem()
}

func (i GetServerNetrisControllerArgs) ToGetServerNetrisControllerOutput() GetServerNetrisControllerOutput {
	return i.ToGetServerNetrisControllerOutputWithContext(context.Background())
}

func (i GetServerNetrisControllerArgs) ToGetServerNetrisControllerOutputWithContext(ctx context.Context) GetServerNetrisControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetrisControllerOutput)
}

// GetServerNetrisControllerArrayInput is an input type that accepts GetServerNetrisControllerArray and GetServerNetrisControllerArrayOutput values.
// You can construct a concrete instance of `GetServerNetrisControllerArrayInput` via:
//
//	GetServerNetrisControllerArray{ GetServerNetrisControllerArgs{...} }
type GetServerNetrisControllerArrayInput interface {
	pulumi.Input

	ToGetServerNetrisControllerArrayOutput() GetServerNetrisControllerArrayOutput
	ToGetServerNetrisControllerArrayOutputWithContext(context.Context) GetServerNetrisControllerArrayOutput
}

type GetServerNetrisControllerArray []GetServerNetrisControllerInput

func (GetServerNetrisControllerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetrisController)(nil)).Elem()
}

func (i GetServerNetrisControllerArray) ToGetServerNetrisControllerArrayOutput() GetServerNetrisControllerArrayOutput {
	return i.ToGetServerNetrisControllerArrayOutputWithContext(context.Background())
}

func (i GetServerNetrisControllerArray) ToGetServerNetrisControllerArrayOutputWithContext(ctx context.Context) GetServerNetrisControllerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetrisControllerArrayOutput)
}

type GetServerNetrisControllerOutput struct{ *pulumi.OutputState }

func (GetServerNetrisControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetrisController)(nil)).Elem()
}

func (o GetServerNetrisControllerOutput) ToGetServerNetrisControllerOutput() GetServerNetrisControllerOutput {
	return o
}

func (o GetServerNetrisControllerOutput) ToGetServerNetrisControllerOutputWithContext(ctx context.Context) GetServerNetrisControllerOutput {
	return o
}

// Host OS on which the Netris Softgate is installed.
func (o GetServerNetrisControllerOutput) HostOs() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetrisController) string { return v.HostOs }).(pulumi.StringOutput)
}

type GetServerNetrisControllerArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetrisControllerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetrisController)(nil)).Elem()
}

func (o GetServerNetrisControllerArrayOutput) ToGetServerNetrisControllerArrayOutput() GetServerNetrisControllerArrayOutput {
	return o
}

func (o GetServerNetrisControllerArrayOutput) ToGetServerNetrisControllerArrayOutputWithContext(ctx context.Context) GetServerNetrisControllerArrayOutput {
	return o
}

func (o GetServerNetrisControllerArrayOutput) Index(i pulumi.IntInput) GetServerNetrisControllerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetrisController {
		return vs[0].([]GetServerNetrisController)[vs[1].(int)]
	}).(GetServerNetrisControllerOutput)
}

type GetServerNetrisSoftgate struct {
	// Host OS on which the Netris Softgate is installed.
	HostOs string `pulumi:"hostOs"`
}

// GetServerNetrisSoftgateInput is an input type that accepts GetServerNetrisSoftgateArgs and GetServerNetrisSoftgateOutput values.
// You can construct a concrete instance of `GetServerNetrisSoftgateInput` via:
//
//	GetServerNetrisSoftgateArgs{...}
type GetServerNetrisSoftgateInput interface {
	pulumi.Input

	ToGetServerNetrisSoftgateOutput() GetServerNetrisSoftgateOutput
	ToGetServerNetrisSoftgateOutputWithContext(context.Context) GetServerNetrisSoftgateOutput
}

type GetServerNetrisSoftgateArgs struct {
	// Host OS on which the Netris Softgate is installed.
	HostOs pulumi.StringInput `pulumi:"hostOs"`
}

func (GetServerNetrisSoftgateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetrisSoftgate)(nil)).Elem()
}

func (i GetServerNetrisSoftgateArgs) ToGetServerNetrisSoftgateOutput() GetServerNetrisSoftgateOutput {
	return i.ToGetServerNetrisSoftgateOutputWithContext(context.Background())
}

func (i GetServerNetrisSoftgateArgs) ToGetServerNetrisSoftgateOutputWithContext(ctx context.Context) GetServerNetrisSoftgateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetrisSoftgateOutput)
}

// GetServerNetrisSoftgateArrayInput is an input type that accepts GetServerNetrisSoftgateArray and GetServerNetrisSoftgateArrayOutput values.
// You can construct a concrete instance of `GetServerNetrisSoftgateArrayInput` via:
//
//	GetServerNetrisSoftgateArray{ GetServerNetrisSoftgateArgs{...} }
type GetServerNetrisSoftgateArrayInput interface {
	pulumi.Input

	ToGetServerNetrisSoftgateArrayOutput() GetServerNetrisSoftgateArrayOutput
	ToGetServerNetrisSoftgateArrayOutputWithContext(context.Context) GetServerNetrisSoftgateArrayOutput
}

type GetServerNetrisSoftgateArray []GetServerNetrisSoftgateInput

func (GetServerNetrisSoftgateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetrisSoftgate)(nil)).Elem()
}

func (i GetServerNetrisSoftgateArray) ToGetServerNetrisSoftgateArrayOutput() GetServerNetrisSoftgateArrayOutput {
	return i.ToGetServerNetrisSoftgateArrayOutputWithContext(context.Background())
}

func (i GetServerNetrisSoftgateArray) ToGetServerNetrisSoftgateArrayOutputWithContext(ctx context.Context) GetServerNetrisSoftgateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetrisSoftgateArrayOutput)
}

type GetServerNetrisSoftgateOutput struct{ *pulumi.OutputState }

func (GetServerNetrisSoftgateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetrisSoftgate)(nil)).Elem()
}

func (o GetServerNetrisSoftgateOutput) ToGetServerNetrisSoftgateOutput() GetServerNetrisSoftgateOutput {
	return o
}

func (o GetServerNetrisSoftgateOutput) ToGetServerNetrisSoftgateOutputWithContext(ctx context.Context) GetServerNetrisSoftgateOutput {
	return o
}

// Host OS on which the Netris Softgate is installed.
func (o GetServerNetrisSoftgateOutput) HostOs() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetrisSoftgate) string { return v.HostOs }).(pulumi.StringOutput)
}

type GetServerNetrisSoftgateArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetrisSoftgateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetrisSoftgate)(nil)).Elem()
}

func (o GetServerNetrisSoftgateArrayOutput) ToGetServerNetrisSoftgateArrayOutput() GetServerNetrisSoftgateArrayOutput {
	return o
}

func (o GetServerNetrisSoftgateArrayOutput) ToGetServerNetrisSoftgateArrayOutputWithContext(ctx context.Context) GetServerNetrisSoftgateArrayOutput {
	return o
}

func (o GetServerNetrisSoftgateArrayOutput) Index(i pulumi.IntInput) GetServerNetrisSoftgateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetrisSoftgate {
		return vs[0].([]GetServerNetrisSoftgate)[vs[1].(int)]
	}).(GetServerNetrisSoftgateOutput)
}

type GetServerNetworkConfiguration struct {
	// The address of the gateway assigned to the server.
	GatewayAddress string `pulumi:"gatewayAddress"`
	// IP block details of bare metal server.
	IpBlocksConfigurations []GetServerNetworkConfigurationIpBlocksConfiguration `pulumi:"ipBlocksConfigurations"`
	// Private network details of bare metal server.
	PrivateNetworkConfigurations []GetServerNetworkConfigurationPrivateNetworkConfiguration `pulumi:"privateNetworkConfigurations"`
	// Public network details of bare metal server.
	PublicNetworkConfigurations []GetServerNetworkConfigurationPublicNetworkConfiguration `pulumi:"publicNetworkConfigurations"`
}

// GetServerNetworkConfigurationInput is an input type that accepts GetServerNetworkConfigurationArgs and GetServerNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationInput` via:
//
//	GetServerNetworkConfigurationArgs{...}
type GetServerNetworkConfigurationInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationOutput() GetServerNetworkConfigurationOutput
	ToGetServerNetworkConfigurationOutputWithContext(context.Context) GetServerNetworkConfigurationOutput
}

type GetServerNetworkConfigurationArgs struct {
	// The address of the gateway assigned to the server.
	GatewayAddress pulumi.StringInput `pulumi:"gatewayAddress"`
	// IP block details of bare metal server.
	IpBlocksConfigurations GetServerNetworkConfigurationIpBlocksConfigurationArrayInput `pulumi:"ipBlocksConfigurations"`
	// Private network details of bare metal server.
	PrivateNetworkConfigurations GetServerNetworkConfigurationPrivateNetworkConfigurationArrayInput `pulumi:"privateNetworkConfigurations"`
	// Public network details of bare metal server.
	PublicNetworkConfigurations GetServerNetworkConfigurationPublicNetworkConfigurationArrayInput `pulumi:"publicNetworkConfigurations"`
}

func (GetServerNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationArgs) ToGetServerNetworkConfigurationOutput() GetServerNetworkConfigurationOutput {
	return i.ToGetServerNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationArgs) ToGetServerNetworkConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationOutput)
}

// GetServerNetworkConfigurationArrayInput is an input type that accepts GetServerNetworkConfigurationArray and GetServerNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationArrayInput` via:
//
//	GetServerNetworkConfigurationArray{ GetServerNetworkConfigurationArgs{...} }
type GetServerNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationArrayOutput() GetServerNetworkConfigurationArrayOutput
	ToGetServerNetworkConfigurationArrayOutputWithContext(context.Context) GetServerNetworkConfigurationArrayOutput
}

type GetServerNetworkConfigurationArray []GetServerNetworkConfigurationInput

func (GetServerNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationArray) ToGetServerNetworkConfigurationArrayOutput() GetServerNetworkConfigurationArrayOutput {
	return i.ToGetServerNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationArray) ToGetServerNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationArrayOutput)
}

type GetServerNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationOutput) ToGetServerNetworkConfigurationOutput() GetServerNetworkConfigurationOutput {
	return o
}

func (o GetServerNetworkConfigurationOutput) ToGetServerNetworkConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationOutput {
	return o
}

// The address of the gateway assigned to the server.
func (o GetServerNetworkConfigurationOutput) GatewayAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfiguration) string { return v.GatewayAddress }).(pulumi.StringOutput)
}

// IP block details of bare metal server.
func (o GetServerNetworkConfigurationOutput) IpBlocksConfigurations() GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfiguration) []GetServerNetworkConfigurationIpBlocksConfiguration {
		return v.IpBlocksConfigurations
	}).(GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput)
}

// Private network details of bare metal server.
func (o GetServerNetworkConfigurationOutput) PrivateNetworkConfigurations() GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfiguration) []GetServerNetworkConfigurationPrivateNetworkConfiguration {
		return v.PrivateNetworkConfigurations
	}).(GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput)
}

// Public network details of bare metal server.
func (o GetServerNetworkConfigurationOutput) PublicNetworkConfigurations() GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfiguration) []GetServerNetworkConfigurationPublicNetworkConfiguration {
		return v.PublicNetworkConfigurations
	}).(GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput)
}

type GetServerNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationArrayOutput) ToGetServerNetworkConfigurationArrayOutput() GetServerNetworkConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationArrayOutput) ToGetServerNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetServerNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetworkConfiguration {
		return vs[0].([]GetServerNetworkConfiguration)[vs[1].(int)]
	}).(GetServerNetworkConfigurationOutput)
}

type GetServerNetworkConfigurationIpBlocksConfiguration struct {
	// Determines the approach for configuring IP blocks for the server being provisioned.
	ConfigurationType string `pulumi:"configurationType"`
	// The IP blocks assigned to this server.
	IpBlocks []GetServerNetworkConfigurationIpBlocksConfigurationIpBlock `pulumi:"ipBlocks"`
}

// GetServerNetworkConfigurationIpBlocksConfigurationInput is an input type that accepts GetServerNetworkConfigurationIpBlocksConfigurationArgs and GetServerNetworkConfigurationIpBlocksConfigurationOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationIpBlocksConfigurationInput` via:
//
//	GetServerNetworkConfigurationIpBlocksConfigurationArgs{...}
type GetServerNetworkConfigurationIpBlocksConfigurationInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationIpBlocksConfigurationOutput() GetServerNetworkConfigurationIpBlocksConfigurationOutput
	ToGetServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(context.Context) GetServerNetworkConfigurationIpBlocksConfigurationOutput
}

type GetServerNetworkConfigurationIpBlocksConfigurationArgs struct {
	// Determines the approach for configuring IP blocks for the server being provisioned.
	ConfigurationType pulumi.StringInput `pulumi:"configurationType"`
	// The IP blocks assigned to this server.
	IpBlocks GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput `pulumi:"ipBlocks"`
}

func (GetServerNetworkConfigurationIpBlocksConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationArgs) ToGetServerNetworkConfigurationIpBlocksConfigurationOutput() GetServerNetworkConfigurationIpBlocksConfigurationOutput {
	return i.ToGetServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationArgs) ToGetServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationIpBlocksConfigurationOutput)
}

// GetServerNetworkConfigurationIpBlocksConfigurationArrayInput is an input type that accepts GetServerNetworkConfigurationIpBlocksConfigurationArray and GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationIpBlocksConfigurationArrayInput` via:
//
//	GetServerNetworkConfigurationIpBlocksConfigurationArray{ GetServerNetworkConfigurationIpBlocksConfigurationArgs{...} }
type GetServerNetworkConfigurationIpBlocksConfigurationArrayInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationIpBlocksConfigurationArrayOutput() GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput
	ToGetServerNetworkConfigurationIpBlocksConfigurationArrayOutputWithContext(context.Context) GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput
}

type GetServerNetworkConfigurationIpBlocksConfigurationArray []GetServerNetworkConfigurationIpBlocksConfigurationInput

func (GetServerNetworkConfigurationIpBlocksConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationArray) ToGetServerNetworkConfigurationIpBlocksConfigurationArrayOutput() GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput {
	return i.ToGetServerNetworkConfigurationIpBlocksConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationArray) ToGetServerNetworkConfigurationIpBlocksConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput)
}

type GetServerNetworkConfigurationIpBlocksConfigurationOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationIpBlocksConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationOutput() GetServerNetworkConfigurationIpBlocksConfigurationOutput {
	return o
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationOutput {
	return o
}

// Determines the approach for configuring IP blocks for the server being provisioned.
func (o GetServerNetworkConfigurationIpBlocksConfigurationOutput) ConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationIpBlocksConfiguration) string { return v.ConfigurationType }).(pulumi.StringOutput)
}

// The IP blocks assigned to this server.
func (o GetServerNetworkConfigurationIpBlocksConfigurationOutput) IpBlocks() GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationIpBlocksConfiguration) []GetServerNetworkConfigurationIpBlocksConfigurationIpBlock {
		return v.IpBlocks
	}).(GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput)
}

type GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationIpBlocksConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationArrayOutput() GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput) Index(i pulumi.IntInput) GetServerNetworkConfigurationIpBlocksConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetworkConfigurationIpBlocksConfiguration {
		return vs[0].([]GetServerNetworkConfigurationIpBlocksConfiguration)[vs[1].(int)]
	}).(GetServerNetworkConfigurationIpBlocksConfigurationOutput)
}

type GetServerNetworkConfigurationIpBlocksConfigurationIpBlock struct {
	// The unique identifier of the server.
	Id     string `pulumi:"id"`
	VlanId int    `pulumi:"vlanId"`
}

// GetServerNetworkConfigurationIpBlocksConfigurationIpBlockInput is an input type that accepts GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs and GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationIpBlocksConfigurationIpBlockInput` via:
//
//	GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs{...}
type GetServerNetworkConfigurationIpBlocksConfigurationIpBlockInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput() GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput
	ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(context.Context) GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput
}

type GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs struct {
	// The unique identifier of the server.
	Id     pulumi.StringInput `pulumi:"id"`
	VlanId pulumi.IntInput    `pulumi:"vlanId"`
}

func (GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput() GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return i.ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput)
}

// GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput is an input type that accepts GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArray and GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput` via:
//
//	GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArray{ GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs{...} }
type GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput() GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput
	ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(context.Context) GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput
}

type GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArray []GetServerNetworkConfigurationIpBlocksConfigurationIpBlockInput

func (GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArray) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput() GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return i.ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArray) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput)
}

type GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput() GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return o
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return o
}

// The unique identifier of the server.
func (o GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationIpBlocksConfigurationIpBlock) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationIpBlocksConfigurationIpBlock) int { return v.VlanId }).(pulumi.IntOutput)
}

type GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationIpBlocksConfigurationIpBlock)(nil)).Elem()
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput() GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) ToGetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput) Index(i pulumi.IntInput) GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetworkConfigurationIpBlocksConfigurationIpBlock {
		return vs[0].([]GetServerNetworkConfigurationIpBlocksConfigurationIpBlock)[vs[1].(int)]
	}).(GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput)
}

type GetServerNetworkConfigurationPrivateNetworkConfiguration struct {
	// Determines the approach for configuring IP blocks for the server being provisioned.
	ConfigurationType string `pulumi:"configurationType"`
	// The list of private networks this server is member of.
	PrivateNetworks []GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork `pulumi:"privateNetworks"`
}

// GetServerNetworkConfigurationPrivateNetworkConfigurationInput is an input type that accepts GetServerNetworkConfigurationPrivateNetworkConfigurationArgs and GetServerNetworkConfigurationPrivateNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPrivateNetworkConfigurationInput` via:
//
//	GetServerNetworkConfigurationPrivateNetworkConfigurationArgs{...}
type GetServerNetworkConfigurationPrivateNetworkConfigurationInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPrivateNetworkConfigurationOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationOutput
	ToGetServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationOutput
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationArgs struct {
	// Determines the approach for configuring IP blocks for the server being provisioned.
	ConfigurationType pulumi.StringInput `pulumi:"configurationType"`
	// The list of private networks this server is member of.
	PrivateNetworks GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput `pulumi:"privateNetworks"`
}

func (GetServerNetworkConfigurationPrivateNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationArgs) ToGetServerNetworkConfigurationPrivateNetworkConfigurationOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return i.ToGetServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationArgs) ToGetServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPrivateNetworkConfigurationOutput)
}

// GetServerNetworkConfigurationPrivateNetworkConfigurationArrayInput is an input type that accepts GetServerNetworkConfigurationPrivateNetworkConfigurationArray and GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPrivateNetworkConfigurationArrayInput` via:
//
//	GetServerNetworkConfigurationPrivateNetworkConfigurationArray{ GetServerNetworkConfigurationPrivateNetworkConfigurationArgs{...} }
type GetServerNetworkConfigurationPrivateNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput
	ToGetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutputWithContext(context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationArray []GetServerNetworkConfigurationPrivateNetworkConfigurationInput

func (GetServerNetworkConfigurationPrivateNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationArray) ToGetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput {
	return i.ToGetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationArray) ToGetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput)
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPrivateNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return o
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return o
}

// Determines the approach for configuring IP blocks for the server being provisioned.
func (o GetServerNetworkConfigurationPrivateNetworkConfigurationOutput) ConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPrivateNetworkConfiguration) string { return v.ConfigurationType }).(pulumi.StringOutput)
}

// The list of private networks this server is member of.
func (o GetServerNetworkConfigurationPrivateNetworkConfigurationOutput) PrivateNetworks() GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPrivateNetworkConfiguration) []GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork {
		return v.PrivateNetworks
	}).(GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput)
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPrivateNetworkConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetServerNetworkConfigurationPrivateNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetworkConfigurationPrivateNetworkConfiguration {
		return vs[0].([]GetServerNetworkConfigurationPrivateNetworkConfiguration)[vs[1].(int)]
	}).(GetServerNetworkConfigurationPrivateNetworkConfigurationOutput)
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork struct {
	// Determines whether DHCP is enabled for this server.
	Dhcp bool `pulumi:"dhcp"`
	// The unique identifier of the server.
	Id string `pulumi:"id"`
	// IPs configured on the server.
	Ips []string `pulumi:"ips"`
	// The status of the assignment to the network.
	StatusDescription string `pulumi:"statusDescription"`
}

// GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput is an input type that accepts GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs and GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput` via:
//
//	GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{...}
type GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput
	ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs struct {
	// Determines whether DHCP is enabled for this server.
	Dhcp pulumi.BoolInput `pulumi:"dhcp"`
	// The unique identifier of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// IPs configured on the server.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The status of the assignment to the network.
	StatusDescription pulumi.StringInput `pulumi:"statusDescription"`
}

func (GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return i.ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput)
}

// GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput is an input type that accepts GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray and GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput` via:
//
//	GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray{ GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{...} }
type GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput
	ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray []GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput

func (GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return i.ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput)
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return o
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return o
}

// Determines whether DHCP is enabled for this server.
func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) Dhcp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork) bool { return v.Dhcp }).(pulumi.BoolOutput)
}

// The unique identifier of the server.
func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// IPs configured on the server.
func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The status of the assignment to the network.
func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput) StatusDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork) string {
		return v.StatusDescription
	}).(pulumi.StringOutput)
}

type GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput() GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) ToGetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork {
		return vs[0].([]GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetwork)[vs[1].(int)]
	}).(GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput)
}

type GetServerNetworkConfigurationPublicNetworkConfiguration struct {
	// The list of public networks this server is member of.
	PublicNetworks []GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork `pulumi:"publicNetworks"`
}

// GetServerNetworkConfigurationPublicNetworkConfigurationInput is an input type that accepts GetServerNetworkConfigurationPublicNetworkConfigurationArgs and GetServerNetworkConfigurationPublicNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPublicNetworkConfigurationInput` via:
//
//	GetServerNetworkConfigurationPublicNetworkConfigurationArgs{...}
type GetServerNetworkConfigurationPublicNetworkConfigurationInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPublicNetworkConfigurationOutput() GetServerNetworkConfigurationPublicNetworkConfigurationOutput
	ToGetServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationOutput
}

type GetServerNetworkConfigurationPublicNetworkConfigurationArgs struct {
	// The list of public networks this server is member of.
	PublicNetworks GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput `pulumi:"publicNetworks"`
}

func (GetServerNetworkConfigurationPublicNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationArgs) ToGetServerNetworkConfigurationPublicNetworkConfigurationOutput() GetServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return i.ToGetServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationArgs) ToGetServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPublicNetworkConfigurationOutput)
}

// GetServerNetworkConfigurationPublicNetworkConfigurationArrayInput is an input type that accepts GetServerNetworkConfigurationPublicNetworkConfigurationArray and GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPublicNetworkConfigurationArrayInput` via:
//
//	GetServerNetworkConfigurationPublicNetworkConfigurationArray{ GetServerNetworkConfigurationPublicNetworkConfigurationArgs{...} }
type GetServerNetworkConfigurationPublicNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput() GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput
	ToGetServerNetworkConfigurationPublicNetworkConfigurationArrayOutputWithContext(context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput
}

type GetServerNetworkConfigurationPublicNetworkConfigurationArray []GetServerNetworkConfigurationPublicNetworkConfigurationInput

func (GetServerNetworkConfigurationPublicNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationArray) ToGetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput() GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput {
	return i.ToGetServerNetworkConfigurationPublicNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationArray) ToGetServerNetworkConfigurationPublicNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput)
}

type GetServerNetworkConfigurationPublicNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPublicNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationOutput() GetServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return o
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return o
}

// The list of public networks this server is member of.
func (o GetServerNetworkConfigurationPublicNetworkConfigurationOutput) PublicNetworks() GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPublicNetworkConfiguration) []GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork {
		return v.PublicNetworks
	}).(GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput)
}

type GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPublicNetworkConfiguration)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput() GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetServerNetworkConfigurationPublicNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetworkConfigurationPublicNetworkConfiguration {
		return vs[0].([]GetServerNetworkConfigurationPublicNetworkConfiguration)[vs[1].(int)]
	}).(GetServerNetworkConfigurationPublicNetworkConfigurationOutput)
}

type GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork struct {
	// The unique identifier of the server.
	Id string `pulumi:"id"`
	// IPs configured on the server.
	Ips []string `pulumi:"ips"`
	// The status of the assignment to the network.
	StatusDescription string `pulumi:"statusDescription"`
}

// GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput is an input type that accepts GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs and GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput` via:
//
//	GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs{...}
type GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput() GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput
	ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput
}

type GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs struct {
	// The unique identifier of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// IPs configured on the server.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The status of the assignment to the network.
	StatusDescription pulumi.StringInput `pulumi:"statusDescription"`
}

func (GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput() GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return i.ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput)
}

// GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput is an input type that accepts GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray and GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput values.
// You can construct a concrete instance of `GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput` via:
//
//	GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray{ GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs{...} }
type GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput interface {
	pulumi.Input

	ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput() GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput
	ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput
}

type GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray []GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput

func (GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput() GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return i.ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput)
}

type GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput() GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return o
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return o
}

// The unique identifier of the server.
func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// IPs configured on the server.
func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The status of the assignment to the network.
func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput) StatusDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork) string {
		return v.StatusDescription
	}).(pulumi.StringOutput)
}

type GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)(nil)).Elem()
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput() GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) ToGetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutputWithContext(ctx context.Context) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput {
	return o
}

func (o GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput) Index(i pulumi.IntInput) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork {
		return vs[0].([]GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetwork)[vs[1].(int)]
	}).(GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput)
}

type GetServerStorageConfiguration struct {
	// Root partition configuration.
	RootPartitions []GetServerStorageConfigurationRootPartition `pulumi:"rootPartitions"`
}

// GetServerStorageConfigurationInput is an input type that accepts GetServerStorageConfigurationArgs and GetServerStorageConfigurationOutput values.
// You can construct a concrete instance of `GetServerStorageConfigurationInput` via:
//
//	GetServerStorageConfigurationArgs{...}
type GetServerStorageConfigurationInput interface {
	pulumi.Input

	ToGetServerStorageConfigurationOutput() GetServerStorageConfigurationOutput
	ToGetServerStorageConfigurationOutputWithContext(context.Context) GetServerStorageConfigurationOutput
}

type GetServerStorageConfigurationArgs struct {
	// Root partition configuration.
	RootPartitions GetServerStorageConfigurationRootPartitionArrayInput `pulumi:"rootPartitions"`
}

func (GetServerStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerStorageConfiguration)(nil)).Elem()
}

func (i GetServerStorageConfigurationArgs) ToGetServerStorageConfigurationOutput() GetServerStorageConfigurationOutput {
	return i.ToGetServerStorageConfigurationOutputWithContext(context.Background())
}

func (i GetServerStorageConfigurationArgs) ToGetServerStorageConfigurationOutputWithContext(ctx context.Context) GetServerStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerStorageConfigurationOutput)
}

// GetServerStorageConfigurationArrayInput is an input type that accepts GetServerStorageConfigurationArray and GetServerStorageConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServerStorageConfigurationArrayInput` via:
//
//	GetServerStorageConfigurationArray{ GetServerStorageConfigurationArgs{...} }
type GetServerStorageConfigurationArrayInput interface {
	pulumi.Input

	ToGetServerStorageConfigurationArrayOutput() GetServerStorageConfigurationArrayOutput
	ToGetServerStorageConfigurationArrayOutputWithContext(context.Context) GetServerStorageConfigurationArrayOutput
}

type GetServerStorageConfigurationArray []GetServerStorageConfigurationInput

func (GetServerStorageConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerStorageConfiguration)(nil)).Elem()
}

func (i GetServerStorageConfigurationArray) ToGetServerStorageConfigurationArrayOutput() GetServerStorageConfigurationArrayOutput {
	return i.ToGetServerStorageConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServerStorageConfigurationArray) ToGetServerStorageConfigurationArrayOutputWithContext(ctx context.Context) GetServerStorageConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerStorageConfigurationArrayOutput)
}

type GetServerStorageConfigurationOutput struct{ *pulumi.OutputState }

func (GetServerStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerStorageConfiguration)(nil)).Elem()
}

func (o GetServerStorageConfigurationOutput) ToGetServerStorageConfigurationOutput() GetServerStorageConfigurationOutput {
	return o
}

func (o GetServerStorageConfigurationOutput) ToGetServerStorageConfigurationOutputWithContext(ctx context.Context) GetServerStorageConfigurationOutput {
	return o
}

// Root partition configuration.
func (o GetServerStorageConfigurationOutput) RootPartitions() GetServerStorageConfigurationRootPartitionArrayOutput {
	return o.ApplyT(func(v GetServerStorageConfiguration) []GetServerStorageConfigurationRootPartition {
		return v.RootPartitions
	}).(GetServerStorageConfigurationRootPartitionArrayOutput)
}

type GetServerStorageConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServerStorageConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerStorageConfiguration)(nil)).Elem()
}

func (o GetServerStorageConfigurationArrayOutput) ToGetServerStorageConfigurationArrayOutput() GetServerStorageConfigurationArrayOutput {
	return o
}

func (o GetServerStorageConfigurationArrayOutput) ToGetServerStorageConfigurationArrayOutputWithContext(ctx context.Context) GetServerStorageConfigurationArrayOutput {
	return o
}

func (o GetServerStorageConfigurationArrayOutput) Index(i pulumi.IntInput) GetServerStorageConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerStorageConfiguration {
		return vs[0].([]GetServerStorageConfiguration)[vs[1].(int)]
	}).(GetServerStorageConfigurationOutput)
}

type GetServerStorageConfigurationRootPartition struct {
	// Software RAID configuration.
	Raid string `pulumi:"raid"`
	// The size of the root partition in GB.
	Size int `pulumi:"size"`
}

// GetServerStorageConfigurationRootPartitionInput is an input type that accepts GetServerStorageConfigurationRootPartitionArgs and GetServerStorageConfigurationRootPartitionOutput values.
// You can construct a concrete instance of `GetServerStorageConfigurationRootPartitionInput` via:
//
//	GetServerStorageConfigurationRootPartitionArgs{...}
type GetServerStorageConfigurationRootPartitionInput interface {
	pulumi.Input

	ToGetServerStorageConfigurationRootPartitionOutput() GetServerStorageConfigurationRootPartitionOutput
	ToGetServerStorageConfigurationRootPartitionOutputWithContext(context.Context) GetServerStorageConfigurationRootPartitionOutput
}

type GetServerStorageConfigurationRootPartitionArgs struct {
	// Software RAID configuration.
	Raid pulumi.StringInput `pulumi:"raid"`
	// The size of the root partition in GB.
	Size pulumi.IntInput `pulumi:"size"`
}

func (GetServerStorageConfigurationRootPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (i GetServerStorageConfigurationRootPartitionArgs) ToGetServerStorageConfigurationRootPartitionOutput() GetServerStorageConfigurationRootPartitionOutput {
	return i.ToGetServerStorageConfigurationRootPartitionOutputWithContext(context.Background())
}

func (i GetServerStorageConfigurationRootPartitionArgs) ToGetServerStorageConfigurationRootPartitionOutputWithContext(ctx context.Context) GetServerStorageConfigurationRootPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerStorageConfigurationRootPartitionOutput)
}

// GetServerStorageConfigurationRootPartitionArrayInput is an input type that accepts GetServerStorageConfigurationRootPartitionArray and GetServerStorageConfigurationRootPartitionArrayOutput values.
// You can construct a concrete instance of `GetServerStorageConfigurationRootPartitionArrayInput` via:
//
//	GetServerStorageConfigurationRootPartitionArray{ GetServerStorageConfigurationRootPartitionArgs{...} }
type GetServerStorageConfigurationRootPartitionArrayInput interface {
	pulumi.Input

	ToGetServerStorageConfigurationRootPartitionArrayOutput() GetServerStorageConfigurationRootPartitionArrayOutput
	ToGetServerStorageConfigurationRootPartitionArrayOutputWithContext(context.Context) GetServerStorageConfigurationRootPartitionArrayOutput
}

type GetServerStorageConfigurationRootPartitionArray []GetServerStorageConfigurationRootPartitionInput

func (GetServerStorageConfigurationRootPartitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (i GetServerStorageConfigurationRootPartitionArray) ToGetServerStorageConfigurationRootPartitionArrayOutput() GetServerStorageConfigurationRootPartitionArrayOutput {
	return i.ToGetServerStorageConfigurationRootPartitionArrayOutputWithContext(context.Background())
}

func (i GetServerStorageConfigurationRootPartitionArray) ToGetServerStorageConfigurationRootPartitionArrayOutputWithContext(ctx context.Context) GetServerStorageConfigurationRootPartitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerStorageConfigurationRootPartitionArrayOutput)
}

type GetServerStorageConfigurationRootPartitionOutput struct{ *pulumi.OutputState }

func (GetServerStorageConfigurationRootPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (o GetServerStorageConfigurationRootPartitionOutput) ToGetServerStorageConfigurationRootPartitionOutput() GetServerStorageConfigurationRootPartitionOutput {
	return o
}

func (o GetServerStorageConfigurationRootPartitionOutput) ToGetServerStorageConfigurationRootPartitionOutputWithContext(ctx context.Context) GetServerStorageConfigurationRootPartitionOutput {
	return o
}

// Software RAID configuration.
func (o GetServerStorageConfigurationRootPartitionOutput) Raid() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerStorageConfigurationRootPartition) string { return v.Raid }).(pulumi.StringOutput)
}

// The size of the root partition in GB.
func (o GetServerStorageConfigurationRootPartitionOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerStorageConfigurationRootPartition) int { return v.Size }).(pulumi.IntOutput)
}

type GetServerStorageConfigurationRootPartitionArrayOutput struct{ *pulumi.OutputState }

func (GetServerStorageConfigurationRootPartitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerStorageConfigurationRootPartition)(nil)).Elem()
}

func (o GetServerStorageConfigurationRootPartitionArrayOutput) ToGetServerStorageConfigurationRootPartitionArrayOutput() GetServerStorageConfigurationRootPartitionArrayOutput {
	return o
}

func (o GetServerStorageConfigurationRootPartitionArrayOutput) ToGetServerStorageConfigurationRootPartitionArrayOutputWithContext(ctx context.Context) GetServerStorageConfigurationRootPartitionArrayOutput {
	return o
}

func (o GetServerStorageConfigurationRootPartitionArrayOutput) Index(i pulumi.IntInput) GetServerStorageConfigurationRootPartitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerStorageConfigurationRootPartition {
		return vs[0].([]GetServerStorageConfigurationRootPartition)[vs[1].(int)]
	}).(GetServerStorageConfigurationRootPartitionOutput)
}

type GetServerTag struct {
	// Who the tag was created by.
	CreatedBy string `pulumi:"createdBy"`
	// The unique identifier of the server.
	Id string `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag bool `pulumi:"isBillingTag"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// The value of the tag assigned to the server.
	Value string `pulumi:"value"`
}

// GetServerTagInput is an input type that accepts GetServerTagArgs and GetServerTagOutput values.
// You can construct a concrete instance of `GetServerTagInput` via:
//
//	GetServerTagArgs{...}
type GetServerTagInput interface {
	pulumi.Input

	ToGetServerTagOutput() GetServerTagOutput
	ToGetServerTagOutputWithContext(context.Context) GetServerTagOutput
}

type GetServerTagArgs struct {
	// Who the tag was created by.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The unique identifier of the server.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag pulumi.BoolInput `pulumi:"isBillingTag"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the tag assigned to the server.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetServerTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTag)(nil)).Elem()
}

func (i GetServerTagArgs) ToGetServerTagOutput() GetServerTagOutput {
	return i.ToGetServerTagOutputWithContext(context.Background())
}

func (i GetServerTagArgs) ToGetServerTagOutputWithContext(ctx context.Context) GetServerTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerTagOutput)
}

// GetServerTagArrayInput is an input type that accepts GetServerTagArray and GetServerTagArrayOutput values.
// You can construct a concrete instance of `GetServerTagArrayInput` via:
//
//	GetServerTagArray{ GetServerTagArgs{...} }
type GetServerTagArrayInput interface {
	pulumi.Input

	ToGetServerTagArrayOutput() GetServerTagArrayOutput
	ToGetServerTagArrayOutputWithContext(context.Context) GetServerTagArrayOutput
}

type GetServerTagArray []GetServerTagInput

func (GetServerTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerTag)(nil)).Elem()
}

func (i GetServerTagArray) ToGetServerTagArrayOutput() GetServerTagArrayOutput {
	return i.ToGetServerTagArrayOutputWithContext(context.Background())
}

func (i GetServerTagArray) ToGetServerTagArrayOutputWithContext(ctx context.Context) GetServerTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerTagArrayOutput)
}

type GetServerTagOutput struct{ *pulumi.OutputState }

func (GetServerTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerTag)(nil)).Elem()
}

func (o GetServerTagOutput) ToGetServerTagOutput() GetServerTagOutput {
	return o
}

func (o GetServerTagOutput) ToGetServerTagOutputWithContext(ctx context.Context) GetServerTagOutput {
	return o
}

// Who the tag was created by.
func (o GetServerTagOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTag) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The unique identifier of the server.
func (o GetServerTagOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTag) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o GetServerTagOutput) IsBillingTag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerTag) bool { return v.IsBillingTag }).(pulumi.BoolOutput)
}

// The name of the tag.
func (o GetServerTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTag) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the tag assigned to the server.
func (o GetServerTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetServerTagArrayOutput struct{ *pulumi.OutputState }

func (GetServerTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerTag)(nil)).Elem()
}

func (o GetServerTagArrayOutput) ToGetServerTagArrayOutput() GetServerTagArrayOutput {
	return o
}

func (o GetServerTagArrayOutput) ToGetServerTagArrayOutputWithContext(ctx context.Context) GetServerTagArrayOutput {
	return o
}

func (o GetServerTagArrayOutput) Index(i pulumi.IntInput) GetServerTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerTag {
		return vs[0].([]GetServerTag)[vs[1].(int)]
	}).(GetServerTagOutput)
}

type GetStorageNetworkVolume struct {
	// Maximum capacity in GB.
	CapacityInGb int `pulumi:"capacityInGb"`
	// Date and time when this volume was created.
	CreatedOn string `pulumi:"createdOn"`
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn string `pulumi:"deleteRequestedOn"`
	// Volume description.
	Description string `pulumi:"description"`
	// The storage network identifier.
	Id string `pulumi:"id"`
	// The friendly name of this storage network.
	Name string `pulumi:"name"`
	// Volume's full path. It is in form of `/{volumeId}/pathSuffix`.
	Path string `pulumi:"path"`
	// Last part of volume's path.
	PathSuffix string `pulumi:"pathSuffix"`
	// Permissions for the volume.
	Permissions []GetStorageNetworkVolumePermission `pulumi:"permissions"`
	// File system protocol.
	Protocol string `pulumi:"protocol"`
	// Volume's status.
	Status string `pulumi:"status"`
	// The tags assigned to the volume.
	Tags []GetStorageNetworkVolumeTag `pulumi:"tags"`
	// Used capacity in GB, updated periodically.
	UsedCapacityInGb int `pulumi:"usedCapacityInGb"`
}

// GetStorageNetworkVolumeInput is an input type that accepts GetStorageNetworkVolumeArgs and GetStorageNetworkVolumeOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumeInput` via:
//
//	GetStorageNetworkVolumeArgs{...}
type GetStorageNetworkVolumeInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumeOutput() GetStorageNetworkVolumeOutput
	ToGetStorageNetworkVolumeOutputWithContext(context.Context) GetStorageNetworkVolumeOutput
}

type GetStorageNetworkVolumeArgs struct {
	// Maximum capacity in GB.
	CapacityInGb pulumi.IntInput `pulumi:"capacityInGb"`
	// Date and time when this volume was created.
	CreatedOn pulumi.StringInput `pulumi:"createdOn"`
	// Date and time of the initial request for volume deletion.
	DeleteRequestedOn pulumi.StringInput `pulumi:"deleteRequestedOn"`
	// Volume description.
	Description pulumi.StringInput `pulumi:"description"`
	// The storage network identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The friendly name of this storage network.
	Name pulumi.StringInput `pulumi:"name"`
	// Volume's full path. It is in form of `/{volumeId}/pathSuffix`.
	Path pulumi.StringInput `pulumi:"path"`
	// Last part of volume's path.
	PathSuffix pulumi.StringInput `pulumi:"pathSuffix"`
	// Permissions for the volume.
	Permissions GetStorageNetworkVolumePermissionArrayInput `pulumi:"permissions"`
	// File system protocol.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Volume's status.
	Status pulumi.StringInput `pulumi:"status"`
	// The tags assigned to the volume.
	Tags GetStorageNetworkVolumeTagArrayInput `pulumi:"tags"`
	// Used capacity in GB, updated periodically.
	UsedCapacityInGb pulumi.IntInput `pulumi:"usedCapacityInGb"`
}

func (GetStorageNetworkVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolume)(nil)).Elem()
}

func (i GetStorageNetworkVolumeArgs) ToGetStorageNetworkVolumeOutput() GetStorageNetworkVolumeOutput {
	return i.ToGetStorageNetworkVolumeOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumeArgs) ToGetStorageNetworkVolumeOutputWithContext(ctx context.Context) GetStorageNetworkVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumeOutput)
}

// GetStorageNetworkVolumeArrayInput is an input type that accepts GetStorageNetworkVolumeArray and GetStorageNetworkVolumeArrayOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumeArrayInput` via:
//
//	GetStorageNetworkVolumeArray{ GetStorageNetworkVolumeArgs{...} }
type GetStorageNetworkVolumeArrayInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumeArrayOutput() GetStorageNetworkVolumeArrayOutput
	ToGetStorageNetworkVolumeArrayOutputWithContext(context.Context) GetStorageNetworkVolumeArrayOutput
}

type GetStorageNetworkVolumeArray []GetStorageNetworkVolumeInput

func (GetStorageNetworkVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolume)(nil)).Elem()
}

func (i GetStorageNetworkVolumeArray) ToGetStorageNetworkVolumeArrayOutput() GetStorageNetworkVolumeArrayOutput {
	return i.ToGetStorageNetworkVolumeArrayOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumeArray) ToGetStorageNetworkVolumeArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumeArrayOutput)
}

type GetStorageNetworkVolumeOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolume)(nil)).Elem()
}

func (o GetStorageNetworkVolumeOutput) ToGetStorageNetworkVolumeOutput() GetStorageNetworkVolumeOutput {
	return o
}

func (o GetStorageNetworkVolumeOutput) ToGetStorageNetworkVolumeOutputWithContext(ctx context.Context) GetStorageNetworkVolumeOutput {
	return o
}

// Maximum capacity in GB.
func (o GetStorageNetworkVolumeOutput) CapacityInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) int { return v.CapacityInGb }).(pulumi.IntOutput)
}

// Date and time when this volume was created.
func (o GetStorageNetworkVolumeOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.CreatedOn }).(pulumi.StringOutput)
}

// Date and time of the initial request for volume deletion.
func (o GetStorageNetworkVolumeOutput) DeleteRequestedOn() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.DeleteRequestedOn }).(pulumi.StringOutput)
}

// Volume description.
func (o GetStorageNetworkVolumeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.Description }).(pulumi.StringOutput)
}

// The storage network identifier.
func (o GetStorageNetworkVolumeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.Id }).(pulumi.StringOutput)
}

// The friendly name of this storage network.
func (o GetStorageNetworkVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.Name }).(pulumi.StringOutput)
}

// Volume's full path. It is in form of `/{volumeId}/pathSuffix`.
func (o GetStorageNetworkVolumeOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.Path }).(pulumi.StringOutput)
}

// Last part of volume's path.
func (o GetStorageNetworkVolumeOutput) PathSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.PathSuffix }).(pulumi.StringOutput)
}

// Permissions for the volume.
func (o GetStorageNetworkVolumeOutput) Permissions() GetStorageNetworkVolumePermissionArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) []GetStorageNetworkVolumePermission { return v.Permissions }).(GetStorageNetworkVolumePermissionArrayOutput)
}

// File system protocol.
func (o GetStorageNetworkVolumeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.Protocol }).(pulumi.StringOutput)
}

// Volume's status.
func (o GetStorageNetworkVolumeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) string { return v.Status }).(pulumi.StringOutput)
}

// The tags assigned to the volume.
func (o GetStorageNetworkVolumeOutput) Tags() GetStorageNetworkVolumeTagArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) []GetStorageNetworkVolumeTag { return v.Tags }).(GetStorageNetworkVolumeTagArrayOutput)
}

// Used capacity in GB, updated periodically.
func (o GetStorageNetworkVolumeOutput) UsedCapacityInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetStorageNetworkVolume) int { return v.UsedCapacityInGb }).(pulumi.IntOutput)
}

type GetStorageNetworkVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolume)(nil)).Elem()
}

func (o GetStorageNetworkVolumeArrayOutput) ToGetStorageNetworkVolumeArrayOutput() GetStorageNetworkVolumeArrayOutput {
	return o
}

func (o GetStorageNetworkVolumeArrayOutput) ToGetStorageNetworkVolumeArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumeArrayOutput {
	return o
}

func (o GetStorageNetworkVolumeArrayOutput) Index(i pulumi.IntInput) GetStorageNetworkVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageNetworkVolume {
		return vs[0].([]GetStorageNetworkVolume)[vs[1].(int)]
	}).(GetStorageNetworkVolumeOutput)
}

type GetStorageNetworkVolumePermission struct {
	// NFS specific permissions on the volume.
	Nfs []GetStorageNetworkVolumePermissionNf `pulumi:"nfs"`
}

// GetStorageNetworkVolumePermissionInput is an input type that accepts GetStorageNetworkVolumePermissionArgs and GetStorageNetworkVolumePermissionOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumePermissionInput` via:
//
//	GetStorageNetworkVolumePermissionArgs{...}
type GetStorageNetworkVolumePermissionInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumePermissionOutput() GetStorageNetworkVolumePermissionOutput
	ToGetStorageNetworkVolumePermissionOutputWithContext(context.Context) GetStorageNetworkVolumePermissionOutput
}

type GetStorageNetworkVolumePermissionArgs struct {
	// NFS specific permissions on the volume.
	Nfs GetStorageNetworkVolumePermissionNfArrayInput `pulumi:"nfs"`
}

func (GetStorageNetworkVolumePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolumePermission)(nil)).Elem()
}

func (i GetStorageNetworkVolumePermissionArgs) ToGetStorageNetworkVolumePermissionOutput() GetStorageNetworkVolumePermissionOutput {
	return i.ToGetStorageNetworkVolumePermissionOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumePermissionArgs) ToGetStorageNetworkVolumePermissionOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumePermissionOutput)
}

// GetStorageNetworkVolumePermissionArrayInput is an input type that accepts GetStorageNetworkVolumePermissionArray and GetStorageNetworkVolumePermissionArrayOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumePermissionArrayInput` via:
//
//	GetStorageNetworkVolumePermissionArray{ GetStorageNetworkVolumePermissionArgs{...} }
type GetStorageNetworkVolumePermissionArrayInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumePermissionArrayOutput() GetStorageNetworkVolumePermissionArrayOutput
	ToGetStorageNetworkVolumePermissionArrayOutputWithContext(context.Context) GetStorageNetworkVolumePermissionArrayOutput
}

type GetStorageNetworkVolumePermissionArray []GetStorageNetworkVolumePermissionInput

func (GetStorageNetworkVolumePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolumePermission)(nil)).Elem()
}

func (i GetStorageNetworkVolumePermissionArray) ToGetStorageNetworkVolumePermissionArrayOutput() GetStorageNetworkVolumePermissionArrayOutput {
	return i.ToGetStorageNetworkVolumePermissionArrayOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumePermissionArray) ToGetStorageNetworkVolumePermissionArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumePermissionArrayOutput)
}

type GetStorageNetworkVolumePermissionOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolumePermission)(nil)).Elem()
}

func (o GetStorageNetworkVolumePermissionOutput) ToGetStorageNetworkVolumePermissionOutput() GetStorageNetworkVolumePermissionOutput {
	return o
}

func (o GetStorageNetworkVolumePermissionOutput) ToGetStorageNetworkVolumePermissionOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionOutput {
	return o
}

// NFS specific permissions on the volume.
func (o GetStorageNetworkVolumePermissionOutput) Nfs() GetStorageNetworkVolumePermissionNfArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumePermission) []GetStorageNetworkVolumePermissionNf { return v.Nfs }).(GetStorageNetworkVolumePermissionNfArrayOutput)
}

type GetStorageNetworkVolumePermissionArrayOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolumePermission)(nil)).Elem()
}

func (o GetStorageNetworkVolumePermissionArrayOutput) ToGetStorageNetworkVolumePermissionArrayOutput() GetStorageNetworkVolumePermissionArrayOutput {
	return o
}

func (o GetStorageNetworkVolumePermissionArrayOutput) ToGetStorageNetworkVolumePermissionArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionArrayOutput {
	return o
}

func (o GetStorageNetworkVolumePermissionArrayOutput) Index(i pulumi.IntInput) GetStorageNetworkVolumePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageNetworkVolumePermission {
		return vs[0].([]GetStorageNetworkVolumePermission)[vs[1].(int)]
	}).(GetStorageNetworkVolumePermissionOutput)
}

type GetStorageNetworkVolumePermissionNf struct {
	// All squash permission.
	AllSquashes []string `pulumi:"allSquashes"`
	// No squash permission.
	NoSquashes []string `pulumi:"noSquashes"`
	// Read only access.
	ReadOnlies []string `pulumi:"readOnlies"`
	// Read/Write access.
	ReadWrites []string `pulumi:"readWrites"`
	// Root squash permission.
	RootSquashes []string `pulumi:"rootSquashes"`
}

// GetStorageNetworkVolumePermissionNfInput is an input type that accepts GetStorageNetworkVolumePermissionNfArgs and GetStorageNetworkVolumePermissionNfOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumePermissionNfInput` via:
//
//	GetStorageNetworkVolumePermissionNfArgs{...}
type GetStorageNetworkVolumePermissionNfInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumePermissionNfOutput() GetStorageNetworkVolumePermissionNfOutput
	ToGetStorageNetworkVolumePermissionNfOutputWithContext(context.Context) GetStorageNetworkVolumePermissionNfOutput
}

type GetStorageNetworkVolumePermissionNfArgs struct {
	// All squash permission.
	AllSquashes pulumi.StringArrayInput `pulumi:"allSquashes"`
	// No squash permission.
	NoSquashes pulumi.StringArrayInput `pulumi:"noSquashes"`
	// Read only access.
	ReadOnlies pulumi.StringArrayInput `pulumi:"readOnlies"`
	// Read/Write access.
	ReadWrites pulumi.StringArrayInput `pulumi:"readWrites"`
	// Root squash permission.
	RootSquashes pulumi.StringArrayInput `pulumi:"rootSquashes"`
}

func (GetStorageNetworkVolumePermissionNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolumePermissionNf)(nil)).Elem()
}

func (i GetStorageNetworkVolumePermissionNfArgs) ToGetStorageNetworkVolumePermissionNfOutput() GetStorageNetworkVolumePermissionNfOutput {
	return i.ToGetStorageNetworkVolumePermissionNfOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumePermissionNfArgs) ToGetStorageNetworkVolumePermissionNfOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumePermissionNfOutput)
}

// GetStorageNetworkVolumePermissionNfArrayInput is an input type that accepts GetStorageNetworkVolumePermissionNfArray and GetStorageNetworkVolumePermissionNfArrayOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumePermissionNfArrayInput` via:
//
//	GetStorageNetworkVolumePermissionNfArray{ GetStorageNetworkVolumePermissionNfArgs{...} }
type GetStorageNetworkVolumePermissionNfArrayInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumePermissionNfArrayOutput() GetStorageNetworkVolumePermissionNfArrayOutput
	ToGetStorageNetworkVolumePermissionNfArrayOutputWithContext(context.Context) GetStorageNetworkVolumePermissionNfArrayOutput
}

type GetStorageNetworkVolumePermissionNfArray []GetStorageNetworkVolumePermissionNfInput

func (GetStorageNetworkVolumePermissionNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolumePermissionNf)(nil)).Elem()
}

func (i GetStorageNetworkVolumePermissionNfArray) ToGetStorageNetworkVolumePermissionNfArrayOutput() GetStorageNetworkVolumePermissionNfArrayOutput {
	return i.ToGetStorageNetworkVolumePermissionNfArrayOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumePermissionNfArray) ToGetStorageNetworkVolumePermissionNfArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumePermissionNfArrayOutput)
}

type GetStorageNetworkVolumePermissionNfOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumePermissionNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolumePermissionNf)(nil)).Elem()
}

func (o GetStorageNetworkVolumePermissionNfOutput) ToGetStorageNetworkVolumePermissionNfOutput() GetStorageNetworkVolumePermissionNfOutput {
	return o
}

func (o GetStorageNetworkVolumePermissionNfOutput) ToGetStorageNetworkVolumePermissionNfOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionNfOutput {
	return o
}

// All squash permission.
func (o GetStorageNetworkVolumePermissionNfOutput) AllSquashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumePermissionNf) []string { return v.AllSquashes }).(pulumi.StringArrayOutput)
}

// No squash permission.
func (o GetStorageNetworkVolumePermissionNfOutput) NoSquashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumePermissionNf) []string { return v.NoSquashes }).(pulumi.StringArrayOutput)
}

// Read only access.
func (o GetStorageNetworkVolumePermissionNfOutput) ReadOnlies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumePermissionNf) []string { return v.ReadOnlies }).(pulumi.StringArrayOutput)
}

// Read/Write access.
func (o GetStorageNetworkVolumePermissionNfOutput) ReadWrites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumePermissionNf) []string { return v.ReadWrites }).(pulumi.StringArrayOutput)
}

// Root squash permission.
func (o GetStorageNetworkVolumePermissionNfOutput) RootSquashes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumePermissionNf) []string { return v.RootSquashes }).(pulumi.StringArrayOutput)
}

type GetStorageNetworkVolumePermissionNfArrayOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumePermissionNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolumePermissionNf)(nil)).Elem()
}

func (o GetStorageNetworkVolumePermissionNfArrayOutput) ToGetStorageNetworkVolumePermissionNfArrayOutput() GetStorageNetworkVolumePermissionNfArrayOutput {
	return o
}

func (o GetStorageNetworkVolumePermissionNfArrayOutput) ToGetStorageNetworkVolumePermissionNfArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumePermissionNfArrayOutput {
	return o
}

func (o GetStorageNetworkVolumePermissionNfArrayOutput) Index(i pulumi.IntInput) GetStorageNetworkVolumePermissionNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageNetworkVolumePermissionNf {
		return vs[0].([]GetStorageNetworkVolumePermissionNf)[vs[1].(int)]
	}).(GetStorageNetworkVolumePermissionNfOutput)
}

type GetStorageNetworkVolumeTag struct {
	// Who the tag was created by.
	CreatedBy string `pulumi:"createdBy"`
	// The storage network identifier.
	Id string `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag bool `pulumi:"isBillingTag"`
	// The friendly name of this storage network.
	Name string `pulumi:"name"`
	// The value of the tag assigned to the volume.
	Value string `pulumi:"value"`
}

// GetStorageNetworkVolumeTagInput is an input type that accepts GetStorageNetworkVolumeTagArgs and GetStorageNetworkVolumeTagOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumeTagInput` via:
//
//	GetStorageNetworkVolumeTagArgs{...}
type GetStorageNetworkVolumeTagInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumeTagOutput() GetStorageNetworkVolumeTagOutput
	ToGetStorageNetworkVolumeTagOutputWithContext(context.Context) GetStorageNetworkVolumeTagOutput
}

type GetStorageNetworkVolumeTagArgs struct {
	// Who the tag was created by.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The storage network identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether or not to show the tag as part of billing and invoices.
	IsBillingTag pulumi.BoolInput `pulumi:"isBillingTag"`
	// The friendly name of this storage network.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the tag assigned to the volume.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetStorageNetworkVolumeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolumeTag)(nil)).Elem()
}

func (i GetStorageNetworkVolumeTagArgs) ToGetStorageNetworkVolumeTagOutput() GetStorageNetworkVolumeTagOutput {
	return i.ToGetStorageNetworkVolumeTagOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumeTagArgs) ToGetStorageNetworkVolumeTagOutputWithContext(ctx context.Context) GetStorageNetworkVolumeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumeTagOutput)
}

// GetStorageNetworkVolumeTagArrayInput is an input type that accepts GetStorageNetworkVolumeTagArray and GetStorageNetworkVolumeTagArrayOutput values.
// You can construct a concrete instance of `GetStorageNetworkVolumeTagArrayInput` via:
//
//	GetStorageNetworkVolumeTagArray{ GetStorageNetworkVolumeTagArgs{...} }
type GetStorageNetworkVolumeTagArrayInput interface {
	pulumi.Input

	ToGetStorageNetworkVolumeTagArrayOutput() GetStorageNetworkVolumeTagArrayOutput
	ToGetStorageNetworkVolumeTagArrayOutputWithContext(context.Context) GetStorageNetworkVolumeTagArrayOutput
}

type GetStorageNetworkVolumeTagArray []GetStorageNetworkVolumeTagInput

func (GetStorageNetworkVolumeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolumeTag)(nil)).Elem()
}

func (i GetStorageNetworkVolumeTagArray) ToGetStorageNetworkVolumeTagArrayOutput() GetStorageNetworkVolumeTagArrayOutput {
	return i.ToGetStorageNetworkVolumeTagArrayOutputWithContext(context.Background())
}

func (i GetStorageNetworkVolumeTagArray) ToGetStorageNetworkVolumeTagArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageNetworkVolumeTagArrayOutput)
}

type GetStorageNetworkVolumeTagOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageNetworkVolumeTag)(nil)).Elem()
}

func (o GetStorageNetworkVolumeTagOutput) ToGetStorageNetworkVolumeTagOutput() GetStorageNetworkVolumeTagOutput {
	return o
}

func (o GetStorageNetworkVolumeTagOutput) ToGetStorageNetworkVolumeTagOutputWithContext(ctx context.Context) GetStorageNetworkVolumeTagOutput {
	return o
}

// Who the tag was created by.
func (o GetStorageNetworkVolumeTagOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumeTag) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The storage network identifier.
func (o GetStorageNetworkVolumeTagOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumeTag) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not to show the tag as part of billing and invoices.
func (o GetStorageNetworkVolumeTagOutput) IsBillingTag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumeTag) bool { return v.IsBillingTag }).(pulumi.BoolOutput)
}

// The friendly name of this storage network.
func (o GetStorageNetworkVolumeTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumeTag) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the tag assigned to the volume.
func (o GetStorageNetworkVolumeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageNetworkVolumeTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetStorageNetworkVolumeTagArrayOutput struct{ *pulumi.OutputState }

func (GetStorageNetworkVolumeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageNetworkVolumeTag)(nil)).Elem()
}

func (o GetStorageNetworkVolumeTagArrayOutput) ToGetStorageNetworkVolumeTagArrayOutput() GetStorageNetworkVolumeTagArrayOutput {
	return o
}

func (o GetStorageNetworkVolumeTagArrayOutput) ToGetStorageNetworkVolumeTagArrayOutputWithContext(ctx context.Context) GetStorageNetworkVolumeTagArrayOutput {
	return o
}

func (o GetStorageNetworkVolumeTagArrayOutput) Index(i pulumi.IntInput) GetStorageNetworkVolumeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageNetworkVolumeTag {
		return vs[0].([]GetStorageNetworkVolumeTag)[vs[1].(int)]
	}).(GetStorageNetworkVolumeTagOutput)
}

type GetTagResourceAssignment struct {
	// The resource name.
	ResourceName string `pulumi:"resourceName"`
	// The value of the tag assigned to the resource.
	// * ` createdBy  ` - The tag's creator.
	Value string `pulumi:"value"`
}

// GetTagResourceAssignmentInput is an input type that accepts GetTagResourceAssignmentArgs and GetTagResourceAssignmentOutput values.
// You can construct a concrete instance of `GetTagResourceAssignmentInput` via:
//
//	GetTagResourceAssignmentArgs{...}
type GetTagResourceAssignmentInput interface {
	pulumi.Input

	ToGetTagResourceAssignmentOutput() GetTagResourceAssignmentOutput
	ToGetTagResourceAssignmentOutputWithContext(context.Context) GetTagResourceAssignmentOutput
}

type GetTagResourceAssignmentArgs struct {
	// The resource name.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// The value of the tag assigned to the resource.
	// * ` createdBy  ` - The tag's creator.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTagResourceAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagResourceAssignment)(nil)).Elem()
}

func (i GetTagResourceAssignmentArgs) ToGetTagResourceAssignmentOutput() GetTagResourceAssignmentOutput {
	return i.ToGetTagResourceAssignmentOutputWithContext(context.Background())
}

func (i GetTagResourceAssignmentArgs) ToGetTagResourceAssignmentOutputWithContext(ctx context.Context) GetTagResourceAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagResourceAssignmentOutput)
}

// GetTagResourceAssignmentArrayInput is an input type that accepts GetTagResourceAssignmentArray and GetTagResourceAssignmentArrayOutput values.
// You can construct a concrete instance of `GetTagResourceAssignmentArrayInput` via:
//
//	GetTagResourceAssignmentArray{ GetTagResourceAssignmentArgs{...} }
type GetTagResourceAssignmentArrayInput interface {
	pulumi.Input

	ToGetTagResourceAssignmentArrayOutput() GetTagResourceAssignmentArrayOutput
	ToGetTagResourceAssignmentArrayOutputWithContext(context.Context) GetTagResourceAssignmentArrayOutput
}

type GetTagResourceAssignmentArray []GetTagResourceAssignmentInput

func (GetTagResourceAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagResourceAssignment)(nil)).Elem()
}

func (i GetTagResourceAssignmentArray) ToGetTagResourceAssignmentArrayOutput() GetTagResourceAssignmentArrayOutput {
	return i.ToGetTagResourceAssignmentArrayOutputWithContext(context.Background())
}

func (i GetTagResourceAssignmentArray) ToGetTagResourceAssignmentArrayOutputWithContext(ctx context.Context) GetTagResourceAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagResourceAssignmentArrayOutput)
}

type GetTagResourceAssignmentOutput struct{ *pulumi.OutputState }

func (GetTagResourceAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagResourceAssignment)(nil)).Elem()
}

func (o GetTagResourceAssignmentOutput) ToGetTagResourceAssignmentOutput() GetTagResourceAssignmentOutput {
	return o
}

func (o GetTagResourceAssignmentOutput) ToGetTagResourceAssignmentOutputWithContext(ctx context.Context) GetTagResourceAssignmentOutput {
	return o
}

// The resource name.
func (o GetTagResourceAssignmentOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResourceAssignment) string { return v.ResourceName }).(pulumi.StringOutput)
}

// The value of the tag assigned to the resource.
// * ` createdBy  ` - The tag's creator.
func (o GetTagResourceAssignmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagResourceAssignment) string { return v.Value }).(pulumi.StringOutput)
}

type GetTagResourceAssignmentArrayOutput struct{ *pulumi.OutputState }

func (GetTagResourceAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagResourceAssignment)(nil)).Elem()
}

func (o GetTagResourceAssignmentArrayOutput) ToGetTagResourceAssignmentArrayOutput() GetTagResourceAssignmentArrayOutput {
	return o
}

func (o GetTagResourceAssignmentArrayOutput) ToGetTagResourceAssignmentArrayOutputWithContext(ctx context.Context) GetTagResourceAssignmentArrayOutput {
	return o
}

func (o GetTagResourceAssignmentArrayOutput) Index(i pulumi.IntInput) GetTagResourceAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagResourceAssignment {
		return vs[0].([]GetTagResourceAssignment)[vs[1].(int)]
	}).(GetTagResourceAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpBlockTagInput)(nil)).Elem(), IpBlockTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpBlockTagArrayInput)(nil)).Elem(), IpBlockTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpBlockTagTagAssignmentInput)(nil)).Elem(), IpBlockTagTagAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpBlockTagTagAssignmentPtrInput)(nil)).Elem(), IpBlockTagTagAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkMembershipInput)(nil)).Elem(), PrivateNetworkMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkMembershipArrayInput)(nil)).Elem(), PrivateNetworkMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkServerInput)(nil)).Elem(), PrivateNetworkServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateNetworkServerArrayInput)(nil)).Elem(), PrivateNetworkServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkIpBlockInput)(nil)).Elem(), PublicNetworkIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkIpBlockArrayInput)(nil)).Elem(), PublicNetworkIpBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkIpBlockPublicNetworkIpBlockInput)(nil)).Elem(), PublicNetworkIpBlockPublicNetworkIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkIpBlockPublicNetworkIpBlockPtrInput)(nil)).Elem(), PublicNetworkIpBlockPublicNetworkIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkMembershipInput)(nil)).Elem(), PublicNetworkMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicNetworkMembershipArrayInput)(nil)).Elem(), PublicNetworkMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterConfigurationInput)(nil)).Elem(), RancherClusterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterConfigurationPtrInput)(nil)).Elem(), RancherClusterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterConfigurationCertificatesInput)(nil)).Elem(), RancherClusterConfigurationCertificatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterConfigurationCertificatesPtrInput)(nil)).Elem(), RancherClusterConfigurationCertificatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterMetadataInput)(nil)).Elem(), RancherClusterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterMetadataArrayInput)(nil)).Elem(), RancherClusterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterNodePoolsInput)(nil)).Elem(), RancherClusterNodePoolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterNodePoolsPtrInput)(nil)).Elem(), RancherClusterNodePoolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterNodePoolsNodeInput)(nil)).Elem(), RancherClusterNodePoolsNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterNodePoolsNodeArrayInput)(nil)).Elem(), RancherClusterNodePoolsNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterNodePoolsSshConfigInput)(nil)).Elem(), RancherClusterNodePoolsSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterNodePoolsSshConfigPtrInput)(nil)).Elem(), RancherClusterNodePoolsSshConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterWorkloadConfigurationInput)(nil)).Elem(), RancherClusterWorkloadConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RancherClusterWorkloadConfigurationPtrInput)(nil)).Elem(), RancherClusterWorkloadConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerCloudInitInput)(nil)).Elem(), ServerCloudInitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerCloudInitPtrInput)(nil)).Elem(), ServerCloudInitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetrisControllerInput)(nil)).Elem(), ServerNetrisControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetrisControllerArrayInput)(nil)).Elem(), ServerNetrisControllerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetrisSoftgateInput)(nil)).Elem(), ServerNetrisSoftgateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetrisSoftgatePtrInput)(nil)).Elem(), ServerNetrisSoftgateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationInput)(nil)).Elem(), ServerNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPtrInput)(nil)).Elem(), ServerNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationInput)(nil)).Elem(), ServerNetworkConfigurationIpBlocksConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationPtrInput)(nil)).Elem(), ServerNetworkConfigurationIpBlocksConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlockInput)(nil)).Elem(), ServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput)(nil)).Elem(), ServerNetworkConfigurationIpBlocksConfigurationIpBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockInput)(nil)).Elem(), ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrInput)(nil)).Elem(), ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationInput)(nil)).Elem(), ServerNetworkConfigurationPrivateNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPtrInput)(nil)).Elem(), ServerNetworkConfigurationPrivateNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput)(nil)).Elem(), ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput)(nil)).Elem(), ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkInput)(nil)).Elem(), ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrInput)(nil)).Elem(), ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationInput)(nil)).Elem(), ServerNetworkConfigurationPublicNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPtrInput)(nil)).Elem(), ServerNetworkConfigurationPublicNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput)(nil)).Elem(), ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput)(nil)).Elem(), ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkInput)(nil)).Elem(), ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrInput)(nil)).Elem(), ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageConfigurationInput)(nil)).Elem(), ServerStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageConfigurationPtrInput)(nil)).Elem(), ServerStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageConfigurationRootPartitionInput)(nil)).Elem(), ServerStorageConfigurationRootPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageConfigurationRootPartitionPtrInput)(nil)).Elem(), ServerStorageConfigurationRootPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagInput)(nil)).Elem(), ServerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagArrayInput)(nil)).Elem(), ServerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagTagAssignmentInput)(nil)).Elem(), ServerTagTagAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerTagTagAssignmentPtrInput)(nil)).Elem(), ServerTagTagAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeInput)(nil)).Elem(), StorageNetworkVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeArrayInput)(nil)).Elem(), StorageNetworkVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumeInput)(nil)).Elem(), StorageNetworkVolumeVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumePermissionInput)(nil)).Elem(), StorageNetworkVolumeVolumePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumePermissionArrayInput)(nil)).Elem(), StorageNetworkVolumeVolumePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumePermissionNfInput)(nil)).Elem(), StorageNetworkVolumeVolumePermissionNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumePermissionNfArrayInput)(nil)).Elem(), StorageNetworkVolumeVolumePermissionNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumeTagInput)(nil)).Elem(), StorageNetworkVolumeVolumeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumeTagArrayInput)(nil)).Elem(), StorageNetworkVolumeVolumeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumeTagTagAssignmentInput)(nil)).Elem(), StorageNetworkVolumeVolumeTagTagAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageNetworkVolumeVolumeTagTagAssignmentPtrInput)(nil)).Elem(), StorageNetworkVolumeVolumeTagTagAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagResourceAssignmentInput)(nil)).Elem(), TagResourceAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagResourceAssignmentArrayInput)(nil)).Elem(), TagResourceAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventsEventInput)(nil)).Elem(), GetEventsEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventsEventArrayInput)(nil)).Elem(), GetEventsEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventsEventUserInfoInput)(nil)).Elem(), GetEventsEventUserInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEventsEventUserInfoArrayInput)(nil)).Elem(), GetEventsEventUserInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvoicesPaginatedInvoiceInput)(nil)).Elem(), GetInvoicesPaginatedInvoiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvoicesPaginatedInvoiceArrayInput)(nil)).Elem(), GetInvoicesPaginatedInvoiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvoicesPaginatedInvoiceResultInput)(nil)).Elem(), GetInvoicesPaginatedInvoiceResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInvoicesPaginatedInvoiceResultArrayInput)(nil)).Elem(), GetInvoicesPaginatedInvoiceResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpBlockTagInput)(nil)).Elem(), GetIpBlockTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpBlockTagArrayInput)(nil)).Elem(), GetIpBlockTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationInput)(nil)).Elem(), GetLocationsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationArrayInput)(nil)).Elem(), GetLocationsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationProductCategoryInput)(nil)).Elem(), GetLocationsLocationProductCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationProductCategoryArrayInput)(nil)).Elem(), GetLocationsLocationProductCategoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkMembershipInput)(nil)).Elem(), GetPrivateNetworkMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkMembershipArrayInput)(nil)).Elem(), GetPrivateNetworkMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkServerInput)(nil)).Elem(), GetPrivateNetworkServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrivateNetworkServerArrayInput)(nil)).Elem(), GetPrivateNetworkServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductAvailabilityProductAvailabilityInput)(nil)).Elem(), GetProductAvailabilityProductAvailabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductAvailabilityProductAvailabilityArrayInput)(nil)).Elem(), GetProductAvailabilityProductAvailabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailInput)(nil)).Elem(), GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayInput)(nil)).Elem(), GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductInput)(nil)).Elem(), GetProductsProductArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductArrayInput)(nil)).Elem(), GetProductsProductArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductMetadataInput)(nil)).Elem(), GetProductsProductMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductMetadataArrayInput)(nil)).Elem(), GetProductsProductMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductPlanInput)(nil)).Elem(), GetProductsProductPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProductsProductPlanArrayInput)(nil)).Elem(), GetProductsProductPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicNetworkIpBlockInput)(nil)).Elem(), GetPublicNetworkIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicNetworkIpBlockArrayInput)(nil)).Elem(), GetPublicNetworkIpBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicNetworkMembershipInput)(nil)).Elem(), GetPublicNetworkMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPublicNetworkMembershipArrayInput)(nil)).Elem(), GetPublicNetworkMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotaQuotaEditLimitRequestDetailInput)(nil)).Elem(), GetQuotaQuotaEditLimitRequestDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetQuotaQuotaEditLimitRequestDetailArrayInput)(nil)).Elem(), GetQuotaQuotaEditLimitRequestDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRancherClusterMetadataInput)(nil)).Elem(), GetRancherClusterMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRancherClusterMetadataArrayInput)(nil)).Elem(), GetRancherClusterMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRancherClusterNodePoolInput)(nil)).Elem(), GetRancherClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRancherClusterNodePoolArrayInput)(nil)).Elem(), GetRancherClusterNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRancherClusterNodePoolNodeInput)(nil)).Elem(), GetRancherClusterNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRancherClusterNodePoolNodeArrayInput)(nil)).Elem(), GetRancherClusterNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetrisControllerInput)(nil)).Elem(), GetServerNetrisControllerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetrisControllerArrayInput)(nil)).Elem(), GetServerNetrisControllerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetrisSoftgateInput)(nil)).Elem(), GetServerNetrisSoftgateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetrisSoftgateArrayInput)(nil)).Elem(), GetServerNetrisSoftgateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationInput)(nil)).Elem(), GetServerNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationArrayInput)(nil)).Elem(), GetServerNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfigurationInput)(nil)).Elem(), GetServerNetworkConfigurationIpBlocksConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfigurationArrayInput)(nil)).Elem(), GetServerNetworkConfigurationIpBlocksConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfigurationIpBlockInput)(nil)).Elem(), GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayInput)(nil)).Elem(), GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfigurationInput)(nil)).Elem(), GetServerNetworkConfigurationPrivateNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfigurationArrayInput)(nil)).Elem(), GetServerNetworkConfigurationPrivateNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkInput)(nil)).Elem(), GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayInput)(nil)).Elem(), GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfigurationInput)(nil)).Elem(), GetServerNetworkConfigurationPublicNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfigurationArrayInput)(nil)).Elem(), GetServerNetworkConfigurationPublicNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkInput)(nil)).Elem(), GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayInput)(nil)).Elem(), GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerStorageConfigurationInput)(nil)).Elem(), GetServerStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerStorageConfigurationArrayInput)(nil)).Elem(), GetServerStorageConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerStorageConfigurationRootPartitionInput)(nil)).Elem(), GetServerStorageConfigurationRootPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerStorageConfigurationRootPartitionArrayInput)(nil)).Elem(), GetServerStorageConfigurationRootPartitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerTagInput)(nil)).Elem(), GetServerTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerTagArrayInput)(nil)).Elem(), GetServerTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumeInput)(nil)).Elem(), GetStorageNetworkVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumeArrayInput)(nil)).Elem(), GetStorageNetworkVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumePermissionInput)(nil)).Elem(), GetStorageNetworkVolumePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumePermissionArrayInput)(nil)).Elem(), GetStorageNetworkVolumePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumePermissionNfInput)(nil)).Elem(), GetStorageNetworkVolumePermissionNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumePermissionNfArrayInput)(nil)).Elem(), GetStorageNetworkVolumePermissionNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumeTagInput)(nil)).Elem(), GetStorageNetworkVolumeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStorageNetworkVolumeTagArrayInput)(nil)).Elem(), GetStorageNetworkVolumeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagResourceAssignmentInput)(nil)).Elem(), GetTagResourceAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagResourceAssignmentArrayInput)(nil)).Elem(), GetTagResourceAssignmentArray{})
	pulumi.RegisterOutputType(IpBlockTagOutput{})
	pulumi.RegisterOutputType(IpBlockTagArrayOutput{})
	pulumi.RegisterOutputType(IpBlockTagTagAssignmentOutput{})
	pulumi.RegisterOutputType(IpBlockTagTagAssignmentPtrOutput{})
	pulumi.RegisterOutputType(PrivateNetworkMembershipOutput{})
	pulumi.RegisterOutputType(PrivateNetworkMembershipArrayOutput{})
	pulumi.RegisterOutputType(PrivateNetworkServerOutput{})
	pulumi.RegisterOutputType(PrivateNetworkServerArrayOutput{})
	pulumi.RegisterOutputType(PublicNetworkIpBlockOutput{})
	pulumi.RegisterOutputType(PublicNetworkIpBlockArrayOutput{})
	pulumi.RegisterOutputType(PublicNetworkIpBlockPublicNetworkIpBlockOutput{})
	pulumi.RegisterOutputType(PublicNetworkIpBlockPublicNetworkIpBlockPtrOutput{})
	pulumi.RegisterOutputType(PublicNetworkMembershipOutput{})
	pulumi.RegisterOutputType(PublicNetworkMembershipArrayOutput{})
	pulumi.RegisterOutputType(RancherClusterConfigurationOutput{})
	pulumi.RegisterOutputType(RancherClusterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RancherClusterConfigurationCertificatesOutput{})
	pulumi.RegisterOutputType(RancherClusterConfigurationCertificatesPtrOutput{})
	pulumi.RegisterOutputType(RancherClusterMetadataOutput{})
	pulumi.RegisterOutputType(RancherClusterMetadataArrayOutput{})
	pulumi.RegisterOutputType(RancherClusterNodePoolsOutput{})
	pulumi.RegisterOutputType(RancherClusterNodePoolsPtrOutput{})
	pulumi.RegisterOutputType(RancherClusterNodePoolsNodeOutput{})
	pulumi.RegisterOutputType(RancherClusterNodePoolsNodeArrayOutput{})
	pulumi.RegisterOutputType(RancherClusterNodePoolsSshConfigOutput{})
	pulumi.RegisterOutputType(RancherClusterNodePoolsSshConfigPtrOutput{})
	pulumi.RegisterOutputType(RancherClusterWorkloadConfigurationOutput{})
	pulumi.RegisterOutputType(RancherClusterWorkloadConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerCloudInitOutput{})
	pulumi.RegisterOutputType(ServerCloudInitPtrOutput{})
	pulumi.RegisterOutputType(ServerNetrisControllerOutput{})
	pulumi.RegisterOutputType(ServerNetrisControllerArrayOutput{})
	pulumi.RegisterOutputType(ServerNetrisSoftgateOutput{})
	pulumi.RegisterOutputType(ServerNetrisSoftgatePtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationIpBlocksConfigurationOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationIpBlocksConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationIpBlocksConfigurationIpBlockServerIpBlockPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPrivateNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPrivateNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkServerPrivateNetworkPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPublicNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPublicNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkOutput{})
	pulumi.RegisterOutputType(ServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkServerPublicNetworkPtrOutput{})
	pulumi.RegisterOutputType(ServerStorageConfigurationOutput{})
	pulumi.RegisterOutputType(ServerStorageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerStorageConfigurationRootPartitionOutput{})
	pulumi.RegisterOutputType(ServerStorageConfigurationRootPartitionPtrOutput{})
	pulumi.RegisterOutputType(ServerTagOutput{})
	pulumi.RegisterOutputType(ServerTagArrayOutput{})
	pulumi.RegisterOutputType(ServerTagTagAssignmentOutput{})
	pulumi.RegisterOutputType(ServerTagTagAssignmentPtrOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeArrayOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumeOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumePermissionOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumePermissionArrayOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumePermissionNfOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumePermissionNfArrayOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumeTagOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumeTagArrayOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumeTagTagAssignmentOutput{})
	pulumi.RegisterOutputType(StorageNetworkVolumeVolumeTagTagAssignmentPtrOutput{})
	pulumi.RegisterOutputType(TagResourceAssignmentOutput{})
	pulumi.RegisterOutputType(TagResourceAssignmentArrayOutput{})
	pulumi.RegisterOutputType(GetEventsEventOutput{})
	pulumi.RegisterOutputType(GetEventsEventArrayOutput{})
	pulumi.RegisterOutputType(GetEventsEventUserInfoOutput{})
	pulumi.RegisterOutputType(GetEventsEventUserInfoArrayOutput{})
	pulumi.RegisterOutputType(GetInvoicesPaginatedInvoiceOutput{})
	pulumi.RegisterOutputType(GetInvoicesPaginatedInvoiceArrayOutput{})
	pulumi.RegisterOutputType(GetInvoicesPaginatedInvoiceResultOutput{})
	pulumi.RegisterOutputType(GetInvoicesPaginatedInvoiceResultArrayOutput{})
	pulumi.RegisterOutputType(GetIpBlockTagOutput{})
	pulumi.RegisterOutputType(GetIpBlockTagArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationProductCategoryOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationProductCategoryArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkMembershipOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkServerOutput{})
	pulumi.RegisterOutputType(GetPrivateNetworkServerArrayOutput{})
	pulumi.RegisterOutputType(GetProductAvailabilityProductAvailabilityOutput{})
	pulumi.RegisterOutputType(GetProductAvailabilityProductAvailabilityArrayOutput{})
	pulumi.RegisterOutputType(GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailOutput{})
	pulumi.RegisterOutputType(GetProductAvailabilityProductAvailabilityLocationAvailabilityDetailArrayOutput{})
	pulumi.RegisterOutputType(GetProductsProductOutput{})
	pulumi.RegisterOutputType(GetProductsProductArrayOutput{})
	pulumi.RegisterOutputType(GetProductsProductMetadataOutput{})
	pulumi.RegisterOutputType(GetProductsProductMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetProductsProductPlanOutput{})
	pulumi.RegisterOutputType(GetProductsProductPlanArrayOutput{})
	pulumi.RegisterOutputType(GetPublicNetworkIpBlockOutput{})
	pulumi.RegisterOutputType(GetPublicNetworkIpBlockArrayOutput{})
	pulumi.RegisterOutputType(GetPublicNetworkMembershipOutput{})
	pulumi.RegisterOutputType(GetPublicNetworkMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetQuotaQuotaEditLimitRequestDetailOutput{})
	pulumi.RegisterOutputType(GetQuotaQuotaEditLimitRequestDetailArrayOutput{})
	pulumi.RegisterOutputType(GetRancherClusterMetadataOutput{})
	pulumi.RegisterOutputType(GetRancherClusterMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetRancherClusterNodePoolOutput{})
	pulumi.RegisterOutputType(GetRancherClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetRancherClusterNodePoolNodeOutput{})
	pulumi.RegisterOutputType(GetRancherClusterNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetrisControllerOutput{})
	pulumi.RegisterOutputType(GetServerNetrisControllerArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetrisSoftgateOutput{})
	pulumi.RegisterOutputType(GetServerNetrisSoftgateArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationIpBlocksConfigurationOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationIpBlocksConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationIpBlocksConfigurationIpBlockOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationIpBlocksConfigurationIpBlockArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPrivateNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPrivateNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPrivateNetworkConfigurationPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPublicNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPublicNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkOutput{})
	pulumi.RegisterOutputType(GetServerNetworkConfigurationPublicNetworkConfigurationPublicNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetServerStorageConfigurationOutput{})
	pulumi.RegisterOutputType(GetServerStorageConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServerStorageConfigurationRootPartitionOutput{})
	pulumi.RegisterOutputType(GetServerStorageConfigurationRootPartitionArrayOutput{})
	pulumi.RegisterOutputType(GetServerTagOutput{})
	pulumi.RegisterOutputType(GetServerTagArrayOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumeOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumePermissionOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumePermissionArrayOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumePermissionNfOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumePermissionNfArrayOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumeTagOutput{})
	pulumi.RegisterOutputType(GetStorageNetworkVolumeTagArrayOutput{})
	pulumi.RegisterOutputType(GetTagResourceAssignmentOutput{})
	pulumi.RegisterOutputType(GetTagResourceAssignmentArrayOutput{})
}
